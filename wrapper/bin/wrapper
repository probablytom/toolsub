#!/usr/bin/env bash

# Translate complex compiler driver invocations into simple and
# (optionally) wrappable compilation steps: preprocess, compile,
# assemble, link. We work in one of two ways.
#
# (1) Using gcc's -wrapper option, the compiler driver will invoke
# us instead of cc1, etc., with the full subcommand path as $1.
# The default behaviour is to perform a series of single-operation
# (preprocess or compile or assemble or link) invocations of the
# compiler driver (gcc) for preprocess/compile or the separate tool
# (as, collect2) for assemble/link. However, each of those operations can be
# customised by setting environment variables:
#
# CPP       default: $CC_DRIVER -E      where CC_DRIVER is inferred
# CC        default: $CC_DRIVER -S      where CC_DRIVER is inferred
# AS        default: as                 FIXME: should be "whatever assembler the driver would run"?
# LD        default: ld                 (not collect2, because we have a nice way of wrapping that)
#
# (These variables denote replacement commands; they do not receive a further
# command as their first argument -- unlike this wrapper script itself, when
# it is run e.g. by gcc -wrapper. Each variable's string value is subject to
# shell expansion and word splitting, so can be multiple commands and use
# $VARIABLES. Some useful variables are set by this script. FIXME: document.)
#
# ... and this script is designed to be extended by a client that
# sources it, so the replacement commands can be shell functions.
#
# (2) Or we can be run as 'wrapcc', or anything matching 'wrap*',
# and the compiler driver command in $@, and we will interrogate the
# compiler using -### and re-invoke ourselves as a wrapper. This is
# useful for clang which does not understand -wrapper but does
# understand -###. Again, constituent subcommands will be rewritten. In
# fact we use -### to emulate option 1: each subcommand is run under
# the wrapper.
#
#   ABOUT collect2: it is used to implement global initialization and destruction
#   in the GNU toolchain, without assuming a loader that supports such features
#   natively. I think any statically linked environment might not?
#   It pulls in __main from libgcc and ensures it has a table of constructors
#   to run. On ELF platforms under static linking, do .ctors and .dtors and .init and .fini
#   and .init_array and .fini_array take effect in the loader? Or is this mechanism
#   i.e. explicit startup code for doing so, needed?
#   Since there is no .dynamic section mandated and no section headers need be present either,
#   I guess it is needed?
#
# SANITY CHECK: how can we use the above to run, say, cilpp -real-cpp '$driver -E' -plugin foo.cmx -fpass-foo ?
# I think so. Run the wrapper with CPP="cilpp -real-cpp \"$CC_DRIVER -E\""
# and the wrapper will set CC_DRIVER as needed. FIXME: who transforms -Wp,BLAH ?
# GAH. Possible problem with -Wp,-blah. It has already been lowered to -blah in the
# cc1 command, so it needs to be lifted back up to -Wp,-blah for the driver command.
# YES. This is where glibly defaulting CPP to "$CC_DRIVER -E" is not right.

# So what's our contract? We can undertake to lift and lower as needed, but if
# we lifted from cc1 to driver, it means CPP can never be a bone fide cpp command.
# That is at least consistent with 'make'. However, it falls short of what we
# hoped which is that in the design of 'cilpp' or another CPP-satisfying tool it
# can be left to the caller: if they supply cpp-style args then the delegated-to
# command can be cpp, otherwise it can be cc -E. Hmm, or does it fall short? I think
# cilpp can plausibly still be written this way, just that currently we always give
# it driver-style args and a driver-based -real-cpp. But we
# should be able to write it s.t. the real requirement is just that the args we
# give it are well-matched to what we give it as -real-cpp -- but they could be
# driver-style or cpp-style or something else entirely.
#
# I considered providing a property about arg order as documented in cilpp.ml, so that
#  -o and -Wp,* and -Xpreprocessor * would appear before other arguments.
# GAH, but with the linker this is a bad idea: -Wl,--start-group and -Wl,--end-group
# need to have their order preserved w.r.t. other arguments.

# Since we want to be the unique script that undertakes to understand all cc/cc1
# options and whether they take an argument, we can (in principle) reliably detect
# '-Wp,blah'. Maybe we need to create a side channel, "CPP_TARGETED_OPTS" and pass
# that, i.e. to explicitly identify relevant options to tools, so they needn't grok the
# whole command line. E.g. a tool like cilpp that does not understand the entire
# driver command line can still identify the options that are directed at it. Otherwise,
# once it sees an option it doesn't recognise, it'd have to ignore all later options.
# If it gets CPP_TARGETED_OPTIONS, then it knows that -o ... and -MF ...
# and -fpass-* and -fplugin=* will all be identified in that variable.
# BUT PROBLEM: it still wants to delete them from the command line, to avoid passing
# them to the real cpp... and if they are not unique, e.g. because one is really a
# filename, then which one to delete? CPP_TARGETED_OPTIONS could identify the positions too.
#
# We are then basically doing the cmdline-scanning on behalf of the cpp wrapper tool.
# But for a single-tool invocation, aren't *all* options "targeted"? What
# does "targeted" mean? In our case we know there are some options that cilpp
# will process. So those are the "targeted" ones. But that's coupling to a
# particular tool behaviour... how does this generalise?

# I think the answer is that as well as CPP="cppwrapper" we need CC_IDENTIFY_ARGS="-fpass-JARG"
# i.e. to provide a vaguely getopt-like description of the arguments that our wrapper
# cares about. Then our scanner can pass these as CC_IDENTIFIED_ARGS="1-fpass-dumpallocs"
# OR should that be "1-Wp,-fpass-dumpallocs"?
# i.e. how does this interact with lifting?
# It's our design that we want to lift the cc1 command back to a driver command.
# so that our wrapper is specified as CPP="cilpp -real-cpp \"$CC_DRIVER -E\""
# and we will expand the $CC_DRIVER when we run it.
# Then what goes in the above CC_IDENTIFY_ARGS and CC_IDENTIFIED_ARGS?
# Our wrapper does not care whether its targeted options were decorated with
# -Wp,*, -Xpreprocessor or so on. But then, it is masquerading as a driver so
# it does, after all, care about processing those.
#
# Perhaps the rule is that (1) we always lift using -Xpreprocessor, and (2)
# we identify only the CPP opt words, not the -Xpreprocessor bit. The tool
# is going to pass through most options to the inferior tool, regardless of
# whether that is emulating the driver or cc1 or cpp.
# 
# Maybe we want to support CPP_IS_DRIVER or CPP_IS_CC1LIKE, and forget about
# lifting for cilpp? AH NO, but if we don't lift then we can't use 'cc -E' as
# the "real CPP"!
#
# We just say that CC_IDENTIFIED_ARGS is non-lifted, but can be non-contiguous.
# It works by identifying argument positions... if we had to lift them in order to
# push them through the driver, we inserted -Xpreprocessor beforehand, but the
# position we include in CC_IDENTIFIED_ARGS is the bona-fide position, not the
# position of -Xpreprocessor.
#
# This might be weird in the case of -MD <file> as seen by cc1. Should the cilpp
# or similar tool really have to know about this? I think we have to rely on
# normalizing that away... it is super-irregular. (CHECK: does clang's cc1 have
# this problem? NO, but it expands to a "-dependency-file" option. GAH. So
# how would we run this by our cilpp-like tool? It does not lift straightforwardly
# so ...)

# Note that there is no -Xcompiler option.

# If we are symlinked under a name ending '-cflags', '-cppflags',
# '-ldflags' etc, we print out the options that one should pass
# to the compiler for the wrapper to be employed. So you can do
#
# gcc `/path/to/this/file/wrapper-cflags` <... normal gcc args...>
#
# to run with the alternative cpp, and so on.

if [[ -n "$PROFILE_CC_WRAPPER" ]]; then
    if ! [[ -r /proc/timer_list ]]; then
        echo "WARNING: not profiling; check that /proc/timer_list exists and is readable" 1>&2
    else
        echo "Profile columns: <last command time> <total time> <last command>" 1>&2
        . "$(dirname "$0")"/elap.bash-v2 trap2
    fi
fi

debug_print () {
    lvl="$1"
    shift
    if [[ "$DEBUG_CC" -ge $lvl ]]; then
        echo "$@" 1>&2
    fi
}

quote_args () {
    for arg in "$@"; do
        echo -n "'"
        echo -n "${arg}" | sed "s/'/\\'/g"
        echo "'"
        echo "${IFS:-$' \t\n'}" | head -c1
    done
}

our_filename="${BASH_SOURCE[0]}"
looks_like_driver_command () {
    # initially $1 is the command name
    case "$1" in
        (*sh)   
            echo "Bailing rather than believing driver is $1" 1>&2
            return 1
        ;;
        (*)
            true
        ;;
    esac
    while shift || break; do case "$1" in
        ('-wrapper')
            if [[ -n "$(readlink -f "$2")" ]] && \
               [[ "$(readlink -f "$2" )" == "$(readlink -f "$our_filename")" ]]; then
               return 0  # definitely a wrapper
            fi
            ;;
        (*) ;;
    esac; done
    return 1
}

# REMEMBER (about naming / terminology): the entire command line consists of "args".
# Some "args" are "opts"; others are input files.
# Some args, if they follow an option that takes a separate argument, are also "optargs".
# But "optargs" can also occur within "opts"; this is the "joined argument" case.
# These terms ("separate" and "joined") are taken from the GCC documentation.

# Here is how we scrape the compiler documentation to generate our big case statements.
# Options end either with '='  or with ' ARGSPEC' where ARGSPEC is
# something like '<arg>' or '{yes|no}' or '[...]' or exceptionally FILE
# However, ARGSPECs can also be embedded into what looks like the option name,
# as with "-Wl,<arg>" or with "-fgo-optimize-<type>"
# and argument names need not be unique, e.g. since '-std=c99' is documented separately
# from 'std=c11'.
# We assume that anything beginning '<' or '{' or '[' is an argspec and so
# should be replaced with '*'.
# We take '=' and ' ' literally, i.e. we assume that one cannot be replaced
# with another. This is necessry because gcc has both '-save-temps' (no arg)
# and '-save-temps=<arg>'.
# This means we replace '=' with '=*'. Do this first, i.e. before handling '<' etc.
select_option_doclines () { sed -n '/^[[:blank:]]\{1,8\}\([-@][^=[:blank:]<>].*\)/ {s//\1/;p}'; }
# this handles '@FILE' specially
# and the syntax for "-fopt-info[-<type>=filename]"
# and                "-fenable-[tree|rtl|ipa]-<pass>=range1+range2"
label_joined_args () { sed 's/=.*/=JARG/' | sed 's/@FILE/@JARG/' | \
sed 's/\(.*\)-fopt-info\[-.*/\1-fopt-info-JARG/' | \
sed 's/-\[.*\].*/-JARG/' | \
sed 's/\([^[:blank:]]\)<.*/\1JARG/'; }
label_separate_args () { sed 's/^\([^[:blank:]]*\)[[:blank:]][[<{]/\1SARG/'; }
# Now we have optlines beginning '-' (or exceptionally '@', for '@FILE'), but
# still with the documentation plain text embedded... here we drop those.
drop_descriptions () { sed 's/\(\(SARG\|JARG\)\|[[:blank:]]\).*/\2/'; }
gcc_driver_optlines () {
    local gcc="$1"
    chop_driver_options () { sed -n '/Options:/,/Target:/ p' | sed '/Target:/ q'; }
    optlines="$( LANG=C ${gcc:-gcc} -v --help 2>/dev/null | chop_driver_options | select_option_doclines )"
    # PROBLEM: gcc lets us enumerate 'joined' and 'separated' args separately,
    # but syntactically some of the 'separated' args appear joined in the output, like -D and -U.
    # This is because they can be written either way! But the output only shows them joined.
    # So we need to add explicitly the "separate but appear joined" cases.
    # PROBLEM: can't restrict '--help=separate' to just the driver, and they don't emerge
    # separated in the output.
    #more_optlines="$( LANG=C ${gcc:-gcc} --help=separate 2>/dev/null | \
    #  select_option_doclines | \
    #  label_joined_args | \
    #  grep JARG | sed 's/=\?JARG/SARG/' )"
    # PROBLEM: -no-integrated-cpp is not showing up, even though it's a real arg.
    # Add it manually. FIXME: scan gcc docs for any more like this. '-wrapper' is one!
    # FIXME: handle -g*, -f*, -m*, -O*, -W*, --param=* and --param *
    # FIXME: these aren't enough! what about the -M* options? What about -i* for include hackery?
    { echo "-no-integrated-cpp"; echo "-wrapperSARG"
      #echo "$more_optlines"
      echo "$optlines" | label_joined_args | label_separate_args
    } | drop_descriptions
    # PROBLEM: --[no-]opt style is not expanded (do we need this? maybe for cc1?) No, seems not.
}
# EXPERIMENT: can we set the subshell name?
# We use this for profiling
setname () {
    echo -n $1 > /proc/$BASHPID/comm
}
gcc_cc1_optlines () {
    local cc1="$1"
    # HACK: this chopping is probably the nastiest bit.
    chop_cc1_options () { sed -n '/The following.*language C/,/Usage: as/ p' | sed '/Usage: as/ q'; }
    # PROBLEM: the cc1 docs don't make separgs explicit.
    # Instead let's scrape them using --help=separate.
    # cc1's "--help=separate" output lists synonyms on the same line, e.g.
    #   --output                              -o
    # ... so if we see a line of this form, we insert a line break and process it as two options
    split_multiopt_lines () {
        sed 's/\([[:blank:]]-[^[:blank:]]\+\([[:blank:]]\+[^-][^[:blank:]]\+\)\?\)[[:blank:]]\+\(-[^[:blank:]]\+\)/\1\n  \3/'
    }
    sep_optlines="$( LANG=C ${cc1:-`gcc -print-prog-name=cc1`} -v --help=separate 2>/dev/null | \
        split_multiopt_lines | select_option_doclines | label_joined_args | \
        sed 's/=\?JARG/SARG/' | label_separate_args | drop_descriptions | \
        sed -n '/SARG$/ {p;d}; s/.*/&SARG/ p' )"
    # Now we scrape all args, but beware that in the output some SARGs really
    # will look like no-arg options. Since an option can't be both SARG and no-arg,
    # we know it's correct to drop the no-arg versions. Use a massive regexp.
    eregexp="$( echo -n "$sep_optlines" | sed 's/SARG$//' | tr '\n' '|' | sed 's/|$//' )"
    optlines="$( LANG=C ${gcc:-gcc} -v --help 2>/dev/null | chop_cc1_options | select_option_doclines )"
    { echo "$optlines" | label_joined_args | label_separate_args | drop_descriptions | \
      egrep -v "^($eregexp)\$"
      echo "$sep_optlines"; }
    # This is looking OK but some weirdnesses:
    # -undef without any arg -- is that correct? Yes.
    # no -g3
}
clang_optlines () {
    local clang="$1"
    # FIXME: haven't inspected this very carefully
    # but it seems to do the right thing
    { LANG=C ${clang:-clang} --help; LANG=C ${clang:-clang} -cc1 --help; } | select_option_doclines | label_joined_args | \
         label_separate_args | drop_descriptions
    echo "-cc1"
}
# Now are we ready to tackle scanning the command lines? Almost.
# Generate the shell code we need. We will paste it.
optlines_to_caselines () {
    # we sort in reverse order so that SARG comes before JARG comes before (no suffix)
    sort -r | uniq | \
    sed -En '/(.*)SARG$/   {s//(\1)  fullopt="$1"; canonopt="\1"; optarg="$2"; inc=2;;/;p;d}
             /(([^=]*)=?)JARG$/ {s//(\1*) fullopt="$1"; canonopt="\2"; optarg="$( echo "\$1" | sed -E "s^\1^^" )"; inc=1 ;;/;p;d}
             /^$/          d
             /.*/          {s//(&)   fullopt="$1"; canonopt="&"; inc=1 ;;/;p;d}'
    # FIXME: there seems to be a big performance incentive to put frequently-seen
    # arguments higher in the list, so that scanning can skip more quickly to the end
    # of the case statement. TEST THIS theory before putting time into doing anything
    # clever here.
}

# use this with 'eval', having set $prefix, to declare
# all the arrays we set as output when scanning.
declare_scan_outputs=\
$'declare    ${prefix}_argcount\n'\
$'declare -a ${prefix}_args\n'\
$'declare -a ${prefix}_input_files_by_argposn\n'\
$'declare -a ${prefix}_canonopts_by_argposn\n'\
$'declare -a ${prefix}_fullopts_by_argposn\n'\
$'declare -A ${prefix}_optposns_by_canonopt\n'\
$'declare -A ${prefix}_optposns_by_fullopt\n'\
$'declare -A ${prefix}_optargposns_by_canonopt\n'\
$'declare -a ${prefix}_optargs_by_argposn\n'\
$'declare -a ${prefix}_incs_by_argposn'

# Here is how we scan a command line. The case-splitting of command options
# happens in a separate function passed as an argument. The output goes into
# various variables that are written by this function... for *_args (array) and
# *_argcount, the '*' part is passed as the second argument.
scan_generic () {
    local casefunc="$1"
    local var_prefix="$2"
    local cmd="$3"
    local loop_restart_callback="$4"
    issued_helpmsg=0
    shift; shift; shift; shift
    # How can we share the logic that wraps around what is generated?
    # - the case stmt is its own function (name taken as an argument)
    # - inc is initially 0
    # - a separate case split in the caller handles -, -*, * -- detected by inc == 0
    declare -n argcount=${var_prefix}_argcount
    declare -n args=${var_prefix}_args
    declare -n input_files_by_argposn=${var_prefix}_input_files_by_argposn
    declare -n canonopts_by_argposn=${var_prefix}_canonopts_by_argposn
    declare -n fullopts_by_argposn=${var_prefix}_fullopts_by_argposn
    declare -n incs_by_argposn=${var_prefix}_incs_by_argposn
    declare -n optposns_by_canonopt=${var_prefix}_optposns_by_canonopt
    declare -n optposns_by_fullopt=${var_prefix}_optposns_by_fullopt
    declare -n optargposns_by_canonopt=${var_prefix}_optargposns_by_canonopt
    declare -n optargs_by_argposn=${var_prefix}_optargs_by_argposn
    argcount=0
    realposn=1
    while true; do
        debug_print 2 "Scanning: \`$1'" 1>&2
        fullopt=""; canonopt=""; inc=0; optarg=""
        # we store args at position 1 onwards
        eval debug_print 2  "${var_prefix}_args"'[$((${argcount}+1))]="$1"' 1>&2
        eval "${var_prefix}_args"'[$((${argcount}+1))]="$1"'
        $casefunc "$@"  # will set 'inc' and 'canonopt' for any option it handles, and maybe 'optarg'
        if [[ $inc -eq 0 ]]; then
            debug_print 2 "Input file or option? \`$1'" 1>&2
            case "$1" in
            (-) # stdin/stdout
                # this is a filename -- do something with it
                input_files_by_argposn[$realposn]="$1"
            ;;
            (-*)    # unrecognised option
                echo "WARNING: $var_prefix: unrecognised optionlike argument $1; assuming argumentless" 1>&2
                if [[ $issued_helpmsg -eq 0 ]]; then
                    echo "Try: diff -u <( sed -n \$'/# BEGIN GENERATED FROM ${var_prefix}_optlines/,\$ p\\n/# END GENERATED FROM ${var_prefix}_optlines/ q' "$0" ) <( . $0 && ${var_prefix}_optlines ${cmd} | optlines_to_caselines )"
                    issued_helpmsg=1
                fi
                # what to do? assume it's an option with no argument
                canonopt="$1"; fullopt="$1"; inc=1
                ;;
            ('')
                echo "BUG?: empty filename" 1>&2
                exit 1  # FIXME: detect empty filenames coming in, and don't BUG on those
                ;;
            (*)
                # this is a filename -- do something with it
                input_files_by_argposn[$realposn]="$1"
                inc=1
            ;;
            esac
        fi
        # We optionally take a callback that can tell us to restart the loop body
        # without incrementing.
        # This is used by scan_driver_pp to rewrite any option embedded in -Wp,*
        # and then re-scan.
        if [[ -n "$loop_restart_callback" ]]; then
            # echo "Calling back: $loop_restart_callback $@" 1>&2
            # Need to call the callback in our current shell, not a subshell,
            # for its writes to ppargs to be visible.
            tmpfile="$(mktemp)"
            $loop_restart_callback "$@" >"$tmpfile"
            status=$?
            response="$(cat "$tmpfile")"
            rm -f "$tmpfile"
            test $status -eq 0 && \
               { #echo "setting response $response" 1>&2
                 set -- $response
                 #echo "done" 1>&2
                 continue; }
        fi
        if [[ $inc == 0 ]]; then
            echo "BUG: forgot to increment realposn" 1>&2
        fi

        # We just got "canonopt" and "optarg" -- do something with them.
        # We are keeping:
        # input_files_by_argposn  sparse array, one entry for each arg that is an input file
        # canonopts_by_argposn    sparse array, one entry for each arg that is an option, canonicalised
        # fullopts_by_argposn     sparse array, one entry for each arg that is an option, not canonicalised
        # incs_by_argposn         sparse array, one entry for whenever there is an 'inc' > 1 -- how many to increment argpos by to get to the next input file or opt
        # optposns_by_canonopt    associative array, one entry (space-sep list of indices) per canonopt seen
        # optposns_by_canonopt    associative array, one entry (space-sep list of indices) per fullopt seen
        # optargposns_by_canonopt associative array, one entry (space-sep list of indices) per optarg seen
        #    ^-- is this really useful? for a JARG it gives us the whole opt, not the isolated optarg
        #    Maybe we should just use the inc and keep optargs_by_argposn? YES
        # optargs_by_argposn      sparse array, one entry (the optarg) for each arg that embodies an optarg
        # REMEMBER: be consistent about "posn" versus "pos"
        # We need to remember 'increments' on a per-argposn basis.
        # We extend this to capture the optarg also.
        # At any position, there may be an optarg... e.g. for -foo=bar, "bar" is at
        # whatever position "-foo" is at, but for "-foo bar", "bar" is at the next position.
        if [[ $inc -gt 1 ]]; then incs_by_argposn[$realposn]="$inc"; fi
        fullopts_by_argposn[$realposn]="$fullopt"
        if [[ -n "$canonopt" ]]; then
            debug_print 1 "At realposn $realposn got canonopt $canonopt (fullopt: $fullopt) and optarg $optarg" 1>&2
            canonopts_by_argposn[$realposn]="$canonopt"
            existing_optposns_for_this_canonopt="${optposns_by_canonopt["$canonopt"]}"
            optposns_by_canonopt["$canonopt"]="${existing_optposns_for_this_canonopt:+${existing_optposns_for_this_canonopt} }$realposn"
            fullopts_by_argposn[$realposn]="$fullopt"
            existing_optposns_for_this_fullopt="${optposns_by_fullopt["$fullopt"]}"
            optposns_by_fullopt["$fullopt"]="${existing_optposns_for_this_fullopt:+${existing_optposns_for_this_fullopt} }$realposn"
            if [[ -n "$optarg" ]]; then
                # # remember arguments as a list of positions -- yes it's indirect but
                # # args may have spaces in them, which would mess up a space-separated list
                # existing_argposns_for_this_canonopt="${optargposns_by_canonopt["$canonopt"]}"
                # optargposns_by_canonopt["$canonopt"]="${existing_argposns_for_this_canonopt:+${existing_argposns_for_this_canonopt} }$realposn"

                # We have an arg and a canonopt, but since some optargs are JARGS,
                # the optarg may or may not be isolated in the argument list;
                # If it is, it is at the next argposn and inc is 2. Otherwise it is
                # jammed into the string at the current argposn and inc is 1.
                # (One day we may want to capture multiple args, in forms like
                # -foptimize-blah=foo, where both "blah" and "foo" are arguments.
                # That will make all the above 'case' statment more interesting but
                # it should still basically fit the model.
                optargs_by_argposn[$(( $realposn + $inc - 1))]="$optarg"
                # Also remember arguments as a list of positions -- yes it's indirect but
                # args may have spaces in them, which would mess up a space-separated list
                existing_argposns_for_this_canonopt="${optargposns_by_canonopt["$canonopt"]}"
                optargposns_by_canonopt["$canonopt"]="${existing_argposns_for_this_canonopt:+${existing_argposns_for_this_canonopt} }$realposn"
            fi
        fi
        # snarf the unmodified arg and increment realpos
        debug_print 2 "inc'ing by $inc" 1>&2
        for n in `seq 1 $inc`; do
        # For "shift": "The return status is greater than zero if n is greater than $#
        # or less than zero; otherwise 0."
        # So if we have only "$1" and we do 'shift', it will succeed but we will have
        # nothing in $1 any more. So 'while shift || break' is never a sensible way
        # to iterate... maybe 'while { arg="$1"; [ $# -gt 1 ] && shift; }'
            eval "${var_prefix}_args"'[$realposn]="$1"'
            shift
            realposn=$(( $realposn + 1 ))
            argcount=$(( $argcount + 1 ))
            if [[ $# -eq 0 ]]; then
                debug_print 2 "${var_prefix}_argcount is finally $argcount" 1>&2
                return
            fi
        done
    done
    # UNREACHABLE
}

gcc_driver_optcases () {
case "$1" in
# BEGIN GENERATED FROM gcc_driver_optlines | optlines_to_caselines
(-x)  fullopt="$1"; canonopt="-x"; optarg="$2"; inc=2;;
(-v)   fullopt="$1"; canonopt="-v"; inc=1 ;;
(-time)   fullopt="$1"; canonopt="-time"; inc=1 ;;
(-std=*) fullopt="$1"; canonopt="-std"; optarg="$( echo "$1" | sed -E "s^-std=^^" )"; inc=1 ;;
(-specs=*) fullopt="$1"; canonopt="-specs"; optarg="$( echo "$1" | sed -E "s^-specs=^^" )"; inc=1 ;;
(-shared)   fullopt="$1"; canonopt="-shared"; inc=1 ;;
(-save-temps=*) fullopt="$1"; canonopt="-save-temps"; optarg="$( echo "$1" | sed -E "s^-save-temps=^^" )"; inc=1 ;;
(-save-temps)   fullopt="$1"; canonopt="-save-temps"; inc=1 ;;
(-print-sysroot-headers-suffix)   fullopt="$1"; canonopt="-print-sysroot-headers-suffix"; inc=1 ;;
(-print-sysroot)   fullopt="$1"; canonopt="-print-sysroot"; inc=1 ;;
(-print-search-dirs)   fullopt="$1"; canonopt="-print-search-dirs"; inc=1 ;;
(-print-prog-name=*) fullopt="$1"; canonopt="-print-prog-name"; optarg="$( echo "$1" | sed -E "s^-print-prog-name=^^" )"; inc=1 ;;
(-print-multiarch)   fullopt="$1"; canonopt="-print-multiarch"; inc=1 ;;
(-print-multi-os-directory)   fullopt="$1"; canonopt="-print-multi-os-directory"; inc=1 ;;
(-print-multi-lib)   fullopt="$1"; canonopt="-print-multi-lib"; inc=1 ;;
(-print-multi-directory)   fullopt="$1"; canonopt="-print-multi-directory"; inc=1 ;;
(-print-libgcc-file-name)   fullopt="$1"; canonopt="-print-libgcc-file-name"; inc=1 ;;
(-print-file-name=*) fullopt="$1"; canonopt="-print-file-name"; optarg="$( echo "$1" | sed -E "s^-print-file-name=^^" )"; inc=1 ;;
(-pipe)   fullopt="$1"; canonopt="-pipe"; inc=1 ;;
(-pie)   fullopt="$1"; canonopt="-pie"; inc=1 ;;
(-pass-exit-codes)   fullopt="$1"; canonopt="-pass-exit-codes"; inc=1 ;;
(-o)  fullopt="$1"; canonopt="-o"; optarg="$2"; inc=2;;
(-no-canonical-prefixes)   fullopt="$1"; canonopt="-no-canonical-prefixes"; inc=1 ;;
(-dumpversion)   fullopt="$1"; canonopt="-dumpversion"; inc=1 ;;
(-dumpspecs)   fullopt="$1"; canonopt="-dumpspecs"; inc=1 ;;
(-dumpmachine)   fullopt="$1"; canonopt="-dumpmachine"; inc=1 ;;
(-c)   fullopt="$1"; canonopt="-c"; inc=1 ;;
(-Xpreprocessor)  fullopt="$1"; canonopt="-Xpreprocessor"; optarg="$2"; inc=2;;
(-Xlinker)  fullopt="$1"; canonopt="-Xlinker"; optarg="$2"; inc=2;;
(-Xassembler)  fullopt="$1"; canonopt="-Xassembler"; optarg="$2"; inc=2;;
(-Wp,*) fullopt="$1"; canonopt="-Wp,"; optarg="$( echo "$1" | sed -E "s^-Wp,^^" )"; inc=1 ;;
(-Wl,*) fullopt="$1"; canonopt="-Wl,"; optarg="$( echo "$1" | sed -E "s^-Wl,^^" )"; inc=1 ;;
(-Wa,*) fullopt="$1"; canonopt="-Wa,"; optarg="$( echo "$1" | sed -E "s^-Wa,^^" )"; inc=1 ;;
(-S)   fullopt="$1"; canonopt="-S"; inc=1 ;;
(-E)   fullopt="$1"; canonopt="-E"; inc=1 ;;
(-B)  fullopt="$1"; canonopt="-B"; optarg="$2"; inc=2;;
(--version)   fullopt="$1"; canonopt="--version"; inc=1 ;;
(--target-help)   fullopt="$1"; canonopt="--target-help"; inc=1 ;;
(--sysroot=*) fullopt="$1"; canonopt="--sysroot"; optarg="$( echo "$1" | sed -E "s^--sysroot=^^" )"; inc=1 ;;
(--help=*) fullopt="$1"; canonopt="--help"; optarg="$( echo "$1" | sed -E "s^--help=^^" )"; inc=1 ;;
(--help)   fullopt="$1"; canonopt="--help"; inc=1 ;;
(-###)   fullopt="$1"; canonopt="-###"; inc=1 ;;
# END GENERATED FROM gcc_driver_optlines | optlines_to_caselines
# manually added ones (FIXME: report gcc bugs!):
(-wrapper) fullopt="$1"; canonopt="-wrapper"; optarg="$2"; inc=2 ;;
(-no-integrated-cpp) fullopt="$1"; canonopt="-no-integrated-cpp"; inc=1 ;;
(-g[1-9]) fullopt="$1"; canonopt="-g"; optarg="$( echo "$1" | sed -E "s^-g^^" )"; inc=1 ;;
# remember that in the driver, unlike cc1, -MD takes no argument
(-MD) fullopt="$1"; canonopt="-MD"; inc=1 ;;
(-MMD) fullopt="$1"; canonopt="-MD"; inc=1 ;;
(-U)  fullopt="$1"; canonopt="-U"; optarg="$2"; inc=2;;
(-U*) fullopt="$1"; canonopt="-U"; optarg="$( echo "$1" | sed -E "s^-U^^" )"; inc=1 ;;
(-Os)   fullopt="$1"; canonopt="-Os"; inc=1 ;;
(-Og)   fullopt="$1"; canonopt="-Og"; inc=1 ;;
(-Ofast)   fullopt="$1"; canonopt="-Ofast"; inc=1 ;;
(-O*) fullopt="$1"; canonopt="-O"; optarg="$( echo "$1" | sed -E "s^-O^^" )"; inc=1 ;;
(-MT)  fullopt="$1"; canonopt="-MT"; optarg="$2"; inc=2;;
(-MQ)  fullopt="$1"; canonopt="-MQ"; optarg="$2"; inc=2;;
(-MP)   fullopt="$1"; canonopt="-MP"; inc=1 ;;
(-MM)   fullopt="$1"; canonopt="-MM"; inc=1 ;;
(-MG)   fullopt="$1"; canonopt="-MG"; inc=1 ;;
(-MF)  fullopt="$1"; canonopt="-MF"; optarg="$2"; inc=2;;
(-M)   fullopt="$1"; canonopt="-M"; inc=1 ;;
(-L)  fullopt="$1"; canonopt="-L"; optarg="$2"; inc=2;;
(-I)  fullopt="$1"; canonopt="-I"; optarg="$2"; inc=2;;
(-I*)  fullopt="$1"; canonopt="-I"; optarg="$( echo "$1" | sed -E "s^-I^^" )"; inc=1 ;;
(-D)  fullopt="$1"; canonopt="-D"; optarg="$2"; inc=2;;
(-D*) fullopt="$1"; canonopt="-D"; optarg="$( echo "$1" | sed -E "s^-D^^" )"; inc=1 ;;
(-A)  fullopt="$1"; canonopt="-A"; optarg="$2"; inc=2;;
(-A*) fullopt="$1"; canonopt="-A"; optarg="$( echo "$1" | sed -E "s^-A^^" )"; inc=1 ;;
esac
}
clang_driver_optcases () {
    # FIXME
    true
}
combined_driver_optcases () {
    inc=0
    gcc_driver_optcases "$@"
    if [[ $inc -eq 0 ]]; then
        clang_driver_optcases "$@"
    fi
}
# Now let's do a scanner. NOTE: currently we don't use this driver scanner.
scan_gcc_driver () {
    local gcc="$1"
    shift
    scan_generic gcc_driver_optcases gcc_driver "${gcc:-gcc}" "" "$@"
}
# This is a special scanner that understands the "-Xpreprocessor" and "-Wp,"
# arguments. What does it do? It should be like scan_generic but collect
# *only* the pp-directed args.
#
# PROBLEM: if we hit -Wp, we need to split out its arguments.
# update the args and go around again? The loop is in scan_generic.
# Can we pull out the full core of the loop? No, it's a bit too much
# to pull out. Instead scan_generic will run a callback we give it.
#
# Before doing this, the caller needs to have declared the output
# arrays with the cc_pp prefix, e.g. using 'prefix=cc_pp eval "$declare_scan_outputs"'
# ... without this, expect problems like the following:
# bash: -Wp,: syntax error: operand expected (error token is ",")
#
# We want to accept CPP_OPTS alongside CPP, and if we receive it,
# set CPP_ARG_RANGES when we invoke CPP. Where should we do this?
# CPP_OPTS is providing extra optlines (or optstrings) which we should
# use when we scan for pp options. This isn't when we scan the driver
# options; it's when we have pulled out the pp-directed ones and scan
# them "as if" they are cc1 ones... see 
scan_driver_pp () {
    local driver="$1"
    shift
    declare -a pparg_posns
    pparg_ctr=1 # same counter for both of the above arrays -- start from 1
    # "restart_pp_loop" is called as "$loop_restart_callback during scanning.
    # It will remember the pp-directed args as a list indices, pparg_posns,
    # where an index can be "N" or "N.M"... in the latter case it means the Mth
    # subarg of a -Wp,... option. Subarg indices start at 1.
    scan_generic combined_driver_optcases cc_pp "${driver:-cc}" restart_pp_loop "$@"
}
restart_pp_loop () {
    case "$canonopt" in
        (-Xpreprocessor)
            pparg_posns[$pparg_ctr]=$(( $realposn + 1 ))
            ppargs[$pparg_ctr]="$2"
            pparg_ctr=$(( $pparg_ctr + 1 ))
            return 1  # no need to rewrite
        ;;
        ('-Wp,'*)
            # split out the subargs
            while read subpos arg; do
                pparg_posns[$pparg_ctr]=${realposn}.${subpos}
                debug_print 1 "ppargs[$pparg_ctr]=$arg" 1>&2
                ppargs[$pparg_ctr]="$arg"
                pparg_ctr=$(( $pparg_ctr + 1 ))
            done <<<"$( echo "$1" | sed -nE '/(^-Wp)((,[^,]*)+)/ {s//\2/;p}' | \
                sed 's/^,//' | tr ',' '\n' | cat -n )" # | tee /dev/stderr
            return 1
        ;;
        (*) # do nothing
            return 1  # no need to rewrite
        ;;
    esac
}

#    # leave this here for now
#    gcc_driver_argcount=0
#    realposn=1
#    while true; do
#        canonopt=""; inc=1; optarg=""
#        gcc_driver_args[$gcc_driver_argcount]="$1"; gcc_driver_argcount=$(( $gcc_driver_argcount + 1 ))
#        case "$1" in

scan_gcc_cc1 () {
    local cc1="$1"
    shift
    scan_generic gcc_cc1_optcases gcc_cc1 "${cc1:-cc1}" "" "$@"
}
gcc_cc1_optcases () {
#    gcc_cc1_argcount=0
#    realposn=1
#    while true; do
#        canonopt=""; inc=1; optarg=""
case "$1" in
# BEGIN GENERATED FROM gcc_cc1_optlines | optlines_to_caselines
(-x)  fullopt="$1"; canonopt="-x"; optarg="$2"; inc=2;;
(-w)   fullopt="$1"; canonopt="-w"; inc=1 ;;
(-version)   fullopt="$1"; canonopt="-version"; inc=1 ;;
(-v)   fullopt="$1"; canonopt="-v"; inc=1 ;;
(-undef)   fullopt="$1"; canonopt="-undef"; inc=1 ;;
(-type-stats)   fullopt="$1"; canonopt="-type-stats"; inc=1 ;;
(-trigraphs)   fullopt="$1"; canonopt="-trigraphs"; inc=1 ;;
(-tree-stats)   fullopt="$1"; canonopt="-tree-stats"; inc=1 ;;
(-traditional-cpp)   fullopt="$1"; canonopt="-traditional-cpp"; inc=1 ;;
(-symbol=*) fullopt="$1"; canonopt="-symbol"; optarg="$( echo "$1" | sed -E "s^-symbol=^^" )"; inc=1 ;;
(-std=*) fullopt="$1"; canonopt="-std"; optarg="$( echo "$1" | sed -E "s^-std=^^" )"; inc=1 ;;
(-static-libgfortran)   fullopt="$1"; canonopt="-static-libgfortran"; inc=1 ;;
(-size-sort)   fullopt="$1"; canonopt="-size-sort"; inc=1 ;;
(-reverse-sort)   fullopt="$1"; canonopt="-reverse-sort"; inc=1 ;;
(-remap)   fullopt="$1"; canonopt="-remap"; inc=1 ;;
(-quiet)   fullopt="$1"; canonopt="-quiet"; inc=1 ;;
(-print-value)   fullopt="$1"; canonopt="-print-value"; inc=1 ;;
(-print-objc-runtime-info)   fullopt="$1"; canonopt="-print-objc-runtime-info"; inc=1 ;;
(-pedantic-errors)   fullopt="$1"; canonopt="-pedantic-errors"; inc=1 ;;
(-pedantic)   fullopt="$1"; canonopt="-pedantic"; inc=1 ;;
(-p)   fullopt="$1"; canonopt="-p"; inc=1 ;;
(-objects)   fullopt="$1"; canonopt="-objects"; inc=1 ;;
(-o)  fullopt="$1"; canonopt="-o"; optarg="$2"; inc=2;;
(-nostdlib)   fullopt="$1"; canonopt="-nostdlib"; inc=1 ;;
(-nostdinc++)   fullopt="$1"; canonopt="-nostdinc++"; inc=1 ;;
(-nostdinc)   fullopt="$1"; canonopt="-nostdinc"; inc=1 ;;
(-nocpp)   fullopt="$1"; canonopt="-nocpp"; inc=1 ;;
(-name-sort)   fullopt="$1"; canonopt="-name-sort"; inc=1 ;;
(-mxsaves)   fullopt="$1"; canonopt="-mxsaves"; inc=1 ;;
(-mxsaveopt)   fullopt="$1"; canonopt="-mxsaveopt"; inc=1 ;;
(-mxsavec)   fullopt="$1"; canonopt="-mxsavec"; inc=1 ;;
(-mxsave)   fullopt="$1"; canonopt="-mxsave"; inc=1 ;;
(-mxop)   fullopt="$1"; canonopt="-mxop"; inc=1 ;;
(-mx32)   fullopt="$1"; canonopt="-mx32"; inc=1 ;;
(-mwbnoinvd)   fullopt="$1"; canonopt="-mwbnoinvd"; inc=1 ;;
(-mwaitpkg)   fullopt="$1"; canonopt="-mwaitpkg"; inc=1 ;;
(-mvzeroupper)   fullopt="$1"; canonopt="-mvzeroupper"; inc=1 ;;
(-mvpclmulqdq)   fullopt="$1"; canonopt="-mvpclmulqdq"; inc=1 ;;
(-mvect8-ret-in-mem)   fullopt="$1"; canonopt="-mvect8-ret-in-mem"; inc=1 ;;
(-mveclibabi=*) fullopt="$1"; canonopt="-mveclibabi"; optarg="$( echo "$1" | sed -E "s^-mveclibabi=^^" )"; inc=1 ;;
(-mvaes)   fullopt="$1"; canonopt="-mvaes"; inc=1 ;;
(-muclibc)   fullopt="$1"; canonopt="-muclibc"; inc=1 ;;
(-mtune=*) fullopt="$1"; canonopt="-mtune"; optarg="$( echo "$1" | sed -E "s^-mtune=^^" )"; inc=1 ;;
(-mtune-ctrl=*) fullopt="$1"; canonopt="-mtune-ctrl"; optarg="$( echo "$1" | sed -E "s^-mtune-ctrl=^^" )"; inc=1 ;;
(-mtls-direct-seg-refs)   fullopt="$1"; canonopt="-mtls-direct-seg-refs"; inc=1 ;;
(-mtls-dialect=*) fullopt="$1"; canonopt="-mtls-dialect"; optarg="$( echo "$1" | sed -E "s^-mtls-dialect=^^" )"; inc=1 ;;
(-mtbm)   fullopt="$1"; canonopt="-mtbm"; inc=1 ;;
(-mstv)   fullopt="$1"; canonopt="-mstv"; inc=1 ;;
(-mstringop-strategy=*) fullopt="$1"; canonopt="-mstringop-strategy"; optarg="$( echo "$1" | sed -E "s^-mstringop-strategy=^^" )"; inc=1 ;;
(-mstackrealign)   fullopt="$1"; canonopt="-mstackrealign"; inc=1 ;;
(-mstack-protector-guard=*) fullopt="$1"; canonopt="-mstack-protector-guard"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard=^^" )"; inc=1 ;;
(-mstack-protector-guard-symbol=*) fullopt="$1"; canonopt="-mstack-protector-guard-symbol"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard-symbol=^^" )"; inc=1 ;;
(-mstack-protector-guard-reg=*) fullopt="$1"; canonopt="-mstack-protector-guard-reg"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard-reg=^^" )"; inc=1 ;;
(-mstack-protector-guard-offset=*) fullopt="$1"; canonopt="-mstack-protector-guard-offset"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard-offset=^^" )"; inc=1 ;;
(-mstack-arg-probe)   fullopt="$1"; canonopt="-mstack-arg-probe"; inc=1 ;;
(-mssse3)   fullopt="$1"; canonopt="-mssse3"; inc=1 ;;
(-msseregparm)   fullopt="$1"; canonopt="-msseregparm"; inc=1 ;;
(-msse5)   fullopt="$1"; canonopt="-msse5"; inc=1 ;;
(-msse4a)   fullopt="$1"; canonopt="-msse4a"; inc=1 ;;
(-msse4.2)   fullopt="$1"; canonopt="-msse4.2"; inc=1 ;;
(-msse4.1)   fullopt="$1"; canonopt="-msse4.1"; inc=1 ;;
(-msse4)   fullopt="$1"; canonopt="-msse4"; inc=1 ;;
(-msse3)   fullopt="$1"; canonopt="-msse3"; inc=1 ;;
(-msse2avx)   fullopt="$1"; canonopt="-msse2avx"; inc=1 ;;
(-msse2)   fullopt="$1"; canonopt="-msse2"; inc=1 ;;
(-msse)   fullopt="$1"; canonopt="-msse"; inc=1 ;;
(-msoft-float)   fullopt="$1"; canonopt="-msoft-float"; inc=1 ;;
(-mskip-rax-setup)   fullopt="$1"; canonopt="-mskip-rax-setup"; inc=1 ;;
(-mshstk)   fullopt="$1"; canonopt="-mshstk"; inc=1 ;;
(-msha)   fullopt="$1"; canonopt="-msha"; inc=1 ;;
(-msgx)   fullopt="$1"; canonopt="-msgx"; inc=1 ;;
(-msahf)   fullopt="$1"; canonopt="-msahf"; inc=1 ;;
(-mrtm)   fullopt="$1"; canonopt="-mrtm"; inc=1 ;;
(-mrtd)   fullopt="$1"; canonopt="-mrtd"; inc=1 ;;
(-mregparm=*) fullopt="$1"; canonopt="-mregparm"; optarg="$( echo "$1" | sed -E "s^-mregparm=^^" )"; inc=1 ;;
(-mred-zone)   fullopt="$1"; canonopt="-mred-zone"; inc=1 ;;
(-mrecord-return)   fullopt="$1"; canonopt="-mrecord-return"; inc=1 ;;
(-mrecord-mcount)   fullopt="$1"; canonopt="-mrecord-mcount"; inc=1 ;;
(-mrecip=*) fullopt="$1"; canonopt="-mrecip"; optarg="$( echo "$1" | sed -E "s^-mrecip=^^" )"; inc=1 ;;
(-mrecip)   fullopt="$1"; canonopt="-mrecip"; inc=1 ;;
(-mrdseed)   fullopt="$1"; canonopt="-mrdseed"; inc=1 ;;
(-mrdrnd)   fullopt="$1"; canonopt="-mrdrnd"; inc=1 ;;
(-mrdpid)   fullopt="$1"; canonopt="-mrdpid"; inc=1 ;;
(-mpush-args)   fullopt="$1"; canonopt="-mpush-args"; inc=1 ;;
(-mptwrite)   fullopt="$1"; canonopt="-mptwrite"; inc=1 ;;
(-mprfchw)   fullopt="$1"; canonopt="-mprfchw"; inc=1 ;;
(-mprefetchwt1)   fullopt="$1"; canonopt="-mprefetchwt1"; inc=1 ;;
(-mpreferred-stack-boundary=*) fullopt="$1"; canonopt="-mpreferred-stack-boundary"; optarg="$( echo "$1" | sed -E "s^-mpreferred-stack-boundary=^^" )"; inc=1 ;;
(-mprefer-vector-width=*) fullopt="$1"; canonopt="-mprefer-vector-width"; optarg="$( echo "$1" | sed -E "s^-mprefer-vector-width=^^" )"; inc=1 ;;
(-mprefer-avx128)   fullopt="$1"; canonopt="-mprefer-avx128"; inc=1 ;;
(-mpopcnt)   fullopt="$1"; canonopt="-mpopcnt"; inc=1 ;;
(-mpku)   fullopt="$1"; canonopt="-mpku"; inc=1 ;;
(-mpconfig)   fullopt="$1"; canonopt="-mpconfig"; inc=1 ;;
(-mpcommit)   fullopt="$1"; canonopt="-mpcommit"; inc=1 ;;
(-mpclmul)   fullopt="$1"; canonopt="-mpclmul"; inc=1 ;;
(-mpc80)   fullopt="$1"; canonopt="-mpc80"; inc=1 ;;
(-mpc64)   fullopt="$1"; canonopt="-mpc64"; inc=1 ;;
(-mpc32)   fullopt="$1"; canonopt="-mpc32"; inc=1 ;;
(-momit-leaf-frame-pointer)   fullopt="$1"; canonopt="-momit-leaf-frame-pointer"; inc=1 ;;
(-mnop-mcount)   fullopt="$1"; canonopt="-mnop-mcount"; inc=1 ;;
(-mno-sse4)   fullopt="$1"; canonopt="-mno-sse4"; inc=1 ;;
(-mno-red-zone)   fullopt="$1"; canonopt="-mno-red-zone"; inc=1 ;;
(-mno-push-args)   fullopt="$1"; canonopt="-mno-push-args"; inc=1 ;;
(-mno-fancy-math-387)   fullopt="$1"; canonopt="-mno-fancy-math-387"; inc=1 ;;
(-mno-default)   fullopt="$1"; canonopt="-mno-default"; inc=1 ;;
(-mno-align-stringops)   fullopt="$1"; canonopt="-mno-align-stringops"; inc=1 ;;
(-mmwaitx)   fullopt="$1"; canonopt="-mmwaitx"; inc=1 ;;
(-mmusl)   fullopt="$1"; canonopt="-mmusl"; inc=1 ;;
(-mms-bitfields)   fullopt="$1"; canonopt="-mms-bitfields"; inc=1 ;;
(-mmpx)   fullopt="$1"; canonopt="-mmpx"; inc=1 ;;
(-mmovdiri)   fullopt="$1"; canonopt="-mmovdiri"; inc=1 ;;
(-mmovdir64b)   fullopt="$1"; canonopt="-mmovdir64b"; inc=1 ;;
(-mmovbe)   fullopt="$1"; canonopt="-mmovbe"; inc=1 ;;
(-mmmx)   fullopt="$1"; canonopt="-mmmx"; inc=1 ;;
(-mmitigate-rop)   fullopt="$1"; canonopt="-mmitigate-rop"; inc=1 ;;
(-mmemset-strategy=*) fullopt="$1"; canonopt="-mmemset-strategy"; optarg="$( echo "$1" | sed -E "s^-mmemset-strategy=^^" )"; inc=1 ;;
(-mmemcpy-strategy=*) fullopt="$1"; canonopt="-mmemcpy-strategy"; optarg="$( echo "$1" | sed -E "s^-mmemcpy-strategy=^^" )"; inc=1 ;;
(-mmanual-endbr)   fullopt="$1"; canonopt="-mmanual-endbr"; inc=1 ;;
(-mlzcnt)   fullopt="$1"; canonopt="-mlzcnt"; inc=1 ;;
(-mlwp)   fullopt="$1"; canonopt="-mlwp"; inc=1 ;;
(-mlong-double-80)   fullopt="$1"; canonopt="-mlong-double-80"; inc=1 ;;
(-mlong-double-64)   fullopt="$1"; canonopt="-mlong-double-64"; inc=1 ;;
(-mlong-double-128)   fullopt="$1"; canonopt="-mlong-double-128"; inc=1 ;;
(-mlarge-data-threshold=*) fullopt="$1"; canonopt="-mlarge-data-threshold"; optarg="$( echo "$1" | sed -E "s^-mlarge-data-threshold=^^" )"; inc=1 ;;
(-mintel-syntax)   fullopt="$1"; canonopt="-mintel-syntax"; inc=1 ;;
(-minstrument-return=*) fullopt="$1"; canonopt="-minstrument-return"; optarg="$( echo "$1" | sed -E "s^-minstrument-return=^^" )"; inc=1 ;;
(-minline-stringops-dynamically)   fullopt="$1"; canonopt="-minline-stringops-dynamically"; inc=1 ;;
(-minline-all-stringops)   fullopt="$1"; canonopt="-minline-all-stringops"; inc=1 ;;
(-mindirect-branch=*) fullopt="$1"; canonopt="-mindirect-branch"; optarg="$( echo "$1" | sed -E "s^-mindirect-branch=^^" )"; inc=1 ;;
(-mindirect-branch-register)   fullopt="$1"; canonopt="-mindirect-branch-register"; inc=1 ;;
(-mincoming-stack-boundary=*) fullopt="$1"; canonopt="-mincoming-stack-boundary"; optarg="$( echo "$1" | sed -E "s^-mincoming-stack-boundary=^^" )"; inc=1 ;;
(-mieee-fp)   fullopt="$1"; canonopt="-mieee-fp"; inc=1 ;;
(-miamcu)   fullopt="$1"; canonopt="-miamcu"; inc=1 ;;
(-mhle)   fullopt="$1"; canonopt="-mhle"; inc=1 ;;
(-mhard-float)   fullopt="$1"; canonopt="-mhard-float"; inc=1 ;;
(-mglibc)   fullopt="$1"; canonopt="-mglibc"; inc=1 ;;
(-mgfni)   fullopt="$1"; canonopt="-mgfni"; inc=1 ;;
(-mgeneral-regs-only)   fullopt="$1"; canonopt="-mgeneral-regs-only"; inc=1 ;;
(-mfxsr)   fullopt="$1"; canonopt="-mfxsr"; inc=1 ;;
(-mfused-madd)   fullopt="$1"; canonopt="-mfused-madd"; inc=1 ;;
(-mfunction-return=*) fullopt="$1"; canonopt="-mfunction-return"; optarg="$( echo "$1" | sed -E "s^-mfunction-return=^^" )"; inc=1 ;;
(-mfsgsbase)   fullopt="$1"; canonopt="-mfsgsbase"; inc=1 ;;
(-mfpmath=*) fullopt="$1"; canonopt="-mfpmath"; optarg="$( echo "$1" | sed -E "s^-mfpmath=^^" )"; inc=1 ;;
(-mfp-ret-in-387)   fullopt="$1"; canonopt="-mfp-ret-in-387"; inc=1 ;;
(-mforce-indirect-call)   fullopt="$1"; canonopt="-mforce-indirect-call"; inc=1 ;;
(-mforce-drap)   fullopt="$1"; canonopt="-mforce-drap"; inc=1 ;;
(-mfma4)   fullopt="$1"; canonopt="-mfma4"; inc=1 ;;
(-mfma)   fullopt="$1"; canonopt="-mfma"; inc=1 ;;
(-mfentry-section=*) fullopt="$1"; canonopt="-mfentry-section"; optarg="$( echo "$1" | sed -E "s^-mfentry-section=^^" )"; inc=1 ;;
(-mfentry-name=*) fullopt="$1"; canonopt="-mfentry-name"; optarg="$( echo "$1" | sed -E "s^-mfentry-name=^^" )"; inc=1 ;;
(-mfentry)   fullopt="$1"; canonopt="-mfentry"; inc=1 ;;
(-mfancy-math-387)   fullopt="$1"; canonopt="-mfancy-math-387"; inc=1 ;;
(-mf16c)   fullopt="$1"; canonopt="-mf16c"; inc=1 ;;
(-menqcmd)   fullopt="$1"; canonopt="-menqcmd"; inc=1 ;;
(-mdump-tune-features)   fullopt="$1"; canonopt="-mdump-tune-features"; inc=1 ;;
(-mdispatch-scheduler)   fullopt="$1"; canonopt="-mdispatch-scheduler"; inc=1 ;;
(-mcx16)   fullopt="$1"; canonopt="-mcx16"; inc=1 ;;
(-mcrc32)   fullopt="$1"; canonopt="-mcrc32"; inc=1 ;;
(-mcpu=*) fullopt="$1"; canonopt="-mcpu"; optarg="$( echo "$1" | sed -E "s^-mcpu=^^" )"; inc=1 ;;
(-mcmodel=*) fullopt="$1"; canonopt="-mcmodel"; optarg="$( echo "$1" | sed -E "s^-mcmodel=^^" )"; inc=1 ;;
(-mclzero)   fullopt="$1"; canonopt="-mclzero"; inc=1 ;;
(-mclwb)   fullopt="$1"; canonopt="-mclwb"; inc=1 ;;
(-mclflushopt)   fullopt="$1"; canonopt="-mclflushopt"; inc=1 ;;
(-mcldemote)   fullopt="$1"; canonopt="-mcldemote"; inc=1 ;;
(-mcld)   fullopt="$1"; canonopt="-mcld"; inc=1 ;;
(-mcet-switch)   fullopt="$1"; canonopt="-mcet-switch"; inc=1 ;;
(-mcall-ms2sysv-xlogues)   fullopt="$1"; canonopt="-mcall-ms2sysv-xlogues"; inc=1 ;;
(-mbranch-cost=*) fullopt="$1"; canonopt="-mbranch-cost"; optarg="$( echo "$1" | sed -E "s^-mbranch-cost=^^" )"; inc=1 ;;
(-mbmi2)   fullopt="$1"; canonopt="-mbmi2"; inc=1 ;;
(-mbmi)   fullopt="$1"; canonopt="-mbmi"; inc=1 ;;
(-mbionic)   fullopt="$1"; canonopt="-mbionic"; inc=1 ;;
(-mavx512vpopcntdq)   fullopt="$1"; canonopt="-mavx512vpopcntdq"; inc=1 ;;
(-mavx512vp2intersect)   fullopt="$1"; canonopt="-mavx512vp2intersect"; inc=1 ;;
(-mavx512vnni)   fullopt="$1"; canonopt="-mavx512vnni"; inc=1 ;;
(-mavx512vl)   fullopt="$1"; canonopt="-mavx512vl"; inc=1 ;;
(-mavx512vbmi2)   fullopt="$1"; canonopt="-mavx512vbmi2"; inc=1 ;;
(-mavx512vbmi)   fullopt="$1"; canonopt="-mavx512vbmi"; inc=1 ;;
(-mavx512pf)   fullopt="$1"; canonopt="-mavx512pf"; inc=1 ;;
(-mavx512ifma)   fullopt="$1"; canonopt="-mavx512ifma"; inc=1 ;;
(-mavx512f)   fullopt="$1"; canonopt="-mavx512f"; inc=1 ;;
(-mavx512er)   fullopt="$1"; canonopt="-mavx512er"; inc=1 ;;
(-mavx512dq)   fullopt="$1"; canonopt="-mavx512dq"; inc=1 ;;
(-mavx512cd)   fullopt="$1"; canonopt="-mavx512cd"; inc=1 ;;
(-mavx512bw)   fullopt="$1"; canonopt="-mavx512bw"; inc=1 ;;
(-mavx512bitalg)   fullopt="$1"; canonopt="-mavx512bitalg"; inc=1 ;;
(-mavx512bf16)   fullopt="$1"; canonopt="-mavx512bf16"; inc=1 ;;
(-mavx5124vnniw)   fullopt="$1"; canonopt="-mavx5124vnniw"; inc=1 ;;
(-mavx5124fmaps)   fullopt="$1"; canonopt="-mavx5124fmaps"; inc=1 ;;
(-mavx256-split-unaligned-store)   fullopt="$1"; canonopt="-mavx256-split-unaligned-store"; inc=1 ;;
(-mavx256-split-unaligned-load)   fullopt="$1"; canonopt="-mavx256-split-unaligned-load"; inc=1 ;;
(-mavx2)   fullopt="$1"; canonopt="-mavx2"; inc=1 ;;
(-mavx)   fullopt="$1"; canonopt="-mavx"; inc=1 ;;
(-masm=*) fullopt="$1"; canonopt="-masm"; optarg="$( echo "$1" | sed -E "s^-masm=^^" )"; inc=1 ;;
(-march=*) fullopt="$1"; canonopt="-march"; optarg="$( echo "$1" | sed -E "s^-march=^^" )"; inc=1 ;;
(-mandroid)   fullopt="$1"; canonopt="-mandroid"; inc=1 ;;
(-malign-stringops)   fullopt="$1"; canonopt="-malign-stringops"; inc=1 ;;
(-malign-loops=*) fullopt="$1"; canonopt="-malign-loops"; optarg="$( echo "$1" | sed -E "s^-malign-loops=^^" )"; inc=1 ;;
(-malign-jumps=*) fullopt="$1"; canonopt="-malign-jumps"; optarg="$( echo "$1" | sed -E "s^-malign-jumps=^^" )"; inc=1 ;;
(-malign-functions=*) fullopt="$1"; canonopt="-malign-functions"; optarg="$( echo "$1" | sed -E "s^-malign-functions=^^" )"; inc=1 ;;
(-malign-double)   fullopt="$1"; canonopt="-malign-double"; inc=1 ;;
(-malign-data=*) fullopt="$1"; canonopt="-malign-data"; optarg="$( echo "$1" | sed -E "s^-malign-data=^^" )"; inc=1 ;;
(-maes)   fullopt="$1"; canonopt="-maes"; inc=1 ;;
(-madx)   fullopt="$1"; canonopt="-madx"; inc=1 ;;
(-maddress-mode=*) fullopt="$1"; canonopt="-maddress-mode"; optarg="$( echo "$1" | sed -E "s^-maddress-mode=^^" )"; inc=1 ;;
(-maccumulate-outgoing-args)   fullopt="$1"; canonopt="-maccumulate-outgoing-args"; inc=1 ;;
(-mabm)   fullopt="$1"; canonopt="-mabm"; inc=1 ;;
(-mabi=*) fullopt="$1"; canonopt="-mabi"; optarg="$( echo "$1" | sed -E "s^-mabi=^^" )"; inc=1 ;;
(-m96bit-long-double)   fullopt="$1"; canonopt="-m96bit-long-double"; inc=1 ;;
(-m8bit-idiv)   fullopt="$1"; canonopt="-m8bit-idiv"; inc=1 ;;
(-m80387)   fullopt="$1"; canonopt="-m80387"; inc=1 ;;
(-m64)   fullopt="$1"; canonopt="-m64"; inc=1 ;;
(-m3dnowa)   fullopt="$1"; canonopt="-m3dnowa"; inc=1 ;;
(-m3dnow)   fullopt="$1"; canonopt="-m3dnow"; inc=1 ;;
(-m32)   fullopt="$1"; canonopt="-m32"; inc=1 ;;
(-m16)   fullopt="$1"; canonopt="-m16"; inc=1 ;;
(-m128bit-long-double)   fullopt="$1"; canonopt="-m128bit-long-double"; inc=1 ;;
(-list)   fullopt="$1"; canonopt="-list"; inc=1 ;;
(-lang-asm)   fullopt="$1"; canonopt="-lang-asm"; inc=1 ;;
(-iwithprefixbefore)  fullopt="$1"; canonopt="-iwithprefixbefore"; optarg="$2"; inc=2;;
(-iwithprefix)  fullopt="$1"; canonopt="-iwithprefix"; optarg="$2"; inc=2;;
(-isystem)  fullopt="$1"; canonopt="-isystem"; optarg="$2"; inc=2;;
(-isysroot)  fullopt="$1"; canonopt="-isysroot"; optarg="$2"; inc=2;;
(-iquote)  fullopt="$1"; canonopt="-iquote"; optarg="$2"; inc=2;;
(-iprefix)  fullopt="$1"; canonopt="-iprefix"; optarg="$2"; inc=2;;
(-iplugindir=*) fullopt="$1"; canonopt="-iplugindir"; optarg="$( echo "$1" | sed -E "s^-iplugindir=^^" )"; inc=1 ;;
(-include)  fullopt="$1"; canonopt="-include"; optarg="$2"; inc=2;;
(-imultilib)  fullopt="$1"; canonopt="-imultilib"; optarg="$2"; inc=2;;
(-imultiarch)  fullopt="$1"; canonopt="-imultiarch"; optarg="$2"; inc=2;;
(-imacros)  fullopt="$1"; canonopt="-imacros"; optarg="$2"; inc=2;;
(-idirafter)  fullopt="$1"; canonopt="-idirafter"; optarg="$2"; inc=2;;
(-help)   fullopt="$1"; canonopt="-help"; inc=1 ;;
(-gz=*) fullopt="$1"; canonopt="-gz"; optarg="$( echo "$1" | sed -E "s^-gz=^^" )"; inc=1 ;;
(-gz)   fullopt="$1"; canonopt="-gz"; inc=1 ;;
(-gxcoff+)   fullopt="$1"; canonopt="-gxcoff+"; inc=1 ;;
(-gxcoff)   fullopt="$1"; canonopt="-gxcoff"; inc=1 ;;
(-gvms)   fullopt="$1"; canonopt="-gvms"; inc=1 ;;
(-gvariable-location-views=*) fullopt="$1"; canonopt="-gvariable-location-views"; optarg="$( echo "$1" | sed -E "s^-gvariable-location-views=^^" )"; inc=1 ;;
(-gvariable-location-views)   fullopt="$1"; canonopt="-gvariable-location-views"; inc=1 ;;
(-gtoggle)   fullopt="$1"; canonopt="-gtoggle"; inc=1 ;;
(-gstrict-dwarf)   fullopt="$1"; canonopt="-gstrict-dwarf"; inc=1 ;;
(-gstatement-frontiers)   fullopt="$1"; canonopt="-gstatement-frontiers"; inc=1 ;;
(-gstabs+)   fullopt="$1"; canonopt="-gstabs+"; inc=1 ;;
(-gstabs)   fullopt="$1"; canonopt="-gstabs"; inc=1 ;;
(-gsplit-dwarf)   fullopt="$1"; canonopt="-gsplit-dwarf"; inc=1 ;;
(-grecord-gcc-switches)   fullopt="$1"; canonopt="-grecord-gcc-switches"; inc=1 ;;
(-gpubnames)   fullopt="$1"; canonopt="-gpubnames"; inc=1 ;;
(-gno-pubnames)   fullopt="$1"; canonopt="-gno-pubnames"; inc=1 ;;
(-gnatO)  fullopt="$1"; canonopt="-gnatO"; optarg="$2"; inc=2;;
(-gnat*) fullopt="$1"; canonopt="-gnat"; optarg="$( echo "$1" | sed -E "s^-gnat^^" )"; inc=1 ;;
(-ginternal-reset-location-views)   fullopt="$1"; canonopt="-ginternal-reset-location-views"; inc=1 ;;
(-ginline-points)   fullopt="$1"; canonopt="-ginline-points"; inc=1 ;;
(-gimple-stats)   fullopt="$1"; canonopt="-gimple-stats"; inc=1 ;;
(-ggnu-pubnames)   fullopt="$1"; canonopt="-ggnu-pubnames"; inc=1 ;;
(-ggdb)   fullopt="$1"; canonopt="-ggdb"; inc=1 ;;
(-gen-decls)   fullopt="$1"; canonopt="-gen-decls"; inc=1 ;;
(-gdwarf-)   fullopt="$1"; canonopt="-gdwarf-"; inc=1 ;;
(-gdwarf)   fullopt="$1"; canonopt="-gdwarf"; inc=1 ;;
(-gdescribe-dies)   fullopt="$1"; canonopt="-gdescribe-dies"; inc=1 ;;
(-gcolumn-info)   fullopt="$1"; canonopt="-gcolumn-info"; inc=1 ;;
(-gcoff3)   fullopt="$1"; canonopt="-gcoff3"; inc=1 ;;
(-gcoff2)   fullopt="$1"; canonopt="-gcoff2"; inc=1 ;;
(-gcoff1)   fullopt="$1"; canonopt="-gcoff1"; inc=1 ;;
(-gcoff)   fullopt="$1"; canonopt="-gcoff"; inc=1 ;;
(-gas-locview-support)   fullopt="$1"; canonopt="-gas-locview-support"; inc=1 ;;
(-gas-loc-support)   fullopt="$1"; canonopt="-gas-loc-support"; inc=1 ;;
(-gant)   fullopt="$1"; canonopt="-gant"; inc=1 ;;
(-g)   fullopt="$1"; canonopt="-g"; inc=1 ;;
(-fzero-link)   fullopt="$1"; canonopt="-fzero-link"; inc=1 ;;
(-fzero-initialized-in-bss)   fullopt="$1"; canonopt="-fzero-initialized-in-bss"; inc=1 ;;
(-fzee)   fullopt="$1"; canonopt="-fzee"; inc=1 ;;
(-fxref)   fullopt="$1"; canonopt="-fxref"; inc=1 ;;
(-fxcode)   fullopt="$1"; canonopt="-fxcode"; inc=1 ;;
(-fwrapv-pointer)   fullopt="$1"; canonopt="-fwrapv-pointer"; inc=1 ;;
(-fwrapv)   fullopt="$1"; canonopt="-fwrapv"; inc=1 ;;
(-fwpa=*) fullopt="$1"; canonopt="-fwpa"; optarg="$( echo "$1" | sed -E "s^-fwpa=^^" )"; inc=1 ;;
(-fwpa)   fullopt="$1"; canonopt="-fwpa"; inc=1 ;;
(-fworking-directory)   fullopt="$1"; canonopt="-fworking-directory"; inc=1 ;;
(-fwide-exec-charset=*) fullopt="$1"; canonopt="-fwide-exec-charset"; optarg="$( echo "$1" | sed -E "s^-fwide-exec-charset=^^" )"; inc=1 ;;
(-fwholevalue)   fullopt="$1"; canonopt="-fwholevalue"; inc=1 ;;
(-fwholediv)   fullopt="$1"; canonopt="-fwholediv"; inc=1 ;;
(-fwhole-program)   fullopt="$1"; canonopt="-fwhole-program"; inc=1 ;;
(-fwhole-file)   fullopt="$1"; canonopt="-fwhole-file"; inc=1 ;;
(-fweb)   fullopt="$1"; canonopt="-fweb"; inc=1 ;;
(-fweak)   fullopt="$1"; canonopt="-fweak"; inc=1 ;;
(-fvtv-debug)   fullopt="$1"; canonopt="-fvtv-debug"; inc=1 ;;
(-fvtv-counts)   fullopt="$1"; canonopt="-fvtv-counts"; inc=1 ;;
(-fvtable-verify=*) fullopt="$1"; canonopt="-fvtable-verify"; optarg="$( echo "$1" | sed -E "s^-fvtable-verify=^^" )"; inc=1 ;;
(-fvtable-thunks)   fullopt="$1"; canonopt="-fvtable-thunks"; inc=1 ;;
(-fvtable-gc)   fullopt="$1"; canonopt="-fvtable-gc"; inc=1 ;;
(-fvpt)   fullopt="$1"; canonopt="-fvpt"; inc=1 ;;
(-fvisibility=*) fullopt="$1"; canonopt="-fvisibility"; optarg="$( echo "$1" | sed -E "s^-fvisibility=^^" )"; inc=1 ;;
(-fvisibility-ms-compat)   fullopt="$1"; canonopt="-fvisibility-ms-compat"; inc=1 ;;
(-fvisibility-inlines-hidden)   fullopt="$1"; canonopt="-fvisibility-inlines-hidden"; inc=1 ;;
(-fversion=*) fullopt="$1"; canonopt="-fversion"; optarg="$( echo "$1" | sed -E "s^-fversion=^^" )"; inc=1 ;;
(-fversion-loops-for-strides)   fullopt="$1"; canonopt="-fversion-loops-for-strides"; inc=1 ;;
(-fversion)   fullopt="$1"; canonopt="-fversion"; inc=1 ;;
(-fverbose-asm)   fullopt="$1"; canonopt="-fverbose-asm"; inc=1 ;;
(-fvect-cost-model=*) fullopt="$1"; canonopt="-fvect-cost-model"; optarg="$( echo "$1" | sed -E "s^-fvect-cost-model=^^" )"; inc=1 ;;
(-fvect-cost-model)   fullopt="$1"; canonopt="-fvect-cost-model"; inc=1 ;;
(-fvariable-expansion-in-unroller)   fullopt="$1"; canonopt="-fvariable-expansion-in-unroller"; inc=1 ;;
(-fvar-tracking-uninit)   fullopt="$1"; canonopt="-fvar-tracking-uninit"; inc=1 ;;
(-fvar-tracking-assignments-toggle)   fullopt="$1"; canonopt="-fvar-tracking-assignments-toggle"; inc=1 ;;
(-fvar-tracking-assignments)   fullopt="$1"; canonopt="-fvar-tracking-assignments"; inc=1 ;;
(-fvar-tracking)   fullopt="$1"; canonopt="-fvar-tracking"; inc=1 ;;
(-fuselist)   fullopt="$1"; canonopt="-fuselist"; inc=1 ;;
(-fuse-linker-plugin)   fullopt="$1"; canonopt="-fuse-linker-plugin"; inc=1 ;;
(-fuse-ld=*) fullopt="$1"; canonopt="-fuse-ld"; optarg="$( echo "$1" | sed -E "s^-fuse-ld=^^" )"; inc=1 ;;
(-fuse-cxa-get-exception-ptr)   fullopt="$1"; canonopt="-fuse-cxa-get-exception-ptr"; inc=1 ;;
(-fuse-cxa-atexit)   fullopt="$1"; canonopt="-fuse-cxa-atexit"; inc=1 ;;
(-funwind-tables)   fullopt="$1"; canonopt="-funwind-tables"; inc=1 ;;
(-funswitch-loops)   fullopt="$1"; canonopt="-funswitch-loops"; inc=1 ;;
(-funsigned-char)   fullopt="$1"; canonopt="-funsigned-char"; inc=1 ;;
(-funsigned-bitfields)   fullopt="$1"; canonopt="-funsigned-bitfields"; inc=1 ;;
(-funsafe-math-optimizations)   fullopt="$1"; canonopt="-funsafe-math-optimizations"; inc=1 ;;
(-funsafe-loop-optimizations)   fullopt="$1"; canonopt="-funsafe-loop-optimizations"; inc=1 ;;
(-funroll-loops)   fullopt="$1"; canonopt="-funroll-loops"; inc=1 ;;
(-funroll-completely-grow-size)   fullopt="$1"; canonopt="-funroll-completely-grow-size"; inc=1 ;;
(-funroll-all-loops)   fullopt="$1"; canonopt="-funroll-all-loops"; inc=1 ;;
(-funittest)   fullopt="$1"; canonopt="-funittest"; inc=1 ;;
(-funit-at-a-time)   fullopt="$1"; canonopt="-funit-at-a-time"; inc=1 ;;
(-funderscoring)   fullopt="$1"; canonopt="-funderscoring"; inc=1 ;;
(-funconstrained-commons)   fullopt="$1"; canonopt="-funconstrained-commons"; inc=1 ;;
(-funbounded-by-reference)   fullopt="$1"; canonopt="-funbounded-by-reference"; inc=1 ;;
(-ftree-vrp)   fullopt="$1"; canonopt="-ftree-vrp"; inc=1 ;;
(-ftree-vectorizer-verbose=*) fullopt="$1"; canonopt="-ftree-vectorizer-verbose"; optarg="$( echo "$1" | sed -E "s^-ftree-vectorizer-verbose=^^" )"; inc=1 ;;
(-ftree-vectorize)   fullopt="$1"; canonopt="-ftree-vectorize"; inc=1 ;;
(-ftree-vect-loop-version)   fullopt="$1"; canonopt="-ftree-vect-loop-version"; inc=1 ;;
(-ftree-ter)   fullopt="$1"; canonopt="-ftree-ter"; inc=1 ;;
(-ftree-tail-merge)   fullopt="$1"; canonopt="-ftree-tail-merge"; inc=1 ;;
(-ftree-switch-conversion)   fullopt="$1"; canonopt="-ftree-switch-conversion"; inc=1 ;;
(-ftree-store-copy-prop)   fullopt="$1"; canonopt="-ftree-store-copy-prop"; inc=1 ;;
(-ftree-store-ccp)   fullopt="$1"; canonopt="-ftree-store-ccp"; inc=1 ;;
(-ftree-sra)   fullopt="$1"; canonopt="-ftree-sra"; inc=1 ;;
(-ftree-slsr)   fullopt="$1"; canonopt="-ftree-slsr"; inc=1 ;;
(-ftree-slp-vectorize)   fullopt="$1"; canonopt="-ftree-slp-vectorize"; inc=1 ;;
(-ftree-sink)   fullopt="$1"; canonopt="-ftree-sink"; inc=1 ;;
(-ftree-scev-cprop)   fullopt="$1"; canonopt="-ftree-scev-cprop"; inc=1 ;;
(-ftree-salias)   fullopt="$1"; canonopt="-ftree-salias"; inc=1 ;;
(-ftree-reassoc)   fullopt="$1"; canonopt="-ftree-reassoc"; inc=1 ;;
(-ftree-pta)   fullopt="$1"; canonopt="-ftree-pta"; inc=1 ;;
(-ftree-pre)   fullopt="$1"; canonopt="-ftree-pre"; inc=1 ;;
(-ftree-phiprop)   fullopt="$1"; canonopt="-ftree-phiprop"; inc=1 ;;
(-ftree-partial-pre)   fullopt="$1"; canonopt="-ftree-partial-pre"; inc=1 ;;
(-ftree-parallelize-loops=*) fullopt="$1"; canonopt="-ftree-parallelize-loops"; optarg="$( echo "$1" | sed -E "s^-ftree-parallelize-loops=^^" )"; inc=1 ;;
(-ftree-lrs)   fullopt="$1"; canonopt="-ftree-lrs"; inc=1 ;;
(-ftree-loop-vectorize)   fullopt="$1"; canonopt="-ftree-loop-vectorize"; inc=1 ;;
(-ftree-loop-optimize)   fullopt="$1"; canonopt="-ftree-loop-optimize"; inc=1 ;;
(-ftree-loop-linear)   fullopt="$1"; canonopt="-ftree-loop-linear"; inc=1 ;;
(-ftree-loop-ivcanon)   fullopt="$1"; canonopt="-ftree-loop-ivcanon"; inc=1 ;;
(-ftree-loop-im)   fullopt="$1"; canonopt="-ftree-loop-im"; inc=1 ;;
(-ftree-loop-if-convert-stores)   fullopt="$1"; canonopt="-ftree-loop-if-convert-stores"; inc=1 ;;
(-ftree-loop-if-convert)   fullopt="$1"; canonopt="-ftree-loop-if-convert"; inc=1 ;;
(-ftree-loop-distribution)   fullopt="$1"; canonopt="-ftree-loop-distribution"; inc=1 ;;
(-ftree-loop-distribute-patterns)   fullopt="$1"; canonopt="-ftree-loop-distribute-patterns"; inc=1 ;;
(-ftree-fre)   fullopt="$1"; canonopt="-ftree-fre"; inc=1 ;;
(-ftree-forwprop)   fullopt="$1"; canonopt="-ftree-forwprop"; inc=1 ;;
(-ftree-dse)   fullopt="$1"; canonopt="-ftree-dse"; inc=1 ;;
(-ftree-dominator-opts)   fullopt="$1"; canonopt="-ftree-dominator-opts"; inc=1 ;;
(-ftree-dce)   fullopt="$1"; canonopt="-ftree-dce"; inc=1 ;;
(-ftree-cselim)   fullopt="$1"; canonopt="-ftree-cselim"; inc=1 ;;
(-ftree-copyrename)   fullopt="$1"; canonopt="-ftree-copyrename"; inc=1 ;;
(-ftree-copy-prop)   fullopt="$1"; canonopt="-ftree-copy-prop"; inc=1 ;;
(-ftree-coalesce-vars)   fullopt="$1"; canonopt="-ftree-coalesce-vars"; inc=1 ;;
(-ftree-coalesce-inlined-vars)   fullopt="$1"; canonopt="-ftree-coalesce-inlined-vars"; inc=1 ;;
(-ftree-ch)   fullopt="$1"; canonopt="-ftree-ch"; inc=1 ;;
(-ftree-ccp)   fullopt="$1"; canonopt="-ftree-ccp"; inc=1 ;;
(-ftree-builtin-call-dce)   fullopt="$1"; canonopt="-ftree-builtin-call-dce"; inc=1 ;;
(-ftree-bit-ccp)   fullopt="$1"; canonopt="-ftree-bit-ccp"; inc=1 ;;
(-ftrapv)   fullopt="$1"; canonopt="-ftrapv"; inc=1 ;;
(-ftrapping-math)   fullopt="$1"; canonopt="-ftrapping-math"; inc=1 ;;
(-ftransition=*) fullopt="$1"; canonopt="-ftransition"; optarg="$( echo "$1" | sed -E "s^-ftransition=^^" )"; inc=1 ;;
(-ftrampolines)   fullopt="$1"; canonopt="-ftrampolines"; inc=1 ;;
(-ftrack-macro-expansion=*) fullopt="$1"; canonopt="-ftrack-macro-expansion"; optarg="$( echo "$1" | sed -E "s^-ftrack-macro-expansion=^^" )"; inc=1 ;;
(-ftrack-macro-expansion)   fullopt="$1"; canonopt="-ftrack-macro-expansion"; inc=1 ;;
(-ftracer)   fullopt="$1"; canonopt="-ftracer"; inc=1 ;;
(-ftoplevel-reorder)   fullopt="$1"; canonopt="-ftoplevel-reorder"; inc=1 ;;
(-ftls-model=*) fullopt="$1"; canonopt="-ftls-model"; optarg="$( echo "$1" | sed -E "s^-ftls-model=^^" )"; inc=1 ;;
(-ftime-report-details)   fullopt="$1"; canonopt="-ftime-report-details"; inc=1 ;;
(-ftime-report)   fullopt="$1"; canonopt="-ftime-report"; inc=1 ;;
(-fthread-jumps)   fullopt="$1"; canonopt="-fthread-jumps"; inc=1 ;;
(-fthis-is-variable)   fullopt="$1"; canonopt="-fthis-is-variable"; inc=1 ;;
(-ftest-forall-temp)   fullopt="$1"; canonopt="-ftest-forall-temp"; inc=1 ;;
(-ftest-coverage)   fullopt="$1"; canonopt="-ftest-coverage"; inc=1 ;;
(-ftemplate-depth=*) fullopt="$1"; canonopt="-ftemplate-depth"; optarg="$( echo "$1" | sed -E "s^-ftemplate-depth=^^" )"; inc=1 ;;
(-ftemplate-depth-)   fullopt="$1"; canonopt="-ftemplate-depth-"; inc=1 ;;
(-ftemplate-backtrace-limit=*) fullopt="$1"; canonopt="-ftemplate-backtrace-limit"; optarg="$( echo "$1" | sed -E "s^-ftemplate-backtrace-limit=^^" )"; inc=1 ;;
(-ftarget-ranlib=*) fullopt="$1"; canonopt="-ftarget-ranlib"; optarg="$( echo "$1" | sed -E "s^-ftarget-ranlib=^^" )"; inc=1 ;;
(-ftarget-help)   fullopt="$1"; canonopt="-ftarget-help"; inc=1 ;;
(-ftarget-ar=*) fullopt="$1"; canonopt="-ftarget-ar"; optarg="$( echo "$1" | sed -E "s^-ftarget-ar=^^" )"; inc=1 ;;
(-ftail-call-workaround=*) fullopt="$1"; canonopt="-ftail-call-workaround"; optarg="$( echo "$1" | sed -E "s^-ftail-call-workaround=^^" )"; inc=1 ;;
(-ftail-call-workaround)   fullopt="$1"; canonopt="-ftail-call-workaround"; inc=1 ;;
(-ftabstop=*) fullopt="$1"; canonopt="-ftabstop"; optarg="$( echo "$1" | sed -E "s^-ftabstop=^^" )"; inc=1 ;;
(-fsyntax-only)   fullopt="$1"; canonopt="-fsyntax-only"; inc=1 ;;
(-fsync-libcalls)   fullopt="$1"; canonopt="-fsync-libcalls"; inc=1 ;;
(-fswitch-errors)   fullopt="$1"; canonopt="-fswitch-errors"; inc=1 ;;
(-fswig)   fullopt="$1"; canonopt="-fswig"; inc=1 ;;
(-fstrong-eval-order=*) fullopt="$1"; canonopt="-fstrong-eval-order"; optarg="$( echo "$1" | sed -E "s^-fstrong-eval-order=^^" )"; inc=1 ;;
(-fstrong-eval-order)   fullopt="$1"; canonopt="-fstrong-eval-order"; inc=1 ;;
(-fstrict-volatile-bitfields)   fullopt="$1"; canonopt="-fstrict-volatile-bitfields"; inc=1 ;;
(-fstrict-prototype)   fullopt="$1"; canonopt="-fstrict-prototype"; inc=1 ;;
(-fstrict-overflow)   fullopt="$1"; canonopt="-fstrict-overflow"; inc=1 ;;
(-fstrict-enums)   fullopt="$1"; canonopt="-fstrict-enums"; inc=1 ;;
(-fstrict-aliasing)   fullopt="$1"; canonopt="-fstrict-aliasing"; inc=1 ;;
(-fstrength-reduce)   fullopt="$1"; canonopt="-fstrength-reduce"; inc=1 ;;
(-fstore-merging)   fullopt="$1"; canonopt="-fstore-merging"; inc=1 ;;
(-fstdarg-opt)   fullopt="$1"; canonopt="-fstdarg-opt"; inc=1 ;;
(-fstats)   fullopt="$1"; canonopt="-fstats"; inc=1 ;;
(-fstack-usage)   fullopt="$1"; canonopt="-fstack-usage"; inc=1 ;;
(-fstack-reuse=*) fullopt="$1"; canonopt="-fstack-reuse"; optarg="$( echo "$1" | sed -E "s^-fstack-reuse=^^" )"; inc=1 ;;
(-fstack-protector-strong)   fullopt="$1"; canonopt="-fstack-protector-strong"; inc=1 ;;
(-fstack-protector-explicit)   fullopt="$1"; canonopt="-fstack-protector-explicit"; inc=1 ;;
(-fstack-protector-all)   fullopt="$1"; canonopt="-fstack-protector-all"; inc=1 ;;
(-fstack-protector)   fullopt="$1"; canonopt="-fstack-protector"; inc=1 ;;
(-fstack-limit-symbol=*) fullopt="$1"; canonopt="-fstack-limit-symbol"; optarg="$( echo "$1" | sed -E "s^-fstack-limit-symbol=^^" )"; inc=1 ;;
(-fstack-limit-register=*) fullopt="$1"; canonopt="-fstack-limit-register"; optarg="$( echo "$1" | sed -E "s^-fstack-limit-register=^^" )"; inc=1 ;;
(-fstack-limit)   fullopt="$1"; canonopt="-fstack-limit"; inc=1 ;;
(-fstack-clash-protection)   fullopt="$1"; canonopt="-fstack-clash-protection"; inc=1 ;;
(-fstack-check=*) fullopt="$1"; canonopt="-fstack-check"; optarg="$( echo "$1" | sed -E "s^-fstack-check=^^" )"; inc=1 ;;
(-fstack-check)   fullopt="$1"; canonopt="-fstack-check"; inc=1 ;;
(-fstack-arrays)   fullopt="$1"; canonopt="-fstack-arrays"; inc=1 ;;
(-fsso-struct=*) fullopt="$1"; canonopt="-fsso-struct"; optarg="$( echo "$1" | sed -E "s^-fsso-struct=^^" )"; inc=1 ;;
(-fssa-phiopt)   fullopt="$1"; canonopt="-fssa-phiopt"; inc=1 ;;
(-fssa-backprop)   fullopt="$1"; canonopt="-fssa-backprop"; inc=1 ;;
(-fsquangle)   fullopt="$1"; canonopt="-fsquangle"; inc=1 ;;
(-fsplit-wide-types-early)   fullopt="$1"; canonopt="-fsplit-wide-types-early"; inc=1 ;;
(-fsplit-wide-types)   fullopt="$1"; canonopt="-fsplit-wide-types"; inc=1 ;;
(-fsplit-stack)   fullopt="$1"; canonopt="-fsplit-stack"; inc=1 ;;
(-fsplit-paths)   fullopt="$1"; canonopt="-fsplit-paths"; inc=1 ;;
(-fsplit-loops)   fullopt="$1"; canonopt="-fsplit-loops"; inc=1 ;;
(-fsplit-ivs-in-unroller)   fullopt="$1"; canonopt="-fsplit-ivs-in-unroller"; inc=1 ;;
(-fsources)   fullopt="$1"; canonopt="-fsources"; inc=1 ;;
(-fsoft-check-all)   fullopt="$1"; canonopt="-fsoft-check-all"; inc=1 ;;
(-fsized-deallocation)   fullopt="$1"; canonopt="-fsized-deallocation"; inc=1 ;;
(-fsingle-precision-constant)   fullopt="$1"; canonopt="-fsingle-precision-constant"; inc=1 ;;
(-fsimd-cost-model=*) fullopt="$1"; canonopt="-fsimd-cost-model"; optarg="$( echo "$1" | sed -E "s^-fsimd-cost-model=^^" )"; inc=1 ;;
(-fsigned-zeros)   fullopt="$1"; canonopt="-fsigned-zeros"; inc=1 ;;
(-fsigned-char)   fullopt="$1"; canonopt="-fsigned-char"; inc=1 ;;
(-fsigned-bitfields)   fullopt="$1"; canonopt="-fsigned-bitfields"; inc=1 ;;
(-fsignaling-nans)   fullopt="$1"; canonopt="-fsignaling-nans"; inc=1 ;;
(-fsign-zero)   fullopt="$1"; canonopt="-fsign-zero"; inc=1 ;;
(-fshrink-wrap-separate)   fullopt="$1"; canonopt="-fshrink-wrap-separate"; inc=1 ;;
(-fshrink-wrap)   fullopt="$1"; canonopt="-fshrink-wrap"; inc=1 ;;
(-fshow-column)   fullopt="$1"; canonopt="-fshow-column"; inc=1 ;;
(-fshort-wchar)   fullopt="$1"; canonopt="-fshort-wchar"; inc=1 ;;
(-fshort-enums)   fullopt="$1"; canonopt="-fshort-enums"; inc=1 ;;
(-fshared)   fullopt="$1"; canonopt="-fshared"; inc=1 ;;
(-fsemantic-interposition)   fullopt="$1"; canonopt="-fsemantic-interposition"; inc=1 ;;
(-fself-test=*) fullopt="$1"; canonopt="-fself-test"; optarg="$( echo "$1" | sed -E "s^-fself-test=^^" )"; inc=1 ;;
(-fselective-scheduling2)   fullopt="$1"; canonopt="-fselective-scheduling2"; inc=1 ;;
(-fselective-scheduling)   fullopt="$1"; canonopt="-fselective-scheduling"; inc=1 ;;
(-fsel-sched-reschedule-pipelined)   fullopt="$1"; canonopt="-fsel-sched-reschedule-pipelined"; inc=1 ;;
(-fsel-sched-pipelining-outer-loops)   fullopt="$1"; canonopt="-fsel-sched-pipelining-outer-loops"; inc=1 ;;
(-fsel-sched-pipelining)   fullopt="$1"; canonopt="-fsel-sched-pipelining"; inc=1 ;;
(-fsee)   fullopt="$1"; canonopt="-fsee"; inc=1 ;;
(-fsection-anchors)   fullopt="$1"; canonopt="-fsection-anchors"; inc=1 ;;
(-fsecond-underscore)   fullopt="$1"; canonopt="-fsecond-underscore"; inc=1 ;;
(-fschedule-insns2)   fullopt="$1"; canonopt="-fschedule-insns2"; inc=1 ;;
(-fschedule-insns)   fullopt="$1"; canonopt="-fschedule-insns"; inc=1 ;;
(-fschedule-fusion)   fullopt="$1"; canonopt="-fschedule-fusion"; inc=1 ;;
(-fsched2-use-traces)   fullopt="$1"; canonopt="-fsched2-use-traces"; inc=1 ;;
(-fsched2-use-superblocks)   fullopt="$1"; canonopt="-fsched2-use-superblocks"; inc=1 ;;
(-fsched-verbose=*) fullopt="$1"; canonopt="-fsched-verbose"; optarg="$( echo "$1" | sed -E "s^-fsched-verbose=^^" )"; inc=1 ;;
(-fsched-stalled-insns=*) fullopt="$1"; canonopt="-fsched-stalled-insns"; optarg="$( echo "$1" | sed -E "s^-fsched-stalled-insns=^^" )"; inc=1 ;;
(-fsched-stalled-insns-dep=*) fullopt="$1"; canonopt="-fsched-stalled-insns-dep"; optarg="$( echo "$1" | sed -E "s^-fsched-stalled-insns-dep=^^" )"; inc=1 ;;
(-fsched-stalled-insns-dep)   fullopt="$1"; canonopt="-fsched-stalled-insns-dep"; inc=1 ;;
(-fsched-stalled-insns)   fullopt="$1"; canonopt="-fsched-stalled-insns"; inc=1 ;;
(-fsched-spec-load-dangerous)   fullopt="$1"; canonopt="-fsched-spec-load-dangerous"; inc=1 ;;
(-fsched-spec-load)   fullopt="$1"; canonopt="-fsched-spec-load"; inc=1 ;;
(-fsched-spec-insn-heuristic)   fullopt="$1"; canonopt="-fsched-spec-insn-heuristic"; inc=1 ;;
(-fsched-spec)   fullopt="$1"; canonopt="-fsched-spec"; inc=1 ;;
(-fsched-rank-heuristic)   fullopt="$1"; canonopt="-fsched-rank-heuristic"; inc=1 ;;
(-fsched-pressure)   fullopt="$1"; canonopt="-fsched-pressure"; inc=1 ;;
(-fsched-last-insn-heuristic)   fullopt="$1"; canonopt="-fsched-last-insn-heuristic"; inc=1 ;;
(-fsched-interblock)   fullopt="$1"; canonopt="-fsched-interblock"; inc=1 ;;
(-fsched-group-heuristic)   fullopt="$1"; canonopt="-fsched-group-heuristic"; inc=1 ;;
(-fsched-dep-count-heuristic)   fullopt="$1"; canonopt="-fsched-dep-count-heuristic"; inc=1 ;;
(-fsched-critical-path-heuristic)   fullopt="$1"; canonopt="-fsched-critical-path-heuristic"; inc=1 ;;
(-fsave-optimization-record)   fullopt="$1"; canonopt="-fsave-optimization-record"; inc=1 ;;
(-fsanitize=*) fullopt="$1"; canonopt="-fsanitize"; optarg="$( echo "$1" | sed -E "s^-fsanitize=^^" )"; inc=1 ;;
(-fsanitize-undefined-trap-on-error)   fullopt="$1"; canonopt="-fsanitize-undefined-trap-on-error"; inc=1 ;;
(-fsanitize-sections=*) fullopt="$1"; canonopt="-fsanitize-sections"; optarg="$( echo "$1" | sed -E "s^-fsanitize-sections=^^" )"; inc=1 ;;
(-fsanitize-recover=*) fullopt="$1"; canonopt="-fsanitize-recover"; optarg="$( echo "$1" | sed -E "s^-fsanitize-recover=^^" )"; inc=1 ;;
(-fsanitize-recover)   fullopt="$1"; canonopt="-fsanitize-recover"; inc=1 ;;
(-fsanitize-coverage=*) fullopt="$1"; canonopt="-fsanitize-coverage"; optarg="$( echo "$1" | sed -E "s^-fsanitize-coverage=^^" )"; inc=1 ;;
(-fsanitize-address-use-after-scope)   fullopt="$1"; canonopt="-fsanitize-address-use-after-scope"; inc=1 ;;
(-fruntime-modules=*) fullopt="$1"; canonopt="-fruntime-modules"; optarg="$( echo "$1" | sed -E "s^-fruntime-modules=^^" )"; inc=1 ;;
(-frtti)   fullopt="$1"; canonopt="-frtti"; inc=1 ;;
(-frounding-math)   fullopt="$1"; canonopt="-frounding-math"; inc=1 ;;
(-freturn)   fullopt="$1"; canonopt="-freturn"; inc=1 ;;
(-fresolution=*) fullopt="$1"; canonopt="-fresolution"; optarg="$( echo "$1" | sed -E "s^-fresolution=^^" )"; inc=1 ;;
(-freschedule-modulo-scheduled-loops)   fullopt="$1"; canonopt="-freschedule-modulo-scheduled-loops"; inc=1 ;;
(-frerun-loop-opt)   fullopt="$1"; canonopt="-frerun-loop-opt"; inc=1 ;;
(-frerun-cse-after-loop)   fullopt="$1"; canonopt="-frerun-cse-after-loop"; inc=1 ;;
(-frequire-return-statement)   fullopt="$1"; canonopt="-frequire-return-statement"; inc=1 ;;
(-freport-bug)   fullopt="$1"; canonopt="-freport-bug"; inc=1 ;;
(-frepo)   fullopt="$1"; canonopt="-frepo"; inc=1 ;;
(-freplace-objc-classes)   fullopt="$1"; canonopt="-freplace-objc-classes"; inc=1 ;;
(-frepack-arrays)   fullopt="$1"; canonopt="-frepack-arrays"; inc=1 ;;
(-freorder-functions)   fullopt="$1"; canonopt="-freorder-functions"; inc=1 ;;
(-freorder-blocks-and-partition)   fullopt="$1"; canonopt="-freorder-blocks-and-partition"; inc=1 ;;
(-freorder-blocks-algorithm=*) fullopt="$1"; canonopt="-freorder-blocks-algorithm"; optarg="$( echo "$1" | sed -E "s^-freorder-blocks-algorithm=^^" )"; inc=1 ;;
(-freorder-blocks)   fullopt="$1"; canonopt="-freorder-blocks"; inc=1 ;;
(-frename-registers)   fullopt="$1"; canonopt="-frename-registers"; inc=1 ;;
(-frelease)   fullopt="$1"; canonopt="-frelease"; inc=1 ;;
(-fregmove)   fullopt="$1"; canonopt="-fregmove"; inc=1 ;;
(-freg-struct-return)   fullopt="$1"; canonopt="-freg-struct-return"; inc=1 ;;
(-free)   fullopt="$1"; canonopt="-free"; inc=1 ;;
(-frecursive)   fullopt="$1"; canonopt="-frecursive"; inc=1 ;;
(-frecord-marker=*) fullopt="$1"; canonopt="-frecord-marker"; optarg="$( echo "$1" | sed -E "s^-frecord-marker=^^" )"; inc=1 ;;
(-frecord-gcc-switches)   fullopt="$1"; canonopt="-frecord-gcc-switches"; inc=1 ;;
(-freciprocal-math)   fullopt="$1"; canonopt="-freciprocal-math"; inc=1 ;;
(-frealloc-lhs)   fullopt="$1"; canonopt="-frealloc-lhs"; inc=1 ;;
(-freal-8-real-4)   fullopt="$1"; canonopt="-freal-8-real-4"; inc=1 ;;
(-freal-8-real-16)   fullopt="$1"; canonopt="-freal-8-real-16"; inc=1 ;;
(-freal-8-real-10)   fullopt="$1"; canonopt="-freal-8-real-10"; inc=1 ;;
(-freal-4-real-8)   fullopt="$1"; canonopt="-freal-4-real-8"; inc=1 ;;
(-freal-4-real-16)   fullopt="$1"; canonopt="-freal-4-real-16"; inc=1 ;;
(-freal-4-real-10)   fullopt="$1"; canonopt="-freal-4-real-10"; inc=1 ;;
(-frange-check)   fullopt="$1"; canonopt="-frange-check"; inc=1 ;;
(-frange)   fullopt="$1"; canonopt="-frange"; inc=1 ;;
(-frandom-seed=*) fullopt="$1"; canonopt="-frandom-seed"; optarg="$( echo "$1" | sed -E "s^-frandom-seed=^^" )"; inc=1 ;;
(-frandom-seed)   fullopt="$1"; canonopt="-frandom-seed"; inc=1 ;;
(-fq)   fullopt="$1"; canonopt="-fq"; inc=1 ;;
(-fprotect-parens)   fullopt="$1"; canonopt="-fprotect-parens"; inc=1 ;;
(-fprofile-values)   fullopt="$1"; canonopt="-fprofile-values"; inc=1 ;;
(-fprofile-use=*) fullopt="$1"; canonopt="-fprofile-use"; optarg="$( echo "$1" | sed -E "s^-fprofile-use=^^" )"; inc=1 ;;
(-fprofile-use)   fullopt="$1"; canonopt="-fprofile-use"; inc=1 ;;
(-fprofile-update=*) fullopt="$1"; canonopt="-fprofile-update"; optarg="$( echo "$1" | sed -E "s^-fprofile-update=^^" )"; inc=1 ;;
(-fprofile-reproducible=*) fullopt="$1"; canonopt="-fprofile-reproducible"; optarg="$( echo "$1" | sed -E "s^-fprofile-reproducible=^^" )"; inc=1 ;;
(-fprofile-report)   fullopt="$1"; canonopt="-fprofile-report"; inc=1 ;;
(-fprofile-reorder-functions)   fullopt="$1"; canonopt="-fprofile-reorder-functions"; inc=1 ;;
(-fprofile-prefix-path=*) fullopt="$1"; canonopt="-fprofile-prefix-path"; optarg="$( echo "$1" | sed -E "s^-fprofile-prefix-path=^^" )"; inc=1 ;;
(-fprofile-partial-training)   fullopt="$1"; canonopt="-fprofile-partial-training"; inc=1 ;;
(-fprofile-note=*) fullopt="$1"; canonopt="-fprofile-note"; optarg="$( echo "$1" | sed -E "s^-fprofile-note=^^" )"; inc=1 ;;
(-fprofile-generate=*) fullopt="$1"; canonopt="-fprofile-generate"; optarg="$( echo "$1" | sed -E "s^-fprofile-generate=^^" )"; inc=1 ;;
(-fprofile-generate)   fullopt="$1"; canonopt="-fprofile-generate"; inc=1 ;;
(-fprofile-filter-files=*) fullopt="$1"; canonopt="-fprofile-filter-files"; optarg="$( echo "$1" | sed -E "s^-fprofile-filter-files=^^" )"; inc=1 ;;
(-fprofile-exclude-files=*) fullopt="$1"; canonopt="-fprofile-exclude-files"; optarg="$( echo "$1" | sed -E "s^-fprofile-exclude-files=^^" )"; inc=1 ;;
(-fprofile-dir=*) fullopt="$1"; canonopt="-fprofile-dir"; optarg="$( echo "$1" | sed -E "s^-fprofile-dir=^^" )"; inc=1 ;;
(-fprofile-correction)   fullopt="$1"; canonopt="-fprofile-correction"; inc=1 ;;
(-fprofile-arcs)   fullopt="$1"; canonopt="-fprofile-arcs"; inc=1 ;;
(-fprofile-abs-path)   fullopt="$1"; canonopt="-fprofile-abs-path"; inc=1 ;;
(-fprofile)   fullopt="$1"; canonopt="-fprofile"; inc=1 ;;
(-fprintf-return-value)   fullopt="$1"; canonopt="-fprintf-return-value"; inc=1 ;;
(-fpretty-templates)   fullopt="$1"; canonopt="-fpretty-templates"; inc=1 ;;
(-fpreprocessed)   fullopt="$1"; canonopt="-fpreprocessed"; inc=1 ;;
(-fprefetch-loop-arrays)   fullopt="$1"; canonopt="-fprefetch-loop-arrays"; inc=1 ;;
(-fpredictive-commoning)   fullopt="$1"; canonopt="-fpredictive-commoning"; inc=1 ;;
(-fpreconditions)   fullopt="$1"; canonopt="-fpreconditions"; inc=1 ;;
(-fpre-ipa-mem-report)   fullopt="$1"; canonopt="-fpre-ipa-mem-report"; inc=1 ;;
(-fpre-include=*) fullopt="$1"; canonopt="-fpre-include"; optarg="$( echo "$1" | sed -E "s^-fpre-include=^^" )"; inc=1 ;;
(-fpostconditions)   fullopt="$1"; canonopt="-fpostconditions"; inc=1 ;;
(-fpost-ipa-mem-report)   fullopt="$1"; canonopt="-fpost-ipa-mem-report"; inc=1 ;;
(-fpositive-mod-floor-div)   fullopt="$1"; canonopt="-fpositive-mod-floor-div"; inc=1 ;;
(-fplugin=*) fullopt="$1"; canonopt="-fplugin"; optarg="$( echo "$1" | sed -E "s^-fplugin=^^" )"; inc=1 ;;
(-fplugin-arg-*) fullopt="$1"; canonopt="-fplugin-arg-"; optarg="$( echo "$1" | sed -E "s^-fplugin-arg-^^" )"; inc=1 ;;
(-fplt)   fullopt="$1"; canonopt="-fplt"; inc=1 ;;
(-fplan9-extensions)   fullopt="$1"; canonopt="-fplan9-extensions"; inc=1 ;;
(-fpim4)   fullopt="$1"; canonopt="-fpim4"; inc=1 ;;
(-fpim3)   fullopt="$1"; canonopt="-fpim3"; inc=1 ;;
(-fpim2)   fullopt="$1"; canonopt="-fpim2"; inc=1 ;;
(-fpim)   fullopt="$1"; canonopt="-fpim"; inc=1 ;;
(-fpie)   fullopt="$1"; canonopt="-fpie"; inc=1 ;;
(-fpic)   fullopt="$1"; canonopt="-fpic"; inc=1 ;;
(-fpermitted-flt-eval-methods=*) fullopt="$1"; canonopt="-fpermitted-flt-eval-methods"; optarg="$( echo "$1" | sed -E "s^-fpermitted-flt-eval-methods=^^" )"; inc=1 ;;
(-fpermissive)   fullopt="$1"; canonopt="-fpermissive"; inc=1 ;;
(-fpeephole2)   fullopt="$1"; canonopt="-fpeephole2"; inc=1 ;;
(-fpeephole)   fullopt="$1"; canonopt="-fpeephole"; inc=1 ;;
(-fpeel-loops)   fullopt="$1"; canonopt="-fpeel-loops"; inc=1 ;;
(-fpch-preprocess)   fullopt="$1"; canonopt="-fpch-preprocess"; inc=1 ;;
(-fpch-deps)   fullopt="$1"; canonopt="-fpch-deps"; inc=1 ;;
(-fpcc-struct-return)   fullopt="$1"; canonopt="-fpcc-struct-return"; inc=1 ;;
(-fpatchable-function-entry=*) fullopt="$1"; canonopt="-fpatchable-function-entry"; optarg="$( echo "$1" | sed -E "s^-fpatchable-function-entry=^^" )"; inc=1 ;;
(-fpartial-inlining)   fullopt="$1"; canonopt="-fpartial-inlining"; inc=1 ;;
(-fpad-source)   fullopt="$1"; canonopt="-fpad-source"; inc=1 ;;
(-fpack-struct=*) fullopt="$1"; canonopt="-fpack-struct"; optarg="$( echo "$1" | sed -E "s^-fpack-struct=^^" )"; inc=1 ;;
(-fpack-struct)   fullopt="$1"; canonopt="-fpack-struct"; inc=1 ;;
(-fpack-derived)   fullopt="$1"; canonopt="-fpack-derived"; inc=1 ;;
(-foptional-diags)   fullopt="$1"; canonopt="-foptional-diags"; inc=1 ;;
(-foptimize-strlen)   fullopt="$1"; canonopt="-foptimize-strlen"; inc=1 ;;
(-foptimize-sibling-calls)   fullopt="$1"; canonopt="-foptimize-sibling-calls"; inc=1 ;;
(-foptimize-register-move)   fullopt="$1"; canonopt="-foptimize-register-move"; inc=1 ;;
(-fopt-info-*) fullopt="$1"; canonopt="-fopt-info-"; optarg="$( echo "$1" | sed -E "s^-fopt-info-^^" )"; inc=1 ;;
(-fopt-info)   fullopt="$1"; canonopt="-fopt-info"; inc=1 ;;
(-foperator-names)   fullopt="$1"; canonopt="-foperator-names"; inc=1 ;;
(-fopenmp-simd)   fullopt="$1"; canonopt="-fopenmp-simd"; inc=1 ;;
(-fopenmp)   fullopt="$1"; canonopt="-fopenmp"; inc=1 ;;
(-fopenacc-dim=*) fullopt="$1"; canonopt="-fopenacc-dim"; optarg="$( echo "$1" | sed -E "s^-fopenacc-dim=^^" )"; inc=1 ;;
(-fopenacc)   fullopt="$1"; canonopt="-fopenacc"; inc=1 ;;
(-fonlylink)   fullopt="$1"; canonopt="-fonlylink"; inc=1 ;;
(-fonly=*) fullopt="$1"; canonopt="-fonly"; optarg="$( echo "$1" | sed -E "s^-fonly=^^" )"; inc=1 ;;
(-fomit-frame-pointer)   fullopt="$1"; canonopt="-fomit-frame-pointer"; inc=1 ;;
(-foffload=*) fullopt="$1"; canonopt="-foffload"; optarg="$( echo "$1" | sed -E "s^-foffload=^^" )"; inc=1 ;;
(-foffload-abi=*) fullopt="$1"; canonopt="-foffload-abi"; optarg="$( echo "$1" | sed -E "s^-foffload-abi=^^" )"; inc=1 ;;
(-fobject-path=*) fullopt="$1"; canonopt="-fobject-path"; optarg="$( echo "$1" | sed -E "s^-fobject-path=^^" )"; inc=1 ;;
(-fobjc-std=*) fullopt="$1"; canonopt="-fobjc-std"; optarg="$( echo "$1" | sed -E "s^-fobjc-std=^^" )"; inc=1 ;;
(-fobjc-sjlj-exceptions)   fullopt="$1"; canonopt="-fobjc-sjlj-exceptions"; inc=1 ;;
(-fobjc-nilcheck)   fullopt="$1"; canonopt="-fobjc-nilcheck"; inc=1 ;;
(-fobjc-gc)   fullopt="$1"; canonopt="-fobjc-gc"; inc=1 ;;
(-fobjc-exceptions)   fullopt="$1"; canonopt="-fobjc-exceptions"; inc=1 ;;
(-fobjc-direct-dispatch)   fullopt="$1"; canonopt="-fobjc-direct-dispatch"; inc=1 ;;
(-fobjc-call-cxx-cdtors)   fullopt="$1"; canonopt="-fobjc-call-cxx-cdtors"; inc=1 ;;
(-fobjc-abi-version=*) fullopt="$1"; canonopt="-fobjc-abi-version"; optarg="$( echo "$1" | sed -E "s^-fobjc-abi-version=^^" )"; inc=1 ;;
(-fnothrow-opt)   fullopt="$1"; canonopt="-fnothrow-opt"; inc=1 ;;
(-fnonnull-objects)   fullopt="$1"; canonopt="-fnonnull-objects"; inc=1 ;;
(-fnonansi-builtins)   fullopt="$1"; canonopt="-fnonansi-builtins"; inc=1 ;;
(-fnon-call-exceptions)   fullopt="$1"; canonopt="-fnon-call-exceptions"; inc=1 ;;
(-fno-threadsafe-statics)   fullopt="$1"; canonopt="-fno-threadsafe-statics"; inc=1 ;;
(-fno-pthread)   fullopt="$1"; canonopt="-fno-pthread"; inc=1 ;;
(-fno-m2-plugin)   fullopt="$1"; canonopt="-fno-m2-plugin"; inc=1 ;;
(-fnil-receivers)   fullopt="$1"; canonopt="-fnil-receivers"; inc=1 ;;
(-fnil)   fullopt="$1"; canonopt="-fnil"; inc=1 ;;
(-fnext-runtime)   fullopt="$1"; canonopt="-fnext-runtime"; inc=1 ;;
(-fnew-ttp-matching)   fullopt="$1"; canonopt="-fnew-ttp-matching"; inc=1 ;;
(-fnew-inheriting-ctors)   fullopt="$1"; canonopt="-fnew-inheriting-ctors"; inc=1 ;;
(-fnew-abi)   fullopt="$1"; canonopt="-fnew-abi"; inc=1 ;;
(-fname-mangling-version-)   fullopt="$1"; canonopt="-fname-mangling-version-"; inc=1 ;;
(-fmudflapth)   fullopt="$1"; canonopt="-fmudflapth"; inc=1 ;;
(-fmudflapir)   fullopt="$1"; canonopt="-fmudflapir"; inc=1 ;;
(-fmudflap)   fullopt="$1"; canonopt="-fmudflap"; inc=1 ;;
(-fms-extensions)   fullopt="$1"; canonopt="-fms-extensions"; inc=1 ;;
(-fmove-loop-invariants)   fullopt="$1"; canonopt="-fmove-loop-invariants"; inc=1 ;;
(-fmodulo-sched-allow-regmoves)   fullopt="$1"; canonopt="-fmodulo-sched-allow-regmoves"; inc=1 ;;
(-fmodulo-sched)   fullopt="$1"; canonopt="-fmodulo-sched"; inc=1 ;;
(-fmodules)   fullopt="$1"; canonopt="-fmodules"; inc=1 ;;
(-fmoduleinfo)   fullopt="$1"; canonopt="-fmoduleinfo"; inc=1 ;;
(-fmodule-private)   fullopt="$1"; canonopt="-fmodule-private"; inc=1 ;;
(-fmodule-file=*) fullopt="$1"; canonopt="-fmodule-file"; optarg="$( echo "$1" | sed -E "s^-fmodule-file=^^" )"; inc=1 ;;
(-fmod=*) fullopt="$1"; canonopt="-fmod"; optarg="$( echo "$1" | sed -E "s^-fmod=^^" )"; inc=1 ;;
(-fmessage-length=*) fullopt="$1"; canonopt="-fmessage-length"; optarg="$( echo "$1" | sed -E "s^-fmessage-length=^^" )"; inc=1 ;;
(-fmerge-debug-strings)   fullopt="$1"; canonopt="-fmerge-debug-strings"; inc=1 ;;
(-fmerge-constants)   fullopt="$1"; canonopt="-fmerge-constants"; inc=1 ;;
(-fmerge-all-constants)   fullopt="$1"; canonopt="-fmerge-all-constants"; inc=1 ;;
(-fmem-report-wpa)   fullopt="$1"; canonopt="-fmem-report-wpa"; inc=1 ;;
(-fmem-report)   fullopt="$1"; canonopt="-fmem-report"; inc=1 ;;
(-fmax-subrecord-length=*) fullopt="$1"; canonopt="-fmax-subrecord-length"; optarg="$( echo "$1" | sed -E "s^-fmax-subrecord-length=^^" )"; inc=1 ;;
(-fmax-stack-var-size=*) fullopt="$1"; canonopt="-fmax-stack-var-size"; optarg="$( echo "$1" | sed -E "s^-fmax-stack-var-size=^^" )"; inc=1 ;;
(-fmax-include-depth=*) fullopt="$1"; canonopt="-fmax-include-depth"; optarg="$( echo "$1" | sed -E "s^-fmax-include-depth=^^" )"; inc=1 ;;
(-fmax-identifier-length=*) fullopt="$1"; canonopt="-fmax-identifier-length"; optarg="$( echo "$1" | sed -E "s^-fmax-identifier-length=^^" )"; inc=1 ;;
(-fmax-errors=*) fullopt="$1"; canonopt="-fmax-errors"; optarg="$( echo "$1" | sed -E "s^-fmax-errors=^^" )"; inc=1 ;;
(-fmax-array-constructor=*) fullopt="$1"; canonopt="-fmax-array-constructor"; optarg="$( echo "$1" | sed -E "s^-fmax-array-constructor=^^" )"; inc=1 ;;
(-fmath-errno)   fullopt="$1"; canonopt="-fmath-errno"; inc=1 ;;
(-fmakelist)   fullopt="$1"; canonopt="-fmakelist"; inc=1 ;;
(-fmakeinit)   fullopt="$1"; canonopt="-fmakeinit"; inc=1 ;;
(-fmain)   fullopt="$1"; canonopt="-fmain"; inc=1 ;;
(-fmacro-prefix-map=*) fullopt="$1"; canonopt="-fmacro-prefix-map"; optarg="$( echo "$1" | sed -E "s^-fmacro-prefix-map=^^" )"; inc=1 ;;
(-fm2-whole-program)   fullopt="$1"; canonopt="-fm2-whole-program"; inc=1 ;;
(-fm2-version)   fullopt="$1"; canonopt="-fm2-version"; inc=1 ;;
(-fm2-strict-type)   fullopt="$1"; canonopt="-fm2-strict-type"; inc=1 ;;
(-fm2-statistics)   fullopt="$1"; canonopt="-fm2-statistics"; inc=1 ;;
(-fm2-plugin)   fullopt="$1"; canonopt="-fm2-plugin"; inc=1 ;;
(-fm2-lower-case)   fullopt="$1"; canonopt="-fm2-lower-case"; inc=1 ;;
(-fm2-g)   fullopt="$1"; canonopt="-fm2-g"; inc=1 ;;
(-fltrans-output-list=*) fullopt="$1"; canonopt="-fltrans-output-list"; optarg="$( echo "$1" | sed -E "s^-fltrans-output-list=^^" )"; inc=1 ;;
(-fltrans)   fullopt="$1"; canonopt="-fltrans"; inc=1 ;;
(-flto=*) fullopt="$1"; canonopt="-flto"; optarg="$( echo "$1" | sed -E "s^-flto=^^" )"; inc=1 ;;
(-flto-report-wpa)   fullopt="$1"; canonopt="-flto-report-wpa"; inc=1 ;;
(-flto-report)   fullopt="$1"; canonopt="-flto-report"; inc=1 ;;
(-flto-partition=*) fullopt="$1"; canonopt="-flto-partition"; optarg="$( echo "$1" | sed -E "s^-flto-partition=^^" )"; inc=1 ;;
(-flto-odr-type-merging)   fullopt="$1"; canonopt="-flto-odr-type-merging"; inc=1 ;;
(-flto-compression-level=*) fullopt="$1"; canonopt="-flto-compression-level"; optarg="$( echo "$1" | sed -E "s^-flto-compression-level=^^" )"; inc=1 ;;
(-flto)   fullopt="$1"; canonopt="-flto"; inc=1 ;;
(-flra-remat)   fullopt="$1"; canonopt="-flra-remat"; inc=1 ;;
(-floop-unroll-and-jam)   fullopt="$1"; canonopt="-floop-unroll-and-jam"; inc=1 ;;
(-floop-strip-mine)   fullopt="$1"; canonopt="-floop-strip-mine"; inc=1 ;;
(-floop-parallelize-all)   fullopt="$1"; canonopt="-floop-parallelize-all"; inc=1 ;;
(-floop-optimize)   fullopt="$1"; canonopt="-floop-optimize"; inc=1 ;;
(-floop-nest-optimize)   fullopt="$1"; canonopt="-floop-nest-optimize"; inc=1 ;;
(-floop-interchange)   fullopt="$1"; canonopt="-floop-interchange"; inc=1 ;;
(-floop-flatten)   fullopt="$1"; canonopt="-floop-flatten"; inc=1 ;;
(-floop-block)   fullopt="$1"; canonopt="-floop-block"; inc=1 ;;
(-flocation=*) fullopt="$1"; canonopt="-flocation"; optarg="$( echo "$1" | sed -E "s^-flocation=^^" )"; inc=1 ;;
(-flocal-ivars)   fullopt="$1"; canonopt="-flocal-ivars"; inc=1 ;;
(-flive-range-shrinkage)   fullopt="$1"; canonopt="-flive-range-shrinkage"; inc=1 ;;
(-flive-patching=*) fullopt="$1"; canonopt="-flive-patching"; optarg="$( echo "$1" | sed -E "s^-flive-patching=^^" )"; inc=1 ;;
(-flive-patching)   fullopt="$1"; canonopt="-flive-patching"; inc=1 ;;
(-flinker-output=*) fullopt="$1"; canonopt="-flinker-output"; optarg="$( echo "$1" | sed -E "s^-flinker-output=^^" )"; inc=1 ;;
(-flimit-function-alignment)   fullopt="$1"; canonopt="-flimit-function-alignment"; inc=1 ;;
(-flifetime-dse=*) fullopt="$1"; canonopt="-flifetime-dse"; optarg="$( echo "$1" | sed -E "s^-flifetime-dse=^^" )"; inc=1 ;;
(-flifetime-dse)   fullopt="$1"; canonopt="-flifetime-dse"; inc=1 ;;
(-flibs=*) fullopt="$1"; canonopt="-flibs"; optarg="$( echo "$1" | sed -E "s^-flibs=^^" )"; inc=1 ;;
(-fleading-underscore)   fullopt="$1"; canonopt="-fleading-underscore"; inc=1 ;;
(-flax-vector-conversions)   fullopt="$1"; canonopt="-flax-vector-conversions"; inc=1 ;;
(-flabels-ok)   fullopt="$1"; canonopt="-flabels-ok"; inc=1 ;;
(-fkeep-static-functions)   fullopt="$1"; canonopt="-fkeep-static-functions"; inc=1 ;;
(-fkeep-static-consts)   fullopt="$1"; canonopt="-fkeep-static-consts"; inc=1 ;;
(-fkeep-inline-functions)   fullopt="$1"; canonopt="-fkeep-inline-functions"; inc=1 ;;
(-fkeep-gc-roots-live)   fullopt="$1"; canonopt="-fkeep-gc-roots-live"; inc=1 ;;
(-fjump-tables)   fullopt="$1"; canonopt="-fjump-tables"; inc=1 ;;
(-fivopts)   fullopt="$1"; canonopt="-fivopts"; inc=1 ;;
(-fisolate-erroneous-paths-dereference)   fullopt="$1"; canonopt="-fisolate-erroneous-paths-dereference"; inc=1 ;;
(-fisolate-erroneous-paths-attribute)   fullopt="$1"; canonopt="-fisolate-erroneous-paths-attribute"; inc=1 ;;
(-fiso)   fullopt="$1"; canonopt="-fiso"; inc=1 ;;
(-fira-verbose=*) fullopt="$1"; canonopt="-fira-verbose"; optarg="$( echo "$1" | sed -E "s^-fira-verbose=^^" )"; inc=1 ;;
(-fira-share-spill-slots)   fullopt="$1"; canonopt="-fira-share-spill-slots"; inc=1 ;;
(-fira-share-save-slots)   fullopt="$1"; canonopt="-fira-share-save-slots"; inc=1 ;;
(-fira-region=*) fullopt="$1"; canonopt="-fira-region"; optarg="$( echo "$1" | sed -E "s^-fira-region=^^" )"; inc=1 ;;
(-fira-loop-pressure)   fullopt="$1"; canonopt="-fira-loop-pressure"; inc=1 ;;
(-fira-hoist-pressure)   fullopt="$1"; canonopt="-fira-hoist-pressure"; inc=1 ;;
(-fira-algorithm=*) fullopt="$1"; canonopt="-fira-algorithm"; optarg="$( echo "$1" | sed -E "s^-fira-algorithm=^^" )"; inc=1 ;;
(-fipa-vrp)   fullopt="$1"; canonopt="-fipa-vrp"; inc=1 ;;
(-fipa-struct-reorg)   fullopt="$1"; canonopt="-fipa-struct-reorg"; inc=1 ;;
(-fipa-stack-alignment)   fullopt="$1"; canonopt="-fipa-stack-alignment"; inc=1 ;;
(-fipa-sra)   fullopt="$1"; canonopt="-fipa-sra"; inc=1 ;;
(-fipa-reference-addressable)   fullopt="$1"; canonopt="-fipa-reference-addressable"; inc=1 ;;
(-fipa-reference)   fullopt="$1"; canonopt="-fipa-reference"; inc=1 ;;
(-fipa-ra)   fullopt="$1"; canonopt="-fipa-ra"; inc=1 ;;
(-fipa-pure-const)   fullopt="$1"; canonopt="-fipa-pure-const"; inc=1 ;;
(-fipa-pta)   fullopt="$1"; canonopt="-fipa-pta"; inc=1 ;;
(-fipa-profile)   fullopt="$1"; canonopt="-fipa-profile"; inc=1 ;;
(-fipa-matrix-reorg)   fullopt="$1"; canonopt="-fipa-matrix-reorg"; inc=1 ;;
(-fipa-icf-variables)   fullopt="$1"; canonopt="-fipa-icf-variables"; inc=1 ;;
(-fipa-icf-functions)   fullopt="$1"; canonopt="-fipa-icf-functions"; inc=1 ;;
(-fipa-icf)   fullopt="$1"; canonopt="-fipa-icf"; inc=1 ;;
(-fipa-cp-clone)   fullopt="$1"; canonopt="-fipa-cp-clone"; inc=1 ;;
(-fipa-cp-alignment)   fullopt="$1"; canonopt="-fipa-cp-alignment"; inc=1 ;;
(-fipa-cp)   fullopt="$1"; canonopt="-fipa-cp"; inc=1 ;;
(-fipa-bit-cp)   fullopt="$1"; canonopt="-fipa-bit-cp"; inc=1 ;;
(-finvariants)   fullopt="$1"; canonopt="-finvariants"; inc=1 ;;
(-fintrinsic-modules-path)  fullopt="$1"; canonopt="-fintrinsic-modules-path"; optarg="$2"; inc=2;;
(-fintrinsic-modules-path=*) fullopt="$1"; canonopt="-fintrinsic-modules-path"; optarg="$( echo "$1" | sed -E "s^-fintrinsic-modules-path=^^" )"; inc=1 ;;
(-finteger-4-integer-8)   fullopt="$1"; canonopt="-finteger-4-integer-8"; inc=1 ;;
(-finstrument-functions-exclude-function-list=*) fullopt="$1"; canonopt="-finstrument-functions-exclude-function-list"; optarg="$( echo "$1" | sed -E "s^-finstrument-functions-exclude-function-list=^^" )"; inc=1 ;;
(-finstrument-functions-exclude-file-list=*) fullopt="$1"; canonopt="-finstrument-functions-exclude-file-list"; optarg="$( echo "$1" | sed -E "s^-finstrument-functions-exclude-file-list=^^" )"; inc=1 ;;
(-finstrument-functions)   fullopt="$1"; canonopt="-finstrument-functions"; inc=1 ;;
(-finput-charset=*) fullopt="$1"; canonopt="-finput-charset"; optarg="$( echo "$1" | sed -E "s^-finput-charset=^^" )"; inc=1 ;;
(-finline-small-functions)   fullopt="$1"; canonopt="-finline-small-functions"; inc=1 ;;
(-finline-matmul-limit=*) fullopt="$1"; canonopt="-finline-matmul-limit"; optarg="$( echo "$1" | sed -E "s^-finline-matmul-limit=^^" )"; inc=1 ;;
(-finline-limit=*) fullopt="$1"; canonopt="-finline-limit"; optarg="$( echo "$1" | sed -E "s^-finline-limit=^^" )"; inc=1 ;;
(-finline-limit-)   fullopt="$1"; canonopt="-finline-limit-"; inc=1 ;;
(-finline-functions-called-once)   fullopt="$1"; canonopt="-finline-functions-called-once"; inc=1 ;;
(-finline-functions)   fullopt="$1"; canonopt="-finline-functions"; inc=1 ;;
(-finline-atomics)   fullopt="$1"; canonopt="-finline-atomics"; inc=1 ;;
(-finline-arg-packing)   fullopt="$1"; canonopt="-finline-arg-packing"; inc=1 ;;
(-finline)   fullopt="$1"; canonopt="-finline"; inc=1 ;;
(-finit-real=*) fullopt="$1"; canonopt="-finit-real"; optarg="$( echo "$1" | sed -E "s^-finit-real=^^" )"; inc=1 ;;
(-finit-logical=*) fullopt="$1"; canonopt="-finit-logical"; optarg="$( echo "$1" | sed -E "s^-finit-logical=^^" )"; inc=1 ;;
(-finit-local-zero)   fullopt="$1"; canonopt="-finit-local-zero"; inc=1 ;;
(-finit-integer=*) fullopt="$1"; canonopt="-finit-integer"; optarg="$( echo "$1" | sed -E "s^-finit-integer=^^" )"; inc=1 ;;
(-finit-derived)   fullopt="$1"; canonopt="-finit-derived"; inc=1 ;;
(-finit-character=*) fullopt="$1"; canonopt="-finit-character"; optarg="$( echo "$1" | sed -E "s^-finit-character=^^" )"; inc=1 ;;
(-finhibit-size-directive)   fullopt="$1"; canonopt="-finhibit-size-directive"; inc=1 ;;
(-findirect-inlining)   fullopt="$1"; canonopt="-findirect-inlining"; inc=1 ;;
(-findex)   fullopt="$1"; canonopt="-findex"; inc=1 ;;
(-fimplicit-templates)   fullopt="$1"; canonopt="-fimplicit-templates"; inc=1 ;;
(-fimplicit-none)   fullopt="$1"; canonopt="-fimplicit-none"; inc=1 ;;
(-fimplicit-inline-templates)   fullopt="$1"; canonopt="-fimplicit-inline-templates"; inc=1 ;;
(-fimplement-inlines)   fullopt="$1"; canonopt="-fimplement-inlines"; inc=1 ;;
(-fignore-unknown-pragmas)   fullopt="$1"; canonopt="-fignore-unknown-pragmas"; inc=1 ;;
(-fif-conversion2)   fullopt="$1"; canonopt="-fif-conversion2"; inc=1 ;;
(-fif-conversion)   fullopt="$1"; canonopt="-fif-conversion"; inc=1 ;;
(-fident)   fullopt="$1"; canonopt="-fident"; inc=1 ;;
(-fhuge-objects)   fullopt="$1"; canonopt="-fhuge-objects"; inc=1 ;;
(-fhosted)   fullopt="$1"; canonopt="-fhosted"; inc=1 ;;
(-fhonor-std)   fullopt="$1"; canonopt="-fhonor-std"; inc=1 ;;
(-fhoist-adjacent-loads)   fullopt="$1"; canonopt="-fhoist-adjacent-loads"; inc=1 ;;
(-fhelp=*) fullopt="$1"; canonopt="-fhelp"; optarg="$( echo "$1" | sed -E "s^-fhelp=^^" )"; inc=1 ;;
(-fhelp)   fullopt="$1"; canonopt="-fhelp"; inc=1 ;;
(-fhandle-exceptions)   fullopt="$1"; canonopt="-fhandle-exceptions"; inc=1 ;;
(-fguiding-decls)   fullopt="$1"; canonopt="-fguiding-decls"; inc=1 ;;
(-fguess-branch-probability)   fullopt="$1"; canonopt="-fguess-branch-probability"; inc=1 ;;
(-fgraphite-identity)   fullopt="$1"; canonopt="-fgraphite-identity"; inc=1 ;;
(-fgraphite)   fullopt="$1"; canonopt="-fgraphite"; inc=1 ;;
(-fgo-relative-import-path=*) fullopt="$1"; canonopt="-fgo-relative-import-path"; optarg="$( echo "$1" | sed -E "s^-fgo-relative-import-path=^^" )"; inc=1 ;;
(-fgo-prefix=*) fullopt="$1"; canonopt="-fgo-prefix"; optarg="$( echo "$1" | sed -E "s^-fgo-prefix=^^" )"; inc=1 ;;
(-fgo-pkgpath=*) fullopt="$1"; canonopt="-fgo-pkgpath"; optarg="$( echo "$1" | sed -E "s^-fgo-pkgpath=^^" )"; inc=1 ;;
(-fgo-optimize-*) fullopt="$1"; canonopt="-fgo-optimize-"; optarg="$( echo "$1" | sed -E "s^-fgo-optimize-^^" )"; inc=1 ;;
(-fgo-dump-*) fullopt="$1"; canonopt="-fgo-dump-"; optarg="$( echo "$1" | sed -E "s^-fgo-dump-^^" )"; inc=1 ;;
(-fgo-debug-optimization)   fullopt="$1"; canonopt="-fgo-debug-optimization"; inc=1 ;;
(-fgo-debug-escape-hash=*) fullopt="$1"; canonopt="-fgo-debug-escape-hash"; optarg="$( echo "$1" | sed -E "s^-fgo-debug-escape-hash=^^" )"; inc=1 ;;
(-fgo-debug-escape)   fullopt="$1"; canonopt="-fgo-debug-escape"; inc=1 ;;
(-fgo-compiling-runtime)   fullopt="$1"; canonopt="-fgo-compiling-runtime"; inc=1 ;;
(-fgo-check-divide-zero)   fullopt="$1"; canonopt="-fgo-check-divide-zero"; inc=1 ;;
(-fgo-check-divide-overflow)   fullopt="$1"; canonopt="-fgo-check-divide-overflow"; inc=1 ;;
(-fgo-c-header=*) fullopt="$1"; canonopt="-fgo-c-header"; optarg="$( echo "$1" | sed -E "s^-fgo-c-header=^^" )"; inc=1 ;;
(-fgnu89-inline)   fullopt="$1"; canonopt="-fgnu89-inline"; inc=1 ;;
(-fgnu-unique)   fullopt="$1"; canonopt="-fgnu-unique"; inc=1 ;;
(-fgnu-tm)   fullopt="$1"; canonopt="-fgnu-tm"; inc=1 ;;
(-fgnu-runtime)   fullopt="$1"; canonopt="-fgnu-runtime"; inc=1 ;;
(-fgnu-keywords)   fullopt="$1"; canonopt="-fgnu-keywords"; inc=1 ;;
(-fgnat-encodings=*) fullopt="$1"; canonopt="-fgnat-encodings"; optarg="$( echo "$1" | sed -E "s^-fgnat-encodings=^^" )"; inc=1 ;;
(-fgimple)   fullopt="$1"; canonopt="-fgimple"; inc=1 ;;
(-fgcse-sm)   fullopt="$1"; canonopt="-fgcse-sm"; inc=1 ;;
(-fgcse-lm)   fullopt="$1"; canonopt="-fgcse-lm"; inc=1 ;;
(-fgcse-las)   fullopt="$1"; canonopt="-fgcse-las"; inc=1 ;;
(-fgcse-after-reload)   fullopt="$1"; canonopt="-fgcse-after-reload"; inc=1 ;;
(-fgcse)   fullopt="$1"; canonopt="-fgcse"; inc=1 ;;
(-ffunction-sections)   fullopt="$1"; canonopt="-ffunction-sections"; inc=1 ;;
(-ffunction-cse)   fullopt="$1"; canonopt="-ffunction-cse"; inc=1 ;;
(-ffrontend-optimize)   fullopt="$1"; canonopt="-ffrontend-optimize"; inc=1 ;;
(-ffrontend-loop-interchange)   fullopt="$1"; canonopt="-ffrontend-loop-interchange"; inc=1 ;;
(-ffriend-injection)   fullopt="$1"; canonopt="-ffriend-injection"; inc=1 ;;
(-ffreestanding)   fullopt="$1"; canonopt="-ffreestanding"; inc=1 ;;
(-ffree-line-length-none)   fullopt="$1"; canonopt="-ffree-line-length-none"; inc=1 ;;
(-ffree-line-length-*) fullopt="$1"; canonopt="-ffree-line-length-"; optarg="$( echo "$1" | sed -E "s^-ffree-line-length-^^" )"; inc=1 ;;
(-ffree-form)   fullopt="$1"; canonopt="-ffree-form"; inc=1 ;;
(-ffpe-trap=*) fullopt="$1"; canonopt="-ffpe-trap"; optarg="$( echo "$1" | sed -E "s^-ffpe-trap=^^" )"; inc=1 ;;
(-ffpe-summary=*) fullopt="$1"; canonopt="-ffpe-summary"; optarg="$( echo "$1" | sed -E "s^-ffpe-summary=^^" )"; inc=1 ;;
(-ffp-int-builtin-inexact)   fullopt="$1"; canonopt="-ffp-int-builtin-inexact"; inc=1 ;;
(-ffp-contract=*) fullopt="$1"; canonopt="-ffp-contract"; optarg="$( echo "$1" | sed -E "s^-ffp-contract=^^" )"; inc=1 ;;
(-fforward-propagate)   fullopt="$1"; canonopt="-fforward-propagate"; inc=1 ;;
(-fforce-addr)   fullopt="$1"; canonopt="-fforce-addr"; inc=1 ;;
(-ffor-scope)   fullopt="$1"; canonopt="-ffor-scope"; inc=1 ;;
(-ffloatvalue)   fullopt="$1"; canonopt="-ffloatvalue"; inc=1 ;;
(-ffloat-store)   fullopt="$1"; canonopt="-ffloat-store"; inc=1 ;;
(-ffixed-line-length-none)   fullopt="$1"; canonopt="-ffixed-line-length-none"; inc=1 ;;
(-ffixed-line-length-*) fullopt="$1"; canonopt="-ffixed-line-length-"; optarg="$( echo "$1" | sed -E "s^-ffixed-line-length-^^" )"; inc=1 ;;
(-ffixed-form)   fullopt="$1"; canonopt="-ffixed-form"; inc=1 ;;
(-ffixed-*) fullopt="$1"; canonopt="-ffixed-"; optarg="$( echo "$1" | sed -E "s^-ffixed-^^" )"; inc=1 ;;
(-ffinite-math-only)   fullopt="$1"; canonopt="-ffinite-math-only"; inc=1 ;;
(-ffinite-loops)   fullopt="$1"; canonopt="-ffinite-loops"; inc=1 ;;
(-ffile-prefix-map=*) fullopt="$1"; canonopt="-ffile-prefix-map"; optarg="$( echo "$1" | sed -E "s^-ffile-prefix-map=^^" )"; inc=1 ;;
(-ffat-lto-objects)   fullopt="$1"; canonopt="-ffat-lto-objects"; inc=1 ;;
(-ffast-math)   fullopt="$1"; canonopt="-ffast-math"; inc=1 ;;
(-ff2c)   fullopt="$1"; canonopt="-ff2c"; inc=1 ;;
(-fexternal-templates)   fullopt="$1"; canonopt="-fexternal-templates"; inc=1 ;;
(-fexternal-blas)   fullopt="$1"; canonopt="-fexternal-blas"; inc=1 ;;
(-fextern-tls-init)   fullopt="$1"; canonopt="-fextern-tls-init"; inc=1 ;;
(-fextended-opaque)   fullopt="$1"; canonopt="-fextended-opaque"; inc=1 ;;
(-fextended-identifiers)   fullopt="$1"; canonopt="-fextended-identifiers"; inc=1 ;;
(-fext-numeric-literals)   fullopt="$1"; canonopt="-fext-numeric-literals"; inc=1 ;;
(-fexpensive-optimizations)   fullopt="$1"; canonopt="-fexpensive-optimizations"; inc=1 ;;
(-fexec-charset=*) fullopt="$1"; canonopt="-fexec-charset"; optarg="$( echo "$1" | sed -E "s^-fexec-charset=^^" )"; inc=1 ;;
(-fexcess-precision=*) fullopt="$1"; canonopt="-fexcess-precision"; optarg="$( echo "$1" | sed -E "s^-fexcess-precision=^^" )"; inc=1 ;;
(-fexceptions)   fullopt="$1"; canonopt="-fexceptions"; inc=1 ;;
(-fenum-int-equiv)   fullopt="$1"; canonopt="-fenum-int-equiv"; inc=1 ;;
(-fenforce-eh-specs)   fullopt="$1"; canonopt="-fenforce-eh-specs"; inc=1 ;;
(-fenable-*) fullopt="$1"; canonopt="-fenable-"; optarg="$( echo "$1" | sed -E "s^-fenable-^^" )"; inc=1 ;;
(-femit-struct-debug-reduced)   fullopt="$1"; canonopt="-femit-struct-debug-reduced"; inc=1 ;;
(-femit-struct-debug-detailed=*) fullopt="$1"; canonopt="-femit-struct-debug-detailed"; optarg="$( echo "$1" | sed -E "s^-femit-struct-debug-detailed=^^" )"; inc=1 ;;
(-femit-struct-debug-baseonly)   fullopt="$1"; canonopt="-femit-struct-debug-baseonly"; inc=1 ;;
(-femit-class-debug-always)   fullopt="$1"; canonopt="-femit-class-debug-always"; inc=1 ;;
(-feliminate-unused-debug-types)   fullopt="$1"; canonopt="-feliminate-unused-debug-types"; inc=1 ;;
(-feliminate-unused-debug-symbols)   fullopt="$1"; canonopt="-feliminate-unused-debug-symbols"; inc=1 ;;
(-feliminate-dwarf2-dups)   fullopt="$1"; canonopt="-feliminate-dwarf2-dups"; inc=1 ;;
(-felide-type)   fullopt="$1"; canonopt="-felide-type"; inc=1 ;;
(-felide-constructors)   fullopt="$1"; canonopt="-felide-constructors"; inc=1 ;;
(-fearly-inlining)   fullopt="$1"; canonopt="-fearly-inlining"; inc=1 ;;
(-fdwarf2-cfi-asm)   fullopt="$1"; canonopt="-fdwarf2-cfi-asm"; inc=1 ;;
(-fdump-unnumbered-links)   fullopt="$1"; canonopt="-fdump-unnumbered-links"; inc=1 ;;
(-fdump-unnumbered)   fullopt="$1"; canonopt="-fdump-unnumbered"; inc=1 ;;
(-fdump-system-exports)   fullopt="$1"; canonopt="-fdump-system-exports"; inc=1 ;;
(-fdump-passes)   fullopt="$1"; canonopt="-fdump-passes"; inc=1 ;;
(-fdump-parse-tree)   fullopt="$1"; canonopt="-fdump-parse-tree"; inc=1 ;;
(-fdump-noaddr)   fullopt="$1"; canonopt="-fdump-noaddr"; inc=1 ;;
(-fdump-internal-locations)   fullopt="$1"; canonopt="-fdump-internal-locations"; inc=1 ;;
(-fdump-go-spec=*) fullopt="$1"; canonopt="-fdump-go-spec"; optarg="$( echo "$1" | sed -E "s^-fdump-go-spec=^^" )"; inc=1 ;;
(-fdump-fortran-original)   fullopt="$1"; canonopt="-fdump-fortran-original"; inc=1 ;;
(-fdump-fortran-optimized)   fullopt="$1"; canonopt="-fdump-fortran-optimized"; inc=1 ;;
(-fdump-fortran-global)   fullopt="$1"; canonopt="-fdump-fortran-global"; inc=1 ;;
(-fdump-final-insns=*) fullopt="$1"; canonopt="-fdump-final-insns"; optarg="$( echo "$1" | sed -E "s^-fdump-final-insns=^^" )"; inc=1 ;;
(-fdump-d-original)   fullopt="$1"; canonopt="-fdump-d-original"; inc=1 ;;
(-fdump-core)   fullopt="$1"; canonopt="-fdump-core"; inc=1 ;;
(-fdump-analyzer-supergraph)   fullopt="$1"; canonopt="-fdump-analyzer-supergraph"; inc=1 ;;
(-fdump-analyzer-stderr)   fullopt="$1"; canonopt="-fdump-analyzer-stderr"; inc=1 ;;
(-fdump-analyzer-state-purge)   fullopt="$1"; canonopt="-fdump-analyzer-state-purge"; inc=1 ;;
(-fdump-analyzer-exploded-nodes-3)   fullopt="$1"; canonopt="-fdump-analyzer-exploded-nodes-3"; inc=1 ;;
(-fdump-analyzer-exploded-nodes-2)   fullopt="$1"; canonopt="-fdump-analyzer-exploded-nodes-2"; inc=1 ;;
(-fdump-analyzer-exploded-nodes)   fullopt="$1"; canonopt="-fdump-analyzer-exploded-nodes"; inc=1 ;;
(-fdump-analyzer-exploded-graph)   fullopt="$1"; canonopt="-fdump-analyzer-exploded-graph"; inc=1 ;;
(-fdump-analyzer-callgraph)   fullopt="$1"; canonopt="-fdump-analyzer-callgraph"; inc=1 ;;
(-fdump-analyzer)   fullopt="$1"; canonopt="-fdump-analyzer"; inc=1 ;;
(-fdump-ada-spec-slim)   fullopt="$1"; canonopt="-fdump-ada-spec-slim"; inc=1 ;;
(-fdump-ada-spec)   fullopt="$1"; canonopt="-fdump-ada-spec"; inc=1 ;;
(-fdump-*) fullopt="$1"; canonopt="-fdump-"; optarg="$( echo "$1" | sed -E "s^-fdump-^^" )"; inc=1 ;;
(-fdse)   fullopt="$1"; canonopt="-fdse"; inc=1 ;;
(-fdruntime)   fullopt="$1"; canonopt="-fdruntime"; inc=1 ;;
(-fdollars-in-identifiers)   fullopt="$1"; canonopt="-fdollars-in-identifiers"; inc=1 ;;
(-fdollar-ok)   fullopt="$1"; canonopt="-fdollar-ok"; inc=1 ;;
(-fdoc-inc=*) fullopt="$1"; canonopt="-fdoc-inc"; optarg="$( echo "$1" | sed -E "s^-fdoc-inc=^^" )"; inc=1 ;;
(-fdoc-file=*) fullopt="$1"; canonopt="-fdoc-file"; optarg="$( echo "$1" | sed -E "s^-fdoc-file=^^" )"; inc=1 ;;
(-fdoc-dir=*) fullopt="$1"; canonopt="-fdoc-dir"; optarg="$( echo "$1" | sed -E "s^-fdoc-dir=^^" )"; inc=1 ;;
(-fdoc)   fullopt="$1"; canonopt="-fdoc"; inc=1 ;;
(-fdisable-*) fullopt="$1"; canonopt="-fdisable-"; optarg="$( echo "$1" | sed -E "s^-fdisable-^^" )"; inc=1 ;;
(-fdirectives-only)   fullopt="$1"; canonopt="-fdirectives-only"; inc=1 ;;
(-fdiagnostics-urls=*) fullopt="$1"; canonopt="-fdiagnostics-urls"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-urls=^^" )"; inc=1 ;;
(-fdiagnostics-show-template-tree)   fullopt="$1"; canonopt="-fdiagnostics-show-template-tree"; inc=1 ;;
(-fdiagnostics-show-path-depths)   fullopt="$1"; canonopt="-fdiagnostics-show-path-depths"; inc=1 ;;
(-fdiagnostics-show-option)   fullopt="$1"; canonopt="-fdiagnostics-show-option"; inc=1 ;;
(-fdiagnostics-show-location=*) fullopt="$1"; canonopt="-fdiagnostics-show-location"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-show-location=^^" )"; inc=1 ;;
(-fdiagnostics-show-line-numbers)   fullopt="$1"; canonopt="-fdiagnostics-show-line-numbers"; inc=1 ;;
(-fdiagnostics-show-labels)   fullopt="$1"; canonopt="-fdiagnostics-show-labels"; inc=1 ;;
(-fdiagnostics-show-cwe)   fullopt="$1"; canonopt="-fdiagnostics-show-cwe"; inc=1 ;;
(-fdiagnostics-show-caret)   fullopt="$1"; canonopt="-fdiagnostics-show-caret"; inc=1 ;;
(-fdiagnostics-path-format=*) fullopt="$1"; canonopt="-fdiagnostics-path-format"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-path-format=^^" )"; inc=1 ;;
(-fdiagnostics-parseable-fixits)   fullopt="$1"; canonopt="-fdiagnostics-parseable-fixits"; inc=1 ;;
(-fdiagnostics-minimum-margin-width=*) fullopt="$1"; canonopt="-fdiagnostics-minimum-margin-width"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-minimum-margin-width=^^" )"; inc=1 ;;
(-fdiagnostics-generate-patch)   fullopt="$1"; canonopt="-fdiagnostics-generate-patch"; inc=1 ;;
(-fdiagnostics-format=*) fullopt="$1"; canonopt="-fdiagnostics-format"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-format=^^" )"; inc=1 ;;
(-fdiagnostics-color=*) fullopt="$1"; canonopt="-fdiagnostics-color"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-color=^^" )"; inc=1 ;;
(-fdiagnostics-color)   fullopt="$1"; canonopt="-fdiagnostics-color"; inc=1 ;;
(-fdevirtualize-speculatively)   fullopt="$1"; canonopt="-fdevirtualize-speculatively"; inc=1 ;;
(-fdevirtualize-at-ltrans)   fullopt="$1"; canonopt="-fdevirtualize-at-ltrans"; inc=1 ;;
(-fdevirtualize)   fullopt="$1"; canonopt="-fdevirtualize"; inc=1 ;;
(-fdelete-null-pointer-checks)   fullopt="$1"; canonopt="-fdelete-null-pointer-checks"; inc=1 ;;
(-fdelete-dead-exceptions)   fullopt="$1"; canonopt="-fdelete-dead-exceptions"; inc=1 ;;
(-fdelayed-branch)   fullopt="$1"; canonopt="-fdelayed-branch"; inc=1 ;;
(-fdefer-pop)   fullopt="$1"; canonopt="-fdefer-pop"; inc=1 ;;
(-fdefault-real-8)   fullopt="$1"; canonopt="-fdefault-real-8"; inc=1 ;;
(-fdefault-real-16)   fullopt="$1"; canonopt="-fdefault-real-16"; inc=1 ;;
(-fdefault-real-10)   fullopt="$1"; canonopt="-fdefault-real-10"; inc=1 ;;
(-fdefault-integer-8)   fullopt="$1"; canonopt="-fdefault-integer-8"; inc=1 ;;
(-fdefault-inline)   fullopt="$1"; canonopt="-fdefault-inline"; inc=1 ;;
(-fdefault-double-8)   fullopt="$1"; canonopt="-fdefault-double-8"; inc=1 ;;
(-fdef=*) fullopt="$1"; canonopt="-fdef"; optarg="$( echo "$1" | sed -E "s^-fdef=^^" )"; inc=1 ;;
(-fdeduce-init-list)   fullopt="$1"; canonopt="-fdeduce-init-list"; inc=1 ;;
(-fdeclone-ctor-dtor)   fullopt="$1"; canonopt="-fdeclone-ctor-dtor"; inc=1 ;;
(-fdec-structure)   fullopt="$1"; canonopt="-fdec-structure"; inc=1 ;;
(-fdec-static)   fullopt="$1"; canonopt="-fdec-static"; inc=1 ;;
(-fdec-math)   fullopt="$1"; canonopt="-fdec-math"; inc=1 ;;
(-fdec-intrinsic-ints)   fullopt="$1"; canonopt="-fdec-intrinsic-ints"; inc=1 ;;
(-fdec-include)   fullopt="$1"; canonopt="-fdec-include"; inc=1 ;;
(-fdec-format-defaults)   fullopt="$1"; canonopt="-fdec-format-defaults"; inc=1 ;;
(-fdec-char-conversions)   fullopt="$1"; canonopt="-fdec-char-conversions"; inc=1 ;;
(-fdec-blank-format-item)   fullopt="$1"; canonopt="-fdec-blank-format-item"; inc=1 ;;
(-fdec)   fullopt="$1"; canonopt="-fdec"; inc=1 ;;
(-fdebug=*) fullopt="$1"; canonopt="-fdebug"; optarg="$( echo "$1" | sed -E "s^-fdebug=^^" )"; inc=1 ;;
(-fdebug-types-section)   fullopt="$1"; canonopt="-fdebug-types-section"; inc=1 ;;
(-fdebug-trace-quad)   fullopt="$1"; canonopt="-fdebug-trace-quad"; inc=1 ;;
(-fdebug-trace-api)   fullopt="$1"; canonopt="-fdebug-trace-api"; inc=1 ;;
(-fdebug-prefix-map=*) fullopt="$1"; canonopt="-fdebug-prefix-map"; optarg="$( echo "$1" | sed -E "s^-fdebug-prefix-map=^^" )"; inc=1 ;;
(-fdebug-function-line-numbers)   fullopt="$1"; canonopt="-fdebug-function-line-numbers"; inc=1 ;;
(-fdebug-cpp)   fullopt="$1"; canonopt="-fdebug-cpp"; inc=1 ;;
(-fdebug-builtins)   fullopt="$1"; canonopt="-fdebug-builtins"; inc=1 ;;
(-fdebug)   fullopt="$1"; canonopt="-fdebug"; inc=1 ;;
(-fdce)   fullopt="$1"; canonopt="-fdce"; inc=1 ;;
(-fdbg-cnt=*) fullopt="$1"; canonopt="-fdbg-cnt"; optarg="$( echo "$1" | sed -E "s^-fdbg-cnt=^^" )"; inc=1 ;;
(-fdbg-cnt-list)   fullopt="$1"; canonopt="-fdbg-cnt-list"; inc=1 ;;
(-fdata-sections)   fullopt="$1"; canonopt="-fdata-sections"; inc=1 ;;
(-fd-lines-as-comments)   fullopt="$1"; canonopt="-fd-lines-as-comments"; inc=1 ;;
(-fd-lines-as-code)   fullopt="$1"; canonopt="-fd-lines-as-code"; inc=1 ;;
(-fd)   fullopt="$1"; canonopt="-fd"; inc=1 ;;
(-fcx-limited-range)   fullopt="$1"; canonopt="-fcx-limited-range"; inc=1 ;;
(-fcx-fortran-rules)   fullopt="$1"; canonopt="-fcx-fortran-rules"; inc=1 ;;
(-fcse-skip-blocks)   fullopt="$1"; canonopt="-fcse-skip-blocks"; inc=1 ;;
(-fcse-follow-jumps)   fullopt="$1"; canonopt="-fcse-follow-jumps"; inc=1 ;;
(-fcrossjumping)   fullopt="$1"; canonopt="-fcrossjumping"; inc=1 ;;
(-fcray-pointer)   fullopt="$1"; canonopt="-fcray-pointer"; inc=1 ;;
(-fcprop-registers)   fullopt="$1"; canonopt="-fcprop-registers"; inc=1 ;;
(-fcppprog=*) fullopt="$1"; canonopt="-fcppprog"; optarg="$( echo "$1" | sed -E "s^-fcppprog=^^" )"; inc=1 ;;
(-fcppend)   fullopt="$1"; canonopt="-fcppend"; inc=1 ;;
(-fcppbegin)   fullopt="$1"; canonopt="-fcppbegin"; inc=1 ;;
(-fcpp)   fullopt="$1"; canonopt="-fcpp"; inc=1 ;;
(-fcoroutines)   fullopt="$1"; canonopt="-fcoroutines"; inc=1 ;;
(-fconvert=*) fullopt="$1"; canonopt="-fconvert"; optarg="$( echo "$1" | sed -E "s^-fconvert=^^" )"; inc=1 ;;
(-fconstexpr-ops-limit=*) fullopt="$1"; canonopt="-fconstexpr-ops-limit"; optarg="$( echo "$1" | sed -E "s^-fconstexpr-ops-limit=^^" )"; inc=1 ;;
(-fconstexpr-loop-limit=*) fullopt="$1"; canonopt="-fconstexpr-loop-limit"; optarg="$( echo "$1" | sed -E "s^-fconstexpr-loop-limit=^^" )"; inc=1 ;;
(-fconstexpr-depth=*) fullopt="$1"; canonopt="-fconstexpr-depth"; optarg="$( echo "$1" | sed -E "s^-fconstexpr-depth=^^" )"; inc=1 ;;
(-fconstexpr-cache-depth=*) fullopt="$1"; canonopt="-fconstexpr-cache-depth"; optarg="$( echo "$1" | sed -E "s^-fconstexpr-cache-depth=^^" )"; inc=1 ;;
(-fconst-string-class=*) fullopt="$1"; canonopt="-fconst-string-class"; optarg="$( echo "$1" | sed -E "s^-fconst-string-class=^^" )"; inc=1 ;;
(-fconserve-stack)   fullopt="$1"; canonopt="-fconserve-stack"; inc=1 ;;
(-fconserve-space)   fullopt="$1"; canonopt="-fconserve-space"; inc=1 ;;
(-fcond-mismatch)   fullopt="$1"; canonopt="-fcond-mismatch"; inc=1 ;;
(-fconcepts-ts)   fullopt="$1"; canonopt="-fconcepts-ts"; inc=1 ;;
(-fconcepts-diagnostics-depth=*) fullopt="$1"; canonopt="-fconcepts-diagnostics-depth"; optarg="$( echo "$1" | sed -E "s^-fconcepts-diagnostics-depth=^^" )"; inc=1 ;;
(-fconcepts)   fullopt="$1"; canonopt="-fconcepts"; inc=1 ;;
(-fcompare-elim)   fullopt="$1"; canonopt="-fcompare-elim"; inc=1 ;;
(-fcompare-debug[=*) fullopt="$1"; canonopt="-fcompare-debug["; optarg="$( echo "$1" | sed -E "s^-fcompare-debug[=^^" )"; inc=1 ;;
(-fcompare-debug-second)   fullopt="$1"; canonopt="-fcompare-debug-second"; inc=1 ;;
(-fcommon)   fullopt="$1"; canonopt="-fcommon"; inc=1 ;;
(-fcombine-stack-adjustments)   fullopt="$1"; canonopt="-fcombine-stack-adjustments"; inc=1 ;;
(-fcode-hoisting)   fullopt="$1"; canonopt="-fcode-hoisting"; inc=1 ;;
(-fcoarray=*) fullopt="$1"; canonopt="-fcoarray"; optarg="$( echo "$1" | sed -E "s^-fcoarray=^^" )"; inc=1 ;;
(-fcilkplus)   fullopt="$1"; canonopt="-fcilkplus"; inc=1 ;;
(-fchkp-zero-input-bounds-for-main)   fullopt="$1"; canonopt="-fchkp-zero-input-bounds-for-main"; inc=1 ;;
(-fchkp-use-wrappers)   fullopt="$1"; canonopt="-fchkp-use-wrappers"; inc=1 ;;
(-fchkp-use-static-const-bounds)   fullopt="$1"; canonopt="-fchkp-use-static-const-bounds"; inc=1 ;;
(-fchkp-use-static-bounds)   fullopt="$1"; canonopt="-fchkp-use-static-bounds"; inc=1 ;;
(-fchkp-use-nochk-string-functions)   fullopt="$1"; canonopt="-fchkp-use-nochk-string-functions"; inc=1 ;;
(-fchkp-use-fast-string-functions)   fullopt="$1"; canonopt="-fchkp-use-fast-string-functions"; inc=1 ;;
(-fchkp-treat-zero-dynamic-size-as-infinite)   fullopt="$1"; canonopt="-fchkp-treat-zero-dynamic-size-as-infinite"; inc=1 ;;
(-fchkp-store-bounds)   fullopt="$1"; canonopt="-fchkp-store-bounds"; inc=1 ;;
(-fchkp-optimize)   fullopt="$1"; canonopt="-fchkp-optimize"; inc=1 ;;
(-fchkp-narrow-to-innermost-array)   fullopt="$1"; canonopt="-fchkp-narrow-to-innermost-array"; inc=1 ;;
(-fchkp-narrow-bounds)   fullopt="$1"; canonopt="-fchkp-narrow-bounds"; inc=1 ;;
(-fchkp-instrument-marked-only)   fullopt="$1"; canonopt="-fchkp-instrument-marked-only"; inc=1 ;;
(-fchkp-instrument-calls)   fullopt="$1"; canonopt="-fchkp-instrument-calls"; inc=1 ;;
(-fchkp-flexible-struct-trailing-arrays)   fullopt="$1"; canonopt="-fchkp-flexible-struct-trailing-arrays"; inc=1 ;;
(-fchkp-first-field-has-own-bounds)   fullopt="$1"; canonopt="-fchkp-first-field-has-own-bounds"; inc=1 ;;
(-fchkp-check-write)   fullopt="$1"; canonopt="-fchkp-check-write"; inc=1 ;;
(-fchkp-check-read)   fullopt="$1"; canonopt="-fchkp-check-read"; inc=1 ;;
(-fchkp-check-incomplete-type)   fullopt="$1"; canonopt="-fchkp-check-incomplete-type"; inc=1 ;;
(-fchecking=*) fullopt="$1"; canonopt="-fchecking"; optarg="$( echo "$1" | sed -E "s^-fchecking=^^" )"; inc=1 ;;
(-fchecking)   fullopt="$1"; canonopt="-fchecking"; inc=1 ;;
(-fcheck=*) fullopt="$1"; canonopt="-fcheck"; optarg="$( echo "$1" | sed -E "s^-fcheck=^^" )"; inc=1 ;;
(-fcheck-pointer-bounds)   fullopt="$1"; canonopt="-fcheck-pointer-bounds"; inc=1 ;;
(-fcheck-new)   fullopt="$1"; canonopt="-fcheck-new"; inc=1 ;;
(-fcheck-data-deps)   fullopt="$1"; canonopt="-fcheck-data-deps"; inc=1 ;;
(-fcheck-array-temporaries)   fullopt="$1"; canonopt="-fcheck-array-temporaries"; inc=1 ;;
(-fchar8_t)   fullopt="$1"; canonopt="-fchar8_t"; inc=1 ;;
(-fcf-protection=*) fullopt="$1"; canonopt="-fcf-protection"; optarg="$( echo "$1" | sed -E "s^-fcf-protection=^^" )"; inc=1 ;;
(-fcf-protection)   fullopt="$1"; canonopt="-fcf-protection"; inc=1 ;;
(-fcase)   fullopt="$1"; canonopt="-fcase"; inc=1 ;;
(-fcanonical-system-headers)   fullopt="$1"; canonopt="-fcanonical-system-headers"; inc=1 ;;
(-fcallgraph-info=*) fullopt="$1"; canonopt="-fcallgraph-info"; optarg="$( echo "$1" | sed -E "s^-fcallgraph-info=^^" )"; inc=1 ;;
(-fcallgraph-info)   fullopt="$1"; canonopt="-fcallgraph-info"; inc=1 ;;
(-fcaller-saves)   fullopt="$1"; canonopt="-fcaller-saves"; inc=1 ;;
(-fcall-used-*) fullopt="$1"; canonopt="-fcall-used-"; optarg="$( echo "$1" | sed -E "s^-fcall-used-^^" )"; inc=1 ;;
(-fcall-saved-*) fullopt="$1"; canonopt="-fcall-saved-"; optarg="$( echo "$1" | sed -E "s^-fcall-saved-^^" )"; inc=1 ;;
(-fc-prototypes-external)   fullopt="$1"; canonopt="-fc-prototypes-external"; inc=1 ;;
(-fc-prototypes)   fullopt="$1"; canonopt="-fc-prototypes"; inc=1 ;;
(-fbuiltin-)   fullopt="$1"; canonopt="-fbuiltin-"; inc=1 ;;
(-fbuiltin)   fullopt="$1"; canonopt="-fbuiltin"; inc=1 ;;
(-fbuilding-libphobos-tests)   fullopt="$1"; canonopt="-fbuilding-libphobos-tests"; inc=1 ;;
(-fbuilding-libgcc)   fullopt="$1"; canonopt="-fbuilding-libgcc"; inc=1 ;;
(-fbtr-bb-exclusive)   fullopt="$1"; canonopt="-fbtr-bb-exclusive"; inc=1 ;;
(-fbranch-target-load-optimize2)   fullopt="$1"; canonopt="-fbranch-target-load-optimize2"; inc=1 ;;
(-fbranch-target-load-optimize)   fullopt="$1"; canonopt="-fbranch-target-load-optimize"; inc=1 ;;
(-fbranch-probabilities)   fullopt="$1"; canonopt="-fbranch-probabilities"; inc=1 ;;
(-fbranch-count-reg)   fullopt="$1"; canonopt="-fbranch-count-reg"; inc=1 ;;
(-fbounds-check=*) fullopt="$1"; canonopt="-fbounds-check"; optarg="$( echo "$1" | sed -E "s^-fbounds-check=^^" )"; inc=1 ;;
(-fbounds-check)   fullopt="$1"; canonopt="-fbounds-check"; inc=1 ;;
(-fbounds)   fullopt="$1"; canonopt="-fbounds"; inc=1 ;;
(-fblas-matmul-limit=*) fullopt="$1"; canonopt="-fblas-matmul-limit"; optarg="$( echo "$1" | sed -E "s^-fblas-matmul-limit=^^" )"; inc=1 ;;
(-fbacktrace)   fullopt="$1"; canonopt="-fbacktrace"; inc=1 ;;
(-fbackslash)   fullopt="$1"; canonopt="-fbackslash"; inc=1 ;;
(-fautomatic)   fullopt="$1"; canonopt="-fautomatic"; inc=1 ;;
(-fauto-profile=*) fullopt="$1"; canonopt="-fauto-profile"; optarg="$( echo "$1" | sed -E "s^-fauto-profile=^^" )"; inc=1 ;;
(-fauto-profile)   fullopt="$1"; canonopt="-fauto-profile"; inc=1 ;;
(-fauto-init)   fullopt="$1"; canonopt="-fauto-init"; inc=1 ;;
(-fauto-inc-dec)   fullopt="$1"; canonopt="-fauto-inc-dec"; inc=1 ;;
(-fasynchronous-unwind-tables)   fullopt="$1"; canonopt="-fasynchronous-unwind-tables"; inc=1 ;;
(-fassociative-math)   fullopt="$1"; canonopt="-fassociative-math"; inc=1 ;;
(-fassert)   fullopt="$1"; canonopt="-fassert"; inc=1 ;;
(-fasm)   fullopt="$1"; canonopt="-fasm"; inc=1 ;;
(-fasan-shadow-offset=*) fullopt="$1"; canonopt="-fasan-shadow-offset"; optarg="$( echo "$1" | sed -E "s^-fasan-shadow-offset=^^" )"; inc=1 ;;
(-fargument-noalias-global)   fullopt="$1"; canonopt="-fargument-noalias-global"; inc=1 ;;
(-fargument-noalias-anything)   fullopt="$1"; canonopt="-fargument-noalias-anything"; inc=1 ;;
(-fargument-noalias)   fullopt="$1"; canonopt="-fargument-noalias"; inc=1 ;;
(-fargument-alias)   fullopt="$1"; canonopt="-fargument-alias"; inc=1 ;;
(-fanalyzer-verbosity=*) fullopt="$1"; canonopt="-fanalyzer-verbosity"; optarg="$( echo "$1" | sed -E "s^-fanalyzer-verbosity=^^" )"; inc=1 ;;
(-fanalyzer-verbose-state-changes)   fullopt="$1"; canonopt="-fanalyzer-verbose-state-changes"; inc=1 ;;
(-fanalyzer-verbose-edges)   fullopt="$1"; canonopt="-fanalyzer-verbose-edges"; inc=1 ;;
(-fanalyzer-transitivity)   fullopt="$1"; canonopt="-fanalyzer-transitivity"; inc=1 ;;
(-fanalyzer-state-purge)   fullopt="$1"; canonopt="-fanalyzer-state-purge"; inc=1 ;;
(-fanalyzer-state-merge)   fullopt="$1"; canonopt="-fanalyzer-state-merge"; inc=1 ;;
(-fanalyzer-show-duplicate-count)   fullopt="$1"; canonopt="-fanalyzer-show-duplicate-count"; inc=1 ;;
(-fanalyzer-fine-grained)   fullopt="$1"; canonopt="-fanalyzer-fine-grained"; inc=1 ;;
(-fanalyzer-checker=*) fullopt="$1"; canonopt="-fanalyzer-checker"; optarg="$( echo "$1" | sed -E "s^-fanalyzer-checker=^^" )"; inc=1 ;;
(-fanalyzer-call-summaries)   fullopt="$1"; canonopt="-fanalyzer-call-summaries"; inc=1 ;;
(-fanalyzer)   fullopt="$1"; canonopt="-fanalyzer"; inc=1 ;;
(-falt-external-templates)   fullopt="$1"; canonopt="-falt-external-templates"; inc=1 ;;
(-fallow-store-data-races)   fullopt="$1"; canonopt="-fallow-store-data-races"; inc=1 ;;
(-fallow-parameterless-variadic-functions)   fullopt="$1"; canonopt="-fallow-parameterless-variadic-functions"; inc=1 ;;
(-fallow-leading-underscore)   fullopt="$1"; canonopt="-fallow-leading-underscore"; inc=1 ;;
(-fallow-invalid-boz)   fullopt="$1"; canonopt="-fallow-invalid-boz"; inc=1 ;;
(-fallow-argument-mismatch)   fullopt="$1"; canonopt="-fallow-argument-mismatch"; inc=1 ;;
(-fallocation-dce)   fullopt="$1"; canonopt="-fallocation-dce"; inc=1 ;;
(-fall-virtual)   fullopt="$1"; canonopt="-fall-virtual"; inc=1 ;;
(-fall-intrinsics)   fullopt="$1"; canonopt="-fall-intrinsics"; inc=1 ;;
(-fall-instantiations)   fullopt="$1"; canonopt="-fall-instantiations"; inc=1 ;;
(-faligned-new=*) fullopt="$1"; canonopt="-faligned-new"; optarg="$( echo "$1" | sed -E "s^-faligned-new=^^" )"; inc=1 ;;
(-faligned-new)   fullopt="$1"; canonopt="-faligned-new"; inc=1 ;;
(-falign-loops=*) fullopt="$1"; canonopt="-falign-loops"; optarg="$( echo "$1" | sed -E "s^-falign-loops=^^" )"; inc=1 ;;
(-falign-loops)   fullopt="$1"; canonopt="-falign-loops"; inc=1 ;;
(-falign-labels=*) fullopt="$1"; canonopt="-falign-labels"; optarg="$( echo "$1" | sed -E "s^-falign-labels=^^" )"; inc=1 ;;
(-falign-labels)   fullopt="$1"; canonopt="-falign-labels"; inc=1 ;;
(-falign-jumps=*) fullopt="$1"; canonopt="-falign-jumps"; optarg="$( echo "$1" | sed -E "s^-falign-jumps=^^" )"; inc=1 ;;
(-falign-jumps)   fullopt="$1"; canonopt="-falign-jumps"; inc=1 ;;
(-falign-functions=*) fullopt="$1"; canonopt="-falign-functions"; optarg="$( echo "$1" | sed -E "s^-falign-functions=^^" )"; inc=1 ;;
(-falign-functions)   fullopt="$1"; canonopt="-falign-functions"; inc=1 ;;
(-falign-commons)   fullopt="$1"; canonopt="-falign-commons"; inc=1 ;;
(-faggressive-loop-optimizations)   fullopt="$1"; canonopt="-faggressive-loop-optimizations"; inc=1 ;;
(-faggressive-function-elimination)   fullopt="$1"; canonopt="-faggressive-function-elimination"; inc=1 ;;
(-fada-spec-parent=*) fullopt="$1"; canonopt="-fada-spec-parent"; optarg="$( echo "$1" | sed -E "s^-fada-spec-parent=^^" )"; inc=1 ;;
(-faccess-control)   fullopt="$1"; canonopt="-faccess-control"; inc=1 ;;
(-fabi-version=*) fullopt="$1"; canonopt="-fabi-version"; optarg="$( echo "$1" | sed -E "s^-fabi-version=^^" )"; inc=1 ;;
(-fabi-compat-version=*) fullopt="$1"; canonopt="-fabi-compat-version"; optarg="$( echo "$1" | sed -E "s^-fabi-compat-version=^^" )"; inc=1 ;;
(-fRTS=*) fullopt="$1"; canonopt="-fRTS"; optarg="$( echo "$1" | sed -E "s^-fRTS=^^" )"; inc=1 ;;
(-fPIE)   fullopt="$1"; canonopt="-fPIE"; inc=1 ;;
(-fPIC)   fullopt="$1"; canonopt="-fPIC"; inc=1 ;;
(-dumpdir)  fullopt="$1"; canonopt="-dumpdir"; optarg="$2"; inc=2;;
(-dumpbase)  fullopt="$1"; canonopt="-dumpbase"; optarg="$2"; inc=2;;
(-dump-level=*) fullopt="$1"; canonopt="-dump-level"; optarg="$( echo "$1" | sed -E "s^-dump-level=^^" )"; inc=1 ;;
(-dump-body=*) fullopt="$1"; canonopt="-dump-body"; optarg="$( echo "$1" | sed -E "s^-dump-body=^^" )"; inc=1 ;;
(-demangle)   fullopt="$1"; canonopt="-demangle"; inc=1 ;;
(-defined-only)   fullopt="$1"; canonopt="-defined-only"; inc=1 ;;
(-d)  fullopt="$1"; canonopt="-d"; optarg="$2"; inc=2;;
(-d*) fullopt="$1"; canonopt="-d"; optarg="$( echo "$1" | sed -E "s^-d^^" )"; inc=1 ;;
(-cpp=*) fullopt="$1"; canonopt="-cpp"; optarg="$( echo "$1" | sed -E "s^-cpp=^^" )"; inc=1 ;;
(-cpp)   fullopt="$1"; canonopt="-cpp"; inc=1 ;;
(-callgraph)   fullopt="$1"; canonopt="-callgraph"; inc=1 ;;
(-auxbase)  fullopt="$1"; canonopt="-auxbase"; optarg="$2"; inc=2;;
(-auxbase-strip)  fullopt="$1"; canonopt="-auxbase-strip"; optarg="$2"; inc=2;;
(-aux-info)  fullopt="$1"; canonopt="-aux-info"; optarg="$2"; inc=2;;
(-aux-info=*) fullopt="$1"; canonopt="-aux-info"; optarg="$( echo "$1" | sed -E "s^-aux-info=^^" )"; inc=1 ;;
(-ansi)   fullopt="$1"; canonopt="-ansi"; inc=1 ;;
(-Xf)  fullopt="$1"; canonopt="-Xf"; optarg="$2"; inc=2;;
(-X)   fullopt="$1"; canonopt="-X"; inc=1 ;;
(-Wzerotrip)   fullopt="$1"; canonopt="-Wzerotrip"; inc=1 ;;
(-Wzero-length-bounds)   fullopt="$1"; canonopt="-Wzero-length-bounds"; inc=1 ;;
(-Wzero-as-null-pointer-constant)   fullopt="$1"; canonopt="-Wzero-as-null-pointer-constant"; inc=1 ;;
(-Wwrite-strings)   fullopt="$1"; canonopt="-Wwrite-strings"; inc=1 ;;
(-Wvolatile-register-var)   fullopt="$1"; canonopt="-Wvolatile-register-var"; inc=1 ;;
(-Wvolatile)   fullopt="$1"; canonopt="-Wvolatile"; inc=1 ;;
(-Wvla-larger-than=*) fullopt="$1"; canonopt="-Wvla-larger-than"; optarg="$( echo "$1" | sed -E "s^-Wvla-larger-than=^^" )"; inc=1 ;;
(-Wvla)   fullopt="$1"; canonopt="-Wvla"; inc=1 ;;
(-Wvirtual-move-assign)   fullopt="$1"; canonopt="-Wvirtual-move-assign"; inc=1 ;;
(-Wvirtual-inheritance)   fullopt="$1"; canonopt="-Wvirtual-inheritance"; inc=1 ;;
(-Wverbose-unbounded)   fullopt="$1"; canonopt="-Wverbose-unbounded"; inc=1 ;;
(-Wvector-operation-performance)   fullopt="$1"; canonopt="-Wvector-operation-performance"; inc=1 ;;
(-Wvariadic-macros)   fullopt="$1"; canonopt="-Wvariadic-macros"; inc=1 ;;
(-Wvarargs)   fullopt="$1"; canonopt="-Wvarargs"; inc=1 ;;
(-Wuseless-cast)   fullopt="$1"; canonopt="-Wuseless-cast"; inc=1 ;;
(-Wuse-without-only)   fullopt="$1"; canonopt="-Wuse-without-only"; inc=1 ;;
(-Wunused-variable)   fullopt="$1"; canonopt="-Wunused-variable"; inc=1 ;;
(-Wunused-value)   fullopt="$1"; canonopt="-Wunused-value"; inc=1 ;;
(-Wunused-result)   fullopt="$1"; canonopt="-Wunused-result"; inc=1 ;;
(-Wunused-parameter)   fullopt="$1"; canonopt="-Wunused-parameter"; inc=1 ;;
(-Wunused-macros)   fullopt="$1"; canonopt="-Wunused-macros"; inc=1 ;;
(-Wunused-local-typedefs)   fullopt="$1"; canonopt="-Wunused-local-typedefs"; inc=1 ;;
(-Wunused-label)   fullopt="$1"; canonopt="-Wunused-label"; inc=1 ;;
(-Wunused-function)   fullopt="$1"; canonopt="-Wunused-function"; inc=1 ;;
(-Wunused-dummy-argument)   fullopt="$1"; canonopt="-Wunused-dummy-argument"; inc=1 ;;
(-Wunused-const-variable=*) fullopt="$1"; canonopt="-Wunused-const-variable"; optarg="$( echo "$1" | sed -E "s^-Wunused-const-variable=^^" )"; inc=1 ;;
(-Wunused-const-variable)   fullopt="$1"; canonopt="-Wunused-const-variable"; inc=1 ;;
(-Wunused-but-set-variable)   fullopt="$1"; canonopt="-Wunused-but-set-variable"; inc=1 ;;
(-Wunused-but-set-parameter)   fullopt="$1"; canonopt="-Wunused-but-set-parameter"; inc=1 ;;
(-Wunused)   fullopt="$1"; canonopt="-Wunused"; inc=1 ;;
(-Wunsuffixed-float-constants)   fullopt="$1"; canonopt="-Wunsuffixed-float-constants"; inc=1 ;;
(-Wunsafe-loop-optimizations)   fullopt="$1"; canonopt="-Wunsafe-loop-optimizations"; inc=1 ;;
(-Wunreachable-code)   fullopt="$1"; canonopt="-Wunreachable-code"; inc=1 ;;
(-Wunknown-pragmas)   fullopt="$1"; canonopt="-Wunknown-pragmas"; inc=1 ;;
(-Wuninitialized)   fullopt="$1"; canonopt="-Wuninitialized"; inc=1 ;;
(-Wunderflow)   fullopt="$1"; canonopt="-Wunderflow"; inc=1 ;;
(-Wundefined-do-loop)   fullopt="$1"; canonopt="-Wundefined-do-loop"; inc=1 ;;
(-Wundef)   fullopt="$1"; canonopt="-Wundef"; inc=1 ;;
(-Wundeclared-selector)   fullopt="$1"; canonopt="-Wundeclared-selector"; inc=1 ;;
(-Wtype-limits)   fullopt="$1"; canonopt="-Wtype-limits"; inc=1 ;;
(-Wtrigraphs)   fullopt="$1"; canonopt="-Wtrigraphs"; inc=1 ;;
(-Wtrampolines)   fullopt="$1"; canonopt="-Wtrampolines"; inc=1 ;;
(-Wtraditional-conversion)   fullopt="$1"; canonopt="-Wtraditional-conversion"; inc=1 ;;
(-Wtraditional)   fullopt="$1"; canonopt="-Wtraditional"; inc=1 ;;
(-Wterminate)   fullopt="$1"; canonopt="-Wterminate"; inc=1 ;;
(-Wtemplates)   fullopt="$1"; canonopt="-Wtemplates"; inc=1 ;;
(-Wtautological-compare)   fullopt="$1"; canonopt="-Wtautological-compare"; inc=1 ;;
(-Wtarget-lifetime)   fullopt="$1"; canonopt="-Wtarget-lifetime"; inc=1 ;;
(-Wtabs)   fullopt="$1"; canonopt="-Wtabs"; inc=1 ;;
(-Wsystem-headers)   fullopt="$1"; canonopt="-Wsystem-headers"; inc=1 ;;
(-Wsynth)   fullopt="$1"; canonopt="-Wsynth"; inc=1 ;;
(-Wsync-nand)   fullopt="$1"; canonopt="-Wsync-nand"; inc=1 ;;
(-Wswitch-unreachable)   fullopt="$1"; canonopt="-Wswitch-unreachable"; inc=1 ;;
(-Wswitch-outside-range)   fullopt="$1"; canonopt="-Wswitch-outside-range"; inc=1 ;;
(-Wswitch-enum)   fullopt="$1"; canonopt="-Wswitch-enum"; inc=1 ;;
(-Wswitch-default)   fullopt="$1"; canonopt="-Wswitch-default"; inc=1 ;;
(-Wswitch-bool)   fullopt="$1"; canonopt="-Wswitch-bool"; inc=1 ;;
(-Wswitch)   fullopt="$1"; canonopt="-Wswitch"; inc=1 ;;
(-Wsurprising)   fullopt="$1"; canonopt="-Wsurprising"; inc=1 ;;
(-Wsuggest-override)   fullopt="$1"; canonopt="-Wsuggest-override"; inc=1 ;;
(-Wsuggest-final-types)   fullopt="$1"; canonopt="-Wsuggest-final-types"; inc=1 ;;
(-Wsuggest-final-methods)   fullopt="$1"; canonopt="-Wsuggest-final-methods"; inc=1 ;;
(-Wsuggest-attribute=*) fullopt="$1"; canonopt="-Wsuggest-attribute"; optarg="$( echo "$1" | sed -E "s^-Wsuggest-attribute=^^" )"; inc=1 ;;
(-Wsubobject-linkage)   fullopt="$1"; canonopt="-Wsubobject-linkage"; inc=1 ;;
(-Wstudents)   fullopt="$1"; canonopt="-Wstudents"; inc=1 ;;
(-Wstringop-truncation)   fullopt="$1"; canonopt="-Wstringop-truncation"; inc=1 ;;
(-Wstringop-overflow=*) fullopt="$1"; canonopt="-Wstringop-overflow"; optarg="$( echo "$1" | sed -E "s^-Wstringop-overflow=^^" )"; inc=1 ;;
(-Wstringop-overflow)   fullopt="$1"; canonopt="-Wstringop-overflow"; inc=1 ;;
(-Wstring-compare)   fullopt="$1"; canonopt="-Wstring-compare"; inc=1 ;;
(-Wstrict-selector-match)   fullopt="$1"; canonopt="-Wstrict-selector-match"; inc=1 ;;
(-Wstrict-prototypes)   fullopt="$1"; canonopt="-Wstrict-prototypes"; inc=1 ;;
(-Wstrict-overflow=*) fullopt="$1"; canonopt="-Wstrict-overflow"; optarg="$( echo "$1" | sed -E "s^-Wstrict-overflow=^^" )"; inc=1 ;;
(-Wstrict-overflow)   fullopt="$1"; canonopt="-Wstrict-overflow"; inc=1 ;;
(-Wstrict-null-sentinel)   fullopt="$1"; canonopt="-Wstrict-null-sentinel"; inc=1 ;;
(-Wstrict-aliasing=*) fullopt="$1"; canonopt="-Wstrict-aliasing"; optarg="$( echo "$1" | sed -E "s^-Wstrict-aliasing=^^" )"; inc=1 ;;
(-Wstrict-aliasing)   fullopt="$1"; canonopt="-Wstrict-aliasing"; inc=1 ;;
(-Wstack-usage=*) fullopt="$1"; canonopt="-Wstack-usage"; optarg="$( echo "$1" | sed -E "s^-Wstack-usage=^^" )"; inc=1 ;;
(-Wstack-protector)   fullopt="$1"; canonopt="-Wstack-protector"; inc=1 ;;
(-Wspeculative)   fullopt="$1"; canonopt="-Wspeculative"; inc=1 ;;
(-Wsizeof-pointer-memaccess)   fullopt="$1"; canonopt="-Wsizeof-pointer-memaccess"; inc=1 ;;
(-Wsizeof-pointer-div)   fullopt="$1"; canonopt="-Wsizeof-pointer-div"; inc=1 ;;
(-Wsizeof-array-argument)   fullopt="$1"; canonopt="-Wsizeof-array-argument"; inc=1 ;;
(-Wsized-deallocation)   fullopt="$1"; canonopt="-Wsized-deallocation"; inc=1 ;;
(-Wsign-promo)   fullopt="$1"; canonopt="-Wsign-promo"; inc=1 ;;
(-Wsign-conversion)   fullopt="$1"; canonopt="-Wsign-conversion"; inc=1 ;;
(-Wsign-compare)   fullopt="$1"; canonopt="-Wsign-compare"; inc=1 ;;
(-Wshift-overflow=*) fullopt="$1"; canonopt="-Wshift-overflow"; optarg="$( echo "$1" | sed -E "s^-Wshift-overflow=^^" )"; inc=1 ;;
(-Wshift-overflow)   fullopt="$1"; canonopt="-Wshift-overflow"; inc=1 ;;
(-Wshift-negative-value)   fullopt="$1"; canonopt="-Wshift-negative-value"; inc=1 ;;
(-Wshift-count-overflow)   fullopt="$1"; canonopt="-Wshift-count-overflow"; inc=1 ;;
(-Wshift-count-negative)   fullopt="$1"; canonopt="-Wshift-count-negative"; inc=1 ;;
(-Wshadow=*) fullopt="$1"; canonopt="-Wshadow"; optarg="$( echo "$1" | sed -E "s^-Wshadow=^^" )"; inc=1 ;;
(-Wshadow-local)   fullopt="$1"; canonopt="-Wshadow-local"; inc=1 ;;
(-Wshadow-ivar)   fullopt="$1"; canonopt="-Wshadow-ivar"; inc=1 ;;
(-Wshadow-compatible-local)   fullopt="$1"; canonopt="-Wshadow-compatible-local"; inc=1 ;;
(-Wshadow)   fullopt="$1"; canonopt="-Wshadow"; inc=1 ;;
(-Wsequence-point)   fullopt="$1"; canonopt="-Wsequence-point"; inc=1 ;;
(-Wselector)   fullopt="$1"; canonopt="-Wselector"; inc=1 ;;
(-Wscalar-storage-order)   fullopt="$1"; canonopt="-Wscalar-storage-order"; inc=1 ;;
(-Wreturn-type)   fullopt="$1"; canonopt="-Wreturn-type"; inc=1 ;;
(-Wreturn-local-addr)   fullopt="$1"; canonopt="-Wreturn-local-addr"; inc=1 ;;
(-Wrestrict)   fullopt="$1"; canonopt="-Wrestrict"; inc=1 ;;
(-Wreorder)   fullopt="$1"; canonopt="-Wreorder"; inc=1 ;;
(-Wregister)   fullopt="$1"; canonopt="-Wregister"; inc=1 ;;
(-Wredundant-tags)   fullopt="$1"; canonopt="-Wredundant-tags"; inc=1 ;;
(-Wredundant-move)   fullopt="$1"; canonopt="-Wredundant-move"; inc=1 ;;
(-Wredundant-decls)   fullopt="$1"; canonopt="-Wredundant-decls"; inc=1 ;;
(-Wrealloc-lhs-all)   fullopt="$1"; canonopt="-Wrealloc-lhs-all"; inc=1 ;;
(-Wrealloc-lhs)   fullopt="$1"; canonopt="-Wrealloc-lhs"; inc=1 ;;
(-Wreal-q-constant)   fullopt="$1"; canonopt="-Wreal-q-constant"; inc=1 ;;
(-Wpsabi)   fullopt="$1"; canonopt="-Wpsabi"; inc=1 ;;
(-Wprotocol)   fullopt="$1"; canonopt="-Wprotocol"; inc=1 ;;
(-Wproperty-assign-default)   fullopt="$1"; canonopt="-Wproperty-assign-default"; inc=1 ;;
(-Wprio-ctor-dtor)   fullopt="$1"; canonopt="-Wprio-ctor-dtor"; inc=1 ;;
(-Wpragmas)   fullopt="$1"; canonopt="-Wpragmas"; inc=1 ;;
(-Wpointer-to-int-cast)   fullopt="$1"; canonopt="-Wpointer-to-int-cast"; inc=1 ;;
(-Wpointer-sign)   fullopt="$1"; canonopt="-Wpointer-sign"; inc=1 ;;
(-Wpointer-compare)   fullopt="$1"; canonopt="-Wpointer-compare"; inc=1 ;;
(-Wpointer-arith)   fullopt="$1"; canonopt="-Wpointer-arith"; inc=1 ;;
(-Wpmf-conversions)   fullopt="$1"; canonopt="-Wpmf-conversions"; inc=1 ;;
(-Wplacement-new=*) fullopt="$1"; canonopt="-Wplacement-new"; optarg="$( echo "$1" | sed -E "s^-Wplacement-new=^^" )"; inc=1 ;;
(-Wplacement-new)   fullopt="$1"; canonopt="-Wplacement-new"; inc=1 ;;
(-Wpessimizing-move)   fullopt="$1"; canonopt="-Wpessimizing-move"; inc=1 ;;
(-Wpedantic-param-names)   fullopt="$1"; canonopt="-Wpedantic-param-names"; inc=1 ;;
(-Wpedantic-cast)   fullopt="$1"; canonopt="-Wpedantic-cast"; inc=1 ;;
(-Wpedantic)   fullopt="$1"; canonopt="-Wpedantic"; inc=1 ;;
(-Wparentheses)   fullopt="$1"; canonopt="-Wparentheses"; inc=1 ;;
(-Wpadded)   fullopt="$1"; canonopt="-Wpadded"; inc=1 ;;
(-Wpacked-not-aligned)   fullopt="$1"; canonopt="-Wpacked-not-aligned"; inc=1 ;;
(-Wpacked-bitfield-compat)   fullopt="$1"; canonopt="-Wpacked-bitfield-compat"; inc=1 ;;
(-Wpacked)   fullopt="$1"; canonopt="-Wpacked"; inc=1 ;;
(-Woverwrite-recursive)   fullopt="$1"; canonopt="-Woverwrite-recursive"; inc=1 ;;
(-Woverride-init-side-effects)   fullopt="$1"; canonopt="-Woverride-init-side-effects"; inc=1 ;;
(-Woverride-init)   fullopt="$1"; canonopt="-Woverride-init"; inc=1 ;;
(-Woverloaded-virtual)   fullopt="$1"; canonopt="-Woverloaded-virtual"; inc=1 ;;
(-Woverlength-strings)   fullopt="$1"; canonopt="-Woverlength-strings"; inc=1 ;;
(-Woverflow)   fullopt="$1"; canonopt="-Woverflow"; inc=1 ;;
(-Wopenmp-simd)   fullopt="$1"; canonopt="-Wopenmp-simd"; inc=1 ;;
(-Wold-style-definition)   fullopt="$1"; canonopt="-Wold-style-definition"; inc=1 ;;
(-Wold-style-declaration)   fullopt="$1"; canonopt="-Wold-style-declaration"; inc=1 ;;
(-Wold-style-cast)   fullopt="$1"; canonopt="-Wold-style-cast"; inc=1 ;;
(-Wodr)   fullopt="$1"; canonopt="-Wodr"; inc=1 ;;
(-Wnull-dereference)   fullopt="$1"; canonopt="-Wnull-dereference"; inc=1 ;;
(-Wnormalized=*) fullopt="$1"; canonopt="-Wnormalized"; optarg="$( echo "$1" | sed -E "s^-Wnormalized=^^" )"; inc=1 ;;
(-Wnormalized)   fullopt="$1"; canonopt="-Wnormalized"; inc=1 ;;
(-Wnonnull-compare)   fullopt="$1"; canonopt="-Wnonnull-compare"; inc=1 ;;
(-Wnonnull)   fullopt="$1"; canonopt="-Wnonnull"; inc=1 ;;
(-Wnon-virtual-dtor)   fullopt="$1"; canonopt="-Wnon-virtual-dtor"; inc=1 ;;
(-Wnon-template-friend)   fullopt="$1"; canonopt="-Wnon-template-friend"; inc=1 ;;
(-Wnoexcept-type)   fullopt="$1"; canonopt="-Wnoexcept-type"; inc=1 ;;
(-Wnoexcept)   fullopt="$1"; canonopt="-Wnoexcept"; inc=1 ;;
(-Wno-vla-larger-than)   fullopt="$1"; canonopt="-Wno-vla-larger-than"; inc=1 ;;
(-Wno-stack-usage)   fullopt="$1"; canonopt="-Wno-stack-usage"; inc=1 ;;
(-Wno-larger-than)   fullopt="$1"; canonopt="-Wno-larger-than"; inc=1 ;;
(-Wno-frame-larger-than)   fullopt="$1"; canonopt="-Wno-frame-larger-than"; inc=1 ;;
(-Wno-alloca-larger-than)   fullopt="$1"; canonopt="-Wno-alloca-larger-than"; inc=1 ;;
(-Wno-alloc-size-larger-than)   fullopt="$1"; canonopt="-Wno-alloc-size-larger-than"; inc=1 ;;
(-Wnested-externs)   fullopt="$1"; canonopt="-Wnested-externs"; inc=1 ;;
(-Wnarrowing)   fullopt="$1"; canonopt="-Wnarrowing"; inc=1 ;;
(-Wnamespaces)   fullopt="$1"; canonopt="-Wnamespaces"; inc=1 ;;
(-Wmultistatement-macros)   fullopt="$1"; canonopt="-Wmultistatement-macros"; inc=1 ;;
(-Wmultiple-inheritance)   fullopt="$1"; canonopt="-Wmultiple-inheritance"; inc=1 ;;
(-Wmultichar)   fullopt="$1"; canonopt="-Wmultichar"; inc=1 ;;
(-Wmudflap)   fullopt="$1"; canonopt="-Wmudflap"; inc=1 ;;
(-Wmissing-prototypes)   fullopt="$1"; canonopt="-Wmissing-prototypes"; inc=1 ;;
(-Wmissing-profile)   fullopt="$1"; canonopt="-Wmissing-profile"; inc=1 ;;
(-Wmissing-parameter-type)   fullopt="$1"; canonopt="-Wmissing-parameter-type"; inc=1 ;;
(-Wmissing-noreturn)   fullopt="$1"; canonopt="-Wmissing-noreturn"; inc=1 ;;
(-Wmissing-include-dirs)   fullopt="$1"; canonopt="-Wmissing-include-dirs"; inc=1 ;;
(-Wmissing-format-attribute)   fullopt="$1"; canonopt="-Wmissing-format-attribute"; inc=1 ;;
(-Wmissing-field-initializers)   fullopt="$1"; canonopt="-Wmissing-field-initializers"; inc=1 ;;
(-Wmissing-declarations)   fullopt="$1"; canonopt="-Wmissing-declarations"; inc=1 ;;
(-Wmissing-braces)   fullopt="$1"; canonopt="-Wmissing-braces"; inc=1 ;;
(-Wmissing-attributes)   fullopt="$1"; canonopt="-Wmissing-attributes"; inc=1 ;;
(-Wmismatched-tags)   fullopt="$1"; canonopt="-Wmismatched-tags"; inc=1 ;;
(-Wmisleading-indentation)   fullopt="$1"; canonopt="-Wmisleading-indentation"; inc=1 ;;
(-Wmemset-transposed-args)   fullopt="$1"; canonopt="-Wmemset-transposed-args"; inc=1 ;;
(-Wmemset-elt-size)   fullopt="$1"; canonopt="-Wmemset-elt-size"; inc=1 ;;
(-Wmaybe-uninitialized)   fullopt="$1"; canonopt="-Wmaybe-uninitialized"; inc=1 ;;
(-Wmain)   fullopt="$1"; canonopt="-Wmain"; inc=1 ;;
(-Wlto-type-mismatch)   fullopt="$1"; canonopt="-Wlto-type-mismatch"; inc=1 ;;
(-Wlong-long)   fullopt="$1"; canonopt="-Wlong-long"; inc=1 ;;
(-Wlogical-op)   fullopt="$1"; canonopt="-Wlogical-op"; inc=1 ;;
(-Wlogical-not-parentheses)   fullopt="$1"; canonopt="-Wlogical-not-parentheses"; inc=1 ;;
(-Wliteral-suffix)   fullopt="$1"; canonopt="-Wliteral-suffix"; inc=1 ;;
(-Wline-truncation)   fullopt="$1"; canonopt="-Wline-truncation"; inc=1 ;;
(-Wlarger-than=*) fullopt="$1"; canonopt="-Wlarger-than"; optarg="$( echo "$1" | sed -E "s^-Wlarger-than=^^" )"; inc=1 ;;
(-Wlarger-than-)   fullopt="$1"; canonopt="-Wlarger-than-"; inc=1 ;;
(-Wjump-misses-init)   fullopt="$1"; canonopt="-Wjump-misses-init"; inc=1 ;;
(-Winvalid-pch)   fullopt="$1"; canonopt="-Winvalid-pch"; inc=1 ;;
(-Winvalid-offsetof)   fullopt="$1"; canonopt="-Winvalid-offsetof"; inc=1 ;;
(-Winvalid-memory-model)   fullopt="$1"; canonopt="-Winvalid-memory-model"; inc=1 ;;
(-Wintrinsics-std)   fullopt="$1"; canonopt="-Wintrinsics-std"; inc=1 ;;
(-Wintrinsic-shadow)   fullopt="$1"; canonopt="-Wintrinsic-shadow"; inc=1 ;;
(-Winteger-division)   fullopt="$1"; canonopt="-Winteger-division"; inc=1 ;;
(-Wint-to-pointer-cast)   fullopt="$1"; canonopt="-Wint-to-pointer-cast"; inc=1 ;;
(-Wint-in-bool-context)   fullopt="$1"; canonopt="-Wint-in-bool-context"; inc=1 ;;
(-Wint-conversion)   fullopt="$1"; canonopt="-Wint-conversion"; inc=1 ;;
(-Winline)   fullopt="$1"; canonopt="-Winline"; inc=1 ;;
(-Winit-self)   fullopt="$1"; canonopt="-Winit-self"; inc=1 ;;
(-Winit-list-lifetime)   fullopt="$1"; canonopt="-Winit-list-lifetime"; inc=1 ;;
(-Winherited-variadic-ctor)   fullopt="$1"; canonopt="-Winherited-variadic-ctor"; inc=1 ;;
(-Wincompatible-pointer-types)   fullopt="$1"; canonopt="-Wincompatible-pointer-types"; inc=1 ;;
(-Winaccessible-base)   fullopt="$1"; canonopt="-Winaccessible-base"; inc=1 ;;
(-Wimport)   fullopt="$1"; canonopt="-Wimport"; inc=1 ;;
(-Wimplicit-procedure)   fullopt="$1"; canonopt="-Wimplicit-procedure"; inc=1 ;;
(-Wimplicit-interface)   fullopt="$1"; canonopt="-Wimplicit-interface"; inc=1 ;;
(-Wimplicit-int)   fullopt="$1"; canonopt="-Wimplicit-int"; inc=1 ;;
(-Wimplicit-function-declaration)   fullopt="$1"; canonopt="-Wimplicit-function-declaration"; inc=1 ;;
(-Wimplicit-fallthrough=*) fullopt="$1"; canonopt="-Wimplicit-fallthrough"; optarg="$( echo "$1" | sed -E "s^-Wimplicit-fallthrough=^^" )"; inc=1 ;;
(-Wimplicit-fallthrough)   fullopt="$1"; canonopt="-Wimplicit-fallthrough"; inc=1 ;;
(-Wimplicit)   fullopt="$1"; canonopt="-Wimplicit"; inc=1 ;;
(-Wignored-qualifiers)   fullopt="$1"; canonopt="-Wignored-qualifiers"; inc=1 ;;
(-Wignored-attributes)   fullopt="$1"; canonopt="-Wignored-attributes"; inc=1 ;;
(-Wif-not-aligned)   fullopt="$1"; canonopt="-Wif-not-aligned"; inc=1 ;;
(-Whsa)   fullopt="$1"; canonopt="-Whsa"; inc=1 ;;
(-Wfunction-elimination)   fullopt="$1"; canonopt="-Wfunction-elimination"; inc=1 ;;
(-Wfrontend-loop-interchange)   fullopt="$1"; canonopt="-Wfrontend-loop-interchange"; inc=1 ;;
(-Wfree-nonheap-object)   fullopt="$1"; canonopt="-Wfree-nonheap-object"; inc=1 ;;
(-Wframe-larger-than=*) fullopt="$1"; canonopt="-Wframe-larger-than"; optarg="$( echo "$1" | sed -E "s^-Wframe-larger-than=^^" )"; inc=1 ;;
(-Wframe-address)   fullopt="$1"; canonopt="-Wframe-address"; inc=1 ;;
(-Wformat=*) fullopt="$1"; canonopt="-Wformat"; optarg="$( echo "$1" | sed -E "s^-Wformat=^^" )"; inc=1 ;;
(-Wformat-zero-length)   fullopt="$1"; canonopt="-Wformat-zero-length"; inc=1 ;;
(-Wformat-y2k)   fullopt="$1"; canonopt="-Wformat-y2k"; inc=1 ;;
(-Wformat-truncation=*) fullopt="$1"; canonopt="-Wformat-truncation"; optarg="$( echo "$1" | sed -E "s^-Wformat-truncation=^^" )"; inc=1 ;;
(-Wformat-truncation)   fullopt="$1"; canonopt="-Wformat-truncation"; inc=1 ;;
(-Wformat-signedness)   fullopt="$1"; canonopt="-Wformat-signedness"; inc=1 ;;
(-Wformat-security)   fullopt="$1"; canonopt="-Wformat-security"; inc=1 ;;
(-Wformat-overflow*) fullopt="$1"; canonopt="-Wformat-overflow"; optarg="$( echo "$1" | sed -E "s^-Wformat-overflow^^" )"; inc=1 ;;
(-Wformat-overflow=*) fullopt="$1"; canonopt="-Wformat-overflow"; optarg="$( echo "$1" | sed -E "s^-Wformat-overflow=^^" )"; inc=1 ;;
(-Wformat-nonliteral)   fullopt="$1"; canonopt="-Wformat-nonliteral"; inc=1 ;;
(-Wformat-extra-args)   fullopt="$1"; canonopt="-Wformat-extra-args"; inc=1 ;;
(-Wformat-diag)   fullopt="$1"; canonopt="-Wformat-diag"; inc=1 ;;
(-Wformat-contains-nul)   fullopt="$1"; canonopt="-Wformat-contains-nul"; inc=1 ;;
(-Wformat)   fullopt="$1"; canonopt="-Wformat"; inc=1 ;;
(-Wfloat-equal)   fullopt="$1"; canonopt="-Wfloat-equal"; inc=1 ;;
(-Wfloat-conversion)   fullopt="$1"; canonopt="-Wfloat-conversion"; inc=1 ;;
(-Wfatal-errors)   fullopt="$1"; canonopt="-Wfatal-errors"; inc=1 ;;
(-Wextra-semi)   fullopt="$1"; canonopt="-Wextra-semi"; inc=1 ;;
(-Wextra)   fullopt="$1"; canonopt="-Wextra"; inc=1 ;;
(-Wexpansion-to-defined)   fullopt="$1"; canonopt="-Wexpansion-to-defined"; inc=1 ;;
(-Werror=*) fullopt="$1"; canonopt="-Werror"; optarg="$( echo "$1" | sed -E "s^-Werror=^^" )"; inc=1 ;;
(-Werror-implicit-function-declaration)   fullopt="$1"; canonopt="-Werror-implicit-function-declaration"; inc=1 ;;
(-Werror)   fullopt="$1"; canonopt="-Werror"; inc=1 ;;
(-Wenum-conversion)   fullopt="$1"; canonopt="-Wenum-conversion"; inc=1 ;;
(-Wenum-compare)   fullopt="$1"; canonopt="-Wenum-compare"; inc=1 ;;
(-Wendif-labels)   fullopt="$1"; canonopt="-Wendif-labels"; inc=1 ;;
(-Wempty-body)   fullopt="$1"; canonopt="-Wempty-body"; inc=1 ;;
(-Weffc++)   fullopt="$1"; canonopt="-Weffc++"; inc=1 ;;
(-Wduplicated-cond)   fullopt="$1"; canonopt="-Wduplicated-cond"; inc=1 ;;
(-Wduplicated-branches)   fullopt="$1"; canonopt="-Wduplicated-branches"; inc=1 ;;
(-Wduplicate-decl-specifier)   fullopt="$1"; canonopt="-Wduplicate-decl-specifier"; inc=1 ;;
(-Wdouble-promotion)   fullopt="$1"; canonopt="-Wdouble-promotion"; inc=1 ;;
(-Wdo-subscript)   fullopt="$1"; canonopt="-Wdo-subscript"; inc=1 ;;
(-Wdiv-by-zero)   fullopt="$1"; canonopt="-Wdiv-by-zero"; inc=1 ;;
(-Wdiscarded-qualifiers)   fullopt="$1"; canonopt="-Wdiscarded-qualifiers"; inc=1 ;;
(-Wdiscarded-array-qualifiers)   fullopt="$1"; canonopt="-Wdiscarded-array-qualifiers"; inc=1 ;;
(-Wdisabled-optimization)   fullopt="$1"; canonopt="-Wdisabled-optimization"; inc=1 ;;
(-Wdesignated-init)   fullopt="$1"; canonopt="-Wdesignated-init"; inc=1 ;;
(-Wdeprecated-declarations)   fullopt="$1"; canonopt="-Wdeprecated-declarations"; inc=1 ;;
(-Wdeprecated-copy-dtor)   fullopt="$1"; canonopt="-Wdeprecated-copy-dtor"; inc=1 ;;
(-Wdeprecated-copy)   fullopt="$1"; canonopt="-Wdeprecated-copy"; inc=1 ;;
(-Wdeprecated)   fullopt="$1"; canonopt="-Wdeprecated"; inc=1 ;;
(-Wdelete-non-virtual-dtor)   fullopt="$1"; canonopt="-Wdelete-non-virtual-dtor"; inc=1 ;;
(-Wdelete-incomplete)   fullopt="$1"; canonopt="-Wdelete-incomplete"; inc=1 ;;
(-Wdeclaration-after-statement)   fullopt="$1"; canonopt="-Wdeclaration-after-statement"; inc=1 ;;
(-Wdate-time)   fullopt="$1"; canonopt="-Wdate-time"; inc=1 ;;
(-Wdangling-else)   fullopt="$1"; canonopt="-Wdangling-else"; inc=1 ;;
(-Wctor-dtor-privacy)   fullopt="$1"; canonopt="-Wctor-dtor-privacy"; inc=1 ;;
(-Wcpp)   fullopt="$1"; canonopt="-Wcpp"; inc=1 ;;
(-Wcoverage-mismatch)   fullopt="$1"; canonopt="-Wcoverage-mismatch"; inc=1 ;;
(-Wconversion-null)   fullopt="$1"; canonopt="-Wconversion-null"; inc=1 ;;
(-Wconversion-extra)   fullopt="$1"; canonopt="-Wconversion-extra"; inc=1 ;;
(-Wconversion)   fullopt="$1"; canonopt="-Wconversion"; inc=1 ;;
(-Wconditionally-supported)   fullopt="$1"; canonopt="-Wconditionally-supported"; inc=1 ;;
(-Wcompare-reals)   fullopt="$1"; canonopt="-Wcompare-reals"; inc=1 ;;
(-Wcomments)   fullopt="$1"; canonopt="-Wcomments"; inc=1 ;;
(-Wcomment)   fullopt="$1"; canonopt="-Wcomment"; inc=1 ;;
(-Wcomma-subscript)   fullopt="$1"; canonopt="-Wcomma-subscript"; inc=1 ;;
(-Wclobbered)   fullopt="$1"; canonopt="-Wclobbered"; inc=1 ;;
(-Wclass-memaccess)   fullopt="$1"; canonopt="-Wclass-memaccess"; inc=1 ;;
(-Wclass-conversion)   fullopt="$1"; canonopt="-Wclass-conversion"; inc=1 ;;
(-Wchkp)   fullopt="$1"; canonopt="-Wchkp"; inc=1 ;;
(-Wcharacter-truncation)   fullopt="$1"; canonopt="-Wcharacter-truncation"; inc=1 ;;
(-Wchar-subscripts)   fullopt="$1"; canonopt="-Wchar-subscripts"; inc=1 ;;
(-Wcatch-value=*) fullopt="$1"; canonopt="-Wcatch-value"; optarg="$( echo "$1" | sed -E "s^-Wcatch-value=^^" )"; inc=1 ;;
(-Wcatch-value)   fullopt="$1"; canonopt="-Wcatch-value"; inc=1 ;;
(-Wcast-result)   fullopt="$1"; canonopt="-Wcast-result"; inc=1 ;;
(-Wcast-qual)   fullopt="$1"; canonopt="-Wcast-qual"; inc=1 ;;
(-Wcast-function-type)   fullopt="$1"; canonopt="-Wcast-function-type"; inc=1 ;;
(-Wcast-align=*) fullopt="$1"; canonopt="-Wcast-align"; optarg="$( echo "$1" | sed -E "s^-Wcast-align=^^" )"; inc=1 ;;
(-Wcast-align)   fullopt="$1"; canonopt="-Wcast-align"; inc=1 ;;
(-Wcannot-profile)   fullopt="$1"; canonopt="-Wcannot-profile"; inc=1 ;;
(-Wc99-c11-compat)   fullopt="$1"; canonopt="-Wc99-c11-compat"; inc=1 ;;
(-Wc90-c99-compat)   fullopt="$1"; canonopt="-Wc90-c99-compat"; inc=1 ;;
(-Wc11-c2x-compat)   fullopt="$1"; canonopt="-Wc11-c2x-compat"; inc=1 ;;
(-Wc-binding-type)   fullopt="$1"; canonopt="-Wc-binding-type"; inc=1 ;;
(-Wc++2a-compat)   fullopt="$1"; canonopt="-Wc++2a-compat"; inc=1 ;;
(-Wc++20-compat)   fullopt="$1"; canonopt="-Wc++20-compat"; inc=1 ;;
(-Wc++1z-compat)   fullopt="$1"; canonopt="-Wc++1z-compat"; inc=1 ;;
(-Wc++17-compat)   fullopt="$1"; canonopt="-Wc++17-compat"; inc=1 ;;
(-Wc++14-compat)   fullopt="$1"; canonopt="-Wc++14-compat"; inc=1 ;;
(-Wc++11-compat)   fullopt="$1"; canonopt="-Wc++11-compat"; inc=1 ;;
(-Wc++0x-compat)   fullopt="$1"; canonopt="-Wc++0x-compat"; inc=1 ;;
(-Wc++-compat)   fullopt="$1"; canonopt="-Wc++-compat"; inc=1 ;;
(-Wbuiltin-macro-redefined)   fullopt="$1"; canonopt="-Wbuiltin-macro-redefined"; inc=1 ;;
(-Wbuiltin-declaration-mismatch)   fullopt="$1"; canonopt="-Wbuiltin-declaration-mismatch"; inc=1 ;;
(-Wbool-operation)   fullopt="$1"; canonopt="-Wbool-operation"; inc=1 ;;
(-Wbool-compare)   fullopt="$1"; canonopt="-Wbool-compare"; inc=1 ;;
(-Wbad-function-cast)   fullopt="$1"; canonopt="-Wbad-function-cast"; inc=1 ;;
(-Wattributes)   fullopt="$1"; canonopt="-Wattributes"; inc=1 ;;
(-Wattribute-warning)   fullopt="$1"; canonopt="-Wattribute-warning"; inc=1 ;;
(-Wattribute-alias=*) fullopt="$1"; canonopt="-Wattribute-alias"; optarg="$( echo "$1" | sed -E "s^-Wattribute-alias=^^" )"; inc=1 ;;
(-Wattribute-alias)   fullopt="$1"; canonopt="-Wattribute-alias"; inc=1 ;;
(-Wassign-intercept)   fullopt="$1"; canonopt="-Wassign-intercept"; inc=1 ;;
(-Warray-temporaries)   fullopt="$1"; canonopt="-Warray-temporaries"; inc=1 ;;
(-Warray-bounds=*) fullopt="$1"; canonopt="-Warray-bounds"; optarg="$( echo "$1" | sed -E "s^-Warray-bounds=^^" )"; inc=1 ;;
(-Warray-bounds)   fullopt="$1"; canonopt="-Warray-bounds"; inc=1 ;;
(-Warith-conversion)   fullopt="$1"; canonopt="-Warith-conversion"; inc=1 ;;
(-Wargument-mismatch)   fullopt="$1"; canonopt="-Wargument-mismatch"; inc=1 ;;
(-Wanalyzer-use-of-pointer-in-stale-stack-frame)   fullopt="$1"; canonopt="-Wanalyzer-use-of-pointer-in-stale-stack-frame"; inc=1 ;;
(-Wanalyzer-use-after-free)   fullopt="$1"; canonopt="-Wanalyzer-use-after-free"; inc=1 ;;
(-Wanalyzer-unsafe-call-within-signal-handler)   fullopt="$1"; canonopt="-Wanalyzer-unsafe-call-within-signal-handler"; inc=1 ;;
(-Wanalyzer-too-complex)   fullopt="$1"; canonopt="-Wanalyzer-too-complex"; inc=1 ;;
(-Wanalyzer-tainted-array-index)   fullopt="$1"; canonopt="-Wanalyzer-tainted-array-index"; inc=1 ;;
(-Wanalyzer-stale-setjmp-buffer)   fullopt="$1"; canonopt="-Wanalyzer-stale-setjmp-buffer"; inc=1 ;;
(-Wanalyzer-possible-null-dereference)   fullopt="$1"; canonopt="-Wanalyzer-possible-null-dereference"; inc=1 ;;
(-Wanalyzer-possible-null-argument)   fullopt="$1"; canonopt="-Wanalyzer-possible-null-argument"; inc=1 ;;
(-Wanalyzer-null-dereference)   fullopt="$1"; canonopt="-Wanalyzer-null-dereference"; inc=1 ;;
(-Wanalyzer-null-argument)   fullopt="$1"; canonopt="-Wanalyzer-null-argument"; inc=1 ;;
(-Wanalyzer-malloc-leak)   fullopt="$1"; canonopt="-Wanalyzer-malloc-leak"; inc=1 ;;
(-Wanalyzer-free-of-non-heap)   fullopt="$1"; canonopt="-Wanalyzer-free-of-non-heap"; inc=1 ;;
(-Wanalyzer-file-leak)   fullopt="$1"; canonopt="-Wanalyzer-file-leak"; inc=1 ;;
(-Wanalyzer-exposure-through-output-file)   fullopt="$1"; canonopt="-Wanalyzer-exposure-through-output-file"; inc=1 ;;
(-Wanalyzer-double-free)   fullopt="$1"; canonopt="-Wanalyzer-double-free"; inc=1 ;;
(-Wanalyzer-double-fclose)   fullopt="$1"; canonopt="-Wanalyzer-double-fclose"; inc=1 ;;
(-Wampersand)   fullopt="$1"; canonopt="-Wampersand"; inc=1 ;;
(-Walloca-larger-than=*) fullopt="$1"; canonopt="-Walloca-larger-than"; optarg="$( echo "$1" | sed -E "s^-Walloca-larger-than=^^" )"; inc=1 ;;
(-Walloca)   fullopt="$1"; canonopt="-Walloca"; inc=1 ;;
(-Walloc-zero)   fullopt="$1"; canonopt="-Walloc-zero"; inc=1 ;;
(-Walloc-size-larger-than=*) fullopt="$1"; canonopt="-Walloc-size-larger-than"; optarg="$( echo "$1" | sed -E "s^-Walloc-size-larger-than=^^" )"; inc=1 ;;
(-Wall)   fullopt="$1"; canonopt="-Wall"; inc=1 ;;
(-Waligned-new=*) fullopt="$1"; canonopt="-Waligned-new"; optarg="$( echo "$1" | sed -E "s^-Waligned-new=^^" )"; inc=1 ;;
(-Waligned-new)   fullopt="$1"; canonopt="-Waligned-new"; inc=1 ;;
(-Walign-commons)   fullopt="$1"; canonopt="-Walign-commons"; inc=1 ;;
(-Waliasing)   fullopt="$1"; canonopt="-Waliasing"; inc=1 ;;
(-Waggressive-loop-optimizations)   fullopt="$1"; canonopt="-Waggressive-loop-optimizations"; inc=1 ;;
(-Waggregate-return)   fullopt="$1"; canonopt="-Waggregate-return"; inc=1 ;;
(-Waddress-of-packed-member)   fullopt="$1"; canonopt="-Waddress-of-packed-member"; inc=1 ;;
(-Waddress)   fullopt="$1"; canonopt="-Waddress"; inc=1 ;;
(-Wabsolute-value)   fullopt="$1"; canonopt="-Wabsolute-value"; inc=1 ;;
(-Wabi=*) fullopt="$1"; canonopt="-Wabi"; optarg="$( echo "$1" | sed -E "s^-Wabi=^^" )"; inc=1 ;;
(-Wabi-tag)   fullopt="$1"; canonopt="-Wabi-tag"; inc=1 ;;
(-Wabi)   fullopt="$1"; canonopt="-Wabi"; inc=1 ;;
(-W)   fullopt="$1"; canonopt="-W"; inc=1 ;;
(-U)  fullopt="$1"; canonopt="-U"; optarg="$2"; inc=2;;
(-U*) fullopt="$1"; canonopt="-U"; optarg="$( echo "$1" | sed -E "s^-U^^" )"; inc=1 ;;
(-P)   fullopt="$1"; canonopt="-P"; inc=1 ;;
(-Os)   fullopt="$1"; canonopt="-Os"; inc=1 ;;
(-Og)   fullopt="$1"; canonopt="-Og"; inc=1 ;;
(-Ofast)   fullopt="$1"; canonopt="-Ofast"; inc=1 ;;
(-O*) fullopt="$1"; canonopt="-O"; optarg="$( echo "$1" | sed -E "s^-O^^" )"; inc=1 ;;
(-MT)  fullopt="$1"; canonopt="-MT"; optarg="$2"; inc=2;;
(-MQ)  fullopt="$1"; canonopt="-MQ"; optarg="$2"; inc=2;;
(-MP)   fullopt="$1"; canonopt="-MP"; inc=1 ;;
(-MMD)  fullopt="$1"; canonopt="-MMD"; optarg="$2"; inc=2;;
(-MM)   fullopt="$1"; canonopt="-MM"; inc=1 ;;
(-MG)   fullopt="$1"; canonopt="-MG"; inc=1 ;;
(-MF)  fullopt="$1"; canonopt="-MF"; optarg="$2"; inc=2;;
(-MD)  fullopt="$1"; canonopt="-MD"; optarg="$2"; inc=2;;
(-M)   fullopt="$1"; canonopt="-M"; inc=1 ;;
(-L)  fullopt="$1"; canonopt="-L"; optarg="$2"; inc=2;;
(-J)  fullopt="$1"; canonopt="-J"; optarg="$2"; inc=2;;
(-J*) fullopt="$1"; canonopt="-J"; optarg="$( echo "$1" | sed -E "s^-J^^" )"; inc=1 ;;
(-I)  fullopt="$1"; canonopt="-I"; optarg="$2"; inc=2;;
(-Hf)  fullopt="$1"; canonopt="-Hf"; optarg="$2"; inc=2;;
(-Hd)  fullopt="$1"; canonopt="-Hd"; optarg="$2"; inc=2;;
(-H)   fullopt="$1"; canonopt="-H"; inc=1 ;;
(-F)  fullopt="$1"; canonopt="-F"; optarg="$2"; inc=2;;
(-E)   fullopt="$1"; canonopt="-E"; inc=1 ;;
(-D)  fullopt="$1"; canonopt="-D"; optarg="$2"; inc=2;;
(-D*) fullopt="$1"; canonopt="-D"; optarg="$( echo "$1" | sed -E "s^-D^^" )"; inc=1 ;;
(-CC)   fullopt="$1"; canonopt="-CC"; inc=1 ;;
(-C)   fullopt="$1"; canonopt="-C"; inc=1 ;;
(-A)  fullopt="$1"; canonopt="-A"; optarg="$2"; inc=2;;
(-A*) fullopt="$1"; canonopt="-A"; optarg="$( echo "$1" | sed -E "s^-A^^" )"; inc=1 ;;
(--write-user-dependencies)  fullopt="$1"; canonopt="--write-user-dependencies"; optarg="$2"; inc=2;;
(--write-dependencies)  fullopt="$1"; canonopt="--write-dependencies"; optarg="$2"; inc=2;;
(--version)   fullopt="$1"; canonopt="--version"; inc=1 ;;
(--verbose)   fullopt="$1"; canonopt="--verbose"; inc=1 ;;
(--user-dependencies)   fullopt="$1"; canonopt="--user-dependencies"; inc=1 ;;
(--undefine-macro)  fullopt="$1"; canonopt="--undefine-macro"; optarg="$2"; inc=2;;
(--undefine-macro=*) fullopt="$1"; canonopt="--undefine-macro"; optarg="$( echo "$1" | sed -E "s^--undefine-macro=^^" )"; inc=1 ;;
(--trigraphs)   fullopt="$1"; canonopt="--trigraphs"; inc=1 ;;
(--traditional-cpp)   fullopt="$1"; canonopt="--traditional-cpp"; inc=1 ;;
(--trace-includes)   fullopt="$1"; canonopt="--trace-includes"; inc=1 ;;
(--target-help)   fullopt="$1"; canonopt="--target-help"; inc=1 ;;
(--profile)   fullopt="$1"; canonopt="--profile"; inc=1 ;;
(--print-missing-file-dependencies)   fullopt="$1"; canonopt="--print-missing-file-dependencies"; inc=1 ;;
(--preprocess)   fullopt="$1"; canonopt="--preprocess"; inc=1 ;;
(--pedantic-errors)   fullopt="$1"; canonopt="--pedantic-errors"; inc=1 ;;
(--pedantic)   fullopt="$1"; canonopt="--pedantic"; inc=1 ;;
(--param=*) fullopt="$1"; canonopt="--param"; optarg="$( echo "$1" | sed -E "s^--param=^^" )"; inc=1 ;;
(--output)  fullopt="$1"; canonopt="--output"; optarg="$2"; inc=2;;
(--output=*) fullopt="$1"; canonopt="--output"; optarg="$( echo "$1" | sed -E "s^--output=^^" )"; inc=1 ;;
(--output-pch)  fullopt="$1"; canonopt="--output-pch"; optarg="$2"; inc=2;;
(--output-pch=*) fullopt="$1"; canonopt="--output-pch"; optarg="$( echo "$1" | sed -E "s^--output-pch=^^" )"; inc=1 ;;
(--optimize)   fullopt="$1"; canonopt="--optimize"; inc=1 ;;
(--no-warnings)   fullopt="$1"; canonopt="--no-warnings"; inc=1 ;;
(--no-standard-libraries)   fullopt="$1"; canonopt="--no-standard-libraries"; inc=1 ;;
(--no-standard-includes)   fullopt="$1"; canonopt="--no-standard-includes"; inc=1 ;;
(--no-line-commands)   fullopt="$1"; canonopt="--no-line-commands"; inc=1 ;;
(--include)  fullopt="$1"; canonopt="--include"; optarg="$2"; inc=2;;
(--include=*) fullopt="$1"; canonopt="--include"; optarg="$( echo "$1" | sed -E "s^--include=^^" )"; inc=1 ;;
(--include-with-prefix)  fullopt="$1"; canonopt="--include-with-prefix"; optarg="$2"; inc=2;;
(--include-with-prefix=*) fullopt="$1"; canonopt="--include-with-prefix"; optarg="$( echo "$1" | sed -E "s^--include-with-prefix=^^" )"; inc=1 ;;
(--include-with-prefix-before)  fullopt="$1"; canonopt="--include-with-prefix-before"; optarg="$2"; inc=2;;
(--include-with-prefix-before=*) fullopt="$1"; canonopt="--include-with-prefix-before"; optarg="$( echo "$1" | sed -E "s^--include-with-prefix-before=^^" )"; inc=1 ;;
(--include-with-prefix-after)  fullopt="$1"; canonopt="--include-with-prefix-after"; optarg="$2"; inc=2;;
(--include-with-prefix-after=*) fullopt="$1"; canonopt="--include-with-prefix-after"; optarg="$( echo "$1" | sed -E "s^--include-with-prefix-after=^^" )"; inc=1 ;;
(--include-prefix)  fullopt="$1"; canonopt="--include-prefix"; optarg="$2"; inc=2;;
(--include-prefix=*) fullopt="$1"; canonopt="--include-prefix"; optarg="$( echo "$1" | sed -E "s^--include-prefix=^^" )"; inc=1 ;;
(--include-directory)  fullopt="$1"; canonopt="--include-directory"; optarg="$2"; inc=2;;
(--include-directory=*) fullopt="$1"; canonopt="--include-directory"; optarg="$( echo "$1" | sed -E "s^--include-directory=^^" )"; inc=1 ;;
(--include-directory-after)  fullopt="$1"; canonopt="--include-directory-after"; optarg="$2"; inc=2;;
(--include-directory-after=*) fullopt="$1"; canonopt="--include-directory-after"; optarg="$( echo "$1" | sed -E "s^--include-directory-after=^^" )"; inc=1 ;;
(--include-barrier)   fullopt="$1"; canonopt="--include-barrier"; inc=1 ;;
(--imacros)  fullopt="$1"; canonopt="--imacros"; optarg="$2"; inc=2;;
(--imacros=*) fullopt="$1"; canonopt="--imacros"; optarg="$( echo "$1" | sed -E "s^--imacros=^^" )"; inc=1 ;;
(--help=*) fullopt="$1"; canonopt="--help"; optarg="$( echo "$1" | sed -E "s^--help=^^" )"; inc=1 ;;
(--help)   fullopt="$1"; canonopt="--help"; inc=1 ;;
(--extra-warnings)   fullopt="$1"; canonopt="--extra-warnings"; inc=1 ;;
(--dumpdir)  fullopt="$1"; canonopt="--dumpdir"; optarg="$2"; inc=2;;
(--dumpbase)  fullopt="$1"; canonopt="--dumpbase"; optarg="$2"; inc=2;;
(--dump)  fullopt="$1"; canonopt="--dump"; optarg="$2"; inc=2;;
(--dump=*) fullopt="$1"; canonopt="--dump"; optarg="$( echo "$1" | sed -E "s^--dump=^^" )"; inc=1 ;;
(--dependencies)   fullopt="$1"; canonopt="--dependencies"; inc=1 ;;
(--define-macro)  fullopt="$1"; canonopt="--define-macro"; optarg="$2"; inc=2;;
(--define-macro=*) fullopt="$1"; canonopt="--define-macro"; optarg="$( echo "$1" | sed -E "s^--define-macro=^^" )"; inc=1 ;;
(--debug)   fullopt="$1"; canonopt="--debug"; inc=1 ;;
(--completion=*) fullopt="$1"; canonopt="--completion"; optarg="$( echo "$1" | sed -E "s^--completion=^^" )"; inc=1 ;;
(--comments-in-macros)   fullopt="$1"; canonopt="--comments-in-macros"; inc=1 ;;
(--comments)   fullopt="$1"; canonopt="--comments"; inc=1 ;;
(--assert)  fullopt="$1"; canonopt="--assert"; optarg="$2"; inc=2;;
(--assert=*) fullopt="$1"; canonopt="--assert"; optarg="$( echo "$1" | sed -E "s^--assert=^^" )"; inc=1 ;;
(--ansi)   fullopt="$1"; canonopt="--ansi"; inc=1 ;;
(--all-warnings)   fullopt="$1"; canonopt="--all-warnings"; inc=1 ;;
# END GENERATED FROM gcc_cc1_optlines | optlines_to_caselines
# manually added / FIXME report bugs:
(-g[1-9]) fullopt="$1"; canonopt="-g"; optarg="$( echo "$1" | sed -E "s^-g^^" )"; inc=1 ;;
esac
}

clang_optcases () {
case "$1" in
# BEGIN GENERATED FROM clang_optlines | optlines_to_caselines
(-z)  fullopt="$1"; canonopt="-z"; optarg="$2"; inc=2;;
(-x)  fullopt="$1"; canonopt="-x"; optarg="$2"; inc=2;;
(-working-directory)  fullopt="$1"; canonopt="-working-directory"; optarg="$2"; inc=2;;
(-w)   fullopt="$1"; canonopt="-w"; inc=1 ;;
(-vtordisp-mode=*) fullopt="$1"; canonopt="-vtordisp-mode"; optarg="$( echo "$1" | sed -E "s^-vtordisp-mode=^^" )"; inc=1 ;;
(-version)   fullopt="$1"; canonopt="-version"; inc=1 ;;
(-verify=*) fullopt="$1"; canonopt="-verify"; optarg="$( echo "$1" | sed -E "s^-verify=^^" )"; inc=1 ;;
(-verify-pch)   fullopt="$1"; canonopt="-verify-pch"; inc=1 ;;
(-verify-ignore-unexpected=*) fullopt="$1"; canonopt="-verify-ignore-unexpected"; optarg="$( echo "$1" | sed -E "s^-verify-ignore-unexpected=^^" )"; inc=1 ;;
(-verify-ignore-unexpected)   fullopt="$1"; canonopt="-verify-ignore-unexpected"; inc=1 ;;
(-verify)   fullopt="$1"; canonopt="-verify"; inc=1 ;;
(-vectorize-slp)   fullopt="$1"; canonopt="-vectorize-slp"; inc=1 ;;
(-vectorize-loops)   fullopt="$1"; canonopt="-vectorize-loops"; inc=1 ;;
(-v)   fullopt="$1"; canonopt="-v"; inc=1 ;;
(-unwindlib=*) fullopt="$1"; canonopt="-unwindlib"; optarg="$( echo "$1" | sed -E "s^-unwindlib=^^" )"; inc=1 ;;
(-unoptimized-cfg)   fullopt="$1"; canonopt="-unoptimized-cfg"; inc=1 ;;
(-undef)   fullopt="$1"; canonopt="-undef"; inc=1 ;;
(-tune-cpu)  fullopt="$1"; canonopt="-tune-cpu"; optarg="$2"; inc=2;;
(-triple)  fullopt="$1"; canonopt="-triple"; optarg="$2"; inc=2;;
(-trim-egraph)   fullopt="$1"; canonopt="-trim-egraph"; inc=1 ;;
(-trigraphs)   fullopt="$1"; canonopt="-trigraphs"; inc=1 ;;
(-traditional-cpp)   fullopt="$1"; canonopt="-traditional-cpp"; inc=1 ;;
(-time)   fullopt="$1"; canonopt="-time"; inc=1 ;;
(-templight-dump)   fullopt="$1"; canonopt="-templight-dump"; inc=1 ;;
(-target-sdk-version=*) fullopt="$1"; canonopt="-target-sdk-version"; optarg="$( echo "$1" | sed -E "s^-target-sdk-version=^^" )"; inc=1 ;;
(-target-linker-version)  fullopt="$1"; canonopt="-target-linker-version"; optarg="$2"; inc=2;;
(-target-feature)  fullopt="$1"; canonopt="-target-feature"; optarg="$2"; inc=2;;
(-target-cpu)  fullopt="$1"; canonopt="-target-cpu"; optarg="$2"; inc=2;;
(-target-abi)  fullopt="$1"; canonopt="-target-abi"; optarg="$2"; inc=2;;
(-sys-header-deps)   fullopt="$1"; canonopt="-sys-header-deps"; inc=1 ;;
(-sycl-std=*) fullopt="$1"; canonopt="-sycl-std"; optarg="$( echo "$1" | sed -E "s^-sycl-std=^^" )"; inc=1 ;;
(-stdlib=*) fullopt="$1"; canonopt="-stdlib"; optarg="$( echo "$1" | sed -E "s^-stdlib=^^" )"; inc=1 ;;
(-stdlib++-isystem)  fullopt="$1"; canonopt="-stdlib++-isystem"; optarg="$2"; inc=2;;
(-std=*) fullopt="$1"; canonopt="-std"; optarg="$( echo "$1" | sed -E "s^-std=^^" )"; inc=1 ;;
(-stats-file=*) fullopt="$1"; canonopt="-stats-file"; optarg="$( echo "$1" | sed -E "s^-stats-file=^^" )"; inc=1 ;;
(-static-openmp)   fullopt="$1"; canonopt="-static-openmp"; inc=1 ;;
(-static-libsan)   fullopt="$1"; canonopt="-static-libsan"; inc=1 ;;
(-static-define)   fullopt="$1"; canonopt="-static-define"; inc=1 ;;
(-stack-usage-file)  fullopt="$1"; canonopt="-stack-usage-file"; optarg="$2"; inc=2;;
(-stack-protector)  fullopt="$1"; canonopt="-stack-protector"; optarg="$2"; inc=2;;
(-stack-protector-buffer-size)  fullopt="$1"; canonopt="-stack-protector-buffer-size"; optarg="$2"; inc=2;;
(-split-dwarf-output)  fullopt="$1"; canonopt="-split-dwarf-output"; optarg="$2"; inc=2;;
(-split-dwarf-file)  fullopt="$1"; canonopt="-split-dwarf-file"; optarg="$2"; inc=2;;
(-shared-libsan)   fullopt="$1"; canonopt="-shared-libsan"; inc=1 ;;
(-setup-static-analyzer)   fullopt="$1"; canonopt="-setup-static-analyzer"; inc=1 ;;
(-serialize-diagnostics)  fullopt="$1"; canonopt="-serialize-diagnostics"; optarg="$2"; inc=2;;
(-serialize-diagnostic-file)  fullopt="$1"; canonopt="-serialize-diagnostic-file"; optarg="$2"; inc=2;;
(-save-temps=*) fullopt="$1"; canonopt="-save-temps"; optarg="$( echo "$1" | sed -E "s^-save-temps=^^" )"; inc=1 ;;
(-save-temps)   fullopt="$1"; canonopt="-save-temps"; inc=1 ;;
(-save-stats=*) fullopt="$1"; canonopt="-save-stats"; optarg="$( echo "$1" | sed -E "s^-save-stats=^^" )"; inc=1 ;;
(-save-stats)   fullopt="$1"; canonopt="-save-stats"; inc=1 ;;
(-rtlib=*) fullopt="$1"; canonopt="-rtlib"; optarg="$( echo "$1" | sed -E "s^-rtlib=^^" )"; inc=1 ;;
(-round-trip-args)   fullopt="$1"; canonopt="-round-trip-args"; inc=1 ;;
(-rewrite-test)   fullopt="$1"; canonopt="-rewrite-test"; inc=1 ;;
(-rewrite-objc)   fullopt="$1"; canonopt="-rewrite-objc"; inc=1 ;;
(-rewrite-macros)   fullopt="$1"; canonopt="-rewrite-macros"; inc=1 ;;
(-rewrite-legacy-objc)   fullopt="$1"; canonopt="-rewrite-legacy-objc"; inc=1 ;;
(-resource-dir)  fullopt="$1"; canonopt="-resource-dir"; optarg="$2"; inc=2;;
(-remap-file)  fullopt="$1"; canonopt="-remap-file"; optarg="$2"; inc=2;;
(-relocatable-pch)   fullopt="$1"; canonopt="-relocatable-pch"; inc=1 ;;
(-relaxed-aliasing)   fullopt="$1"; canonopt="-relaxed-aliasing"; inc=1 ;;
(-record-command-line)  fullopt="$1"; canonopt="-record-command-line"; optarg="$2"; inc=2;;
(-pthread)   fullopt="$1"; canonopt="-pthread"; inc=1 ;;
(-print-targets)   fullopt="$1"; canonopt="-print-targets"; inc=1 ;;
(-print-target-triple)   fullopt="$1"; canonopt="-print-target-triple"; inc=1 ;;
(-print-supported-cpus)   fullopt="$1"; canonopt="-print-supported-cpus"; inc=1 ;;
(-print-stats)   fullopt="$1"; canonopt="-print-stats"; inc=1 ;;
(-print-search-dirs)   fullopt="$1"; canonopt="-print-search-dirs"; inc=1 ;;
(-print-runtime-dir)   fullopt="$1"; canonopt="-print-runtime-dir"; inc=1 ;;
(-print-rocm-search-dirs)   fullopt="$1"; canonopt="-print-rocm-search-dirs"; inc=1 ;;
(-print-resource-dir)   fullopt="$1"; canonopt="-print-resource-dir"; inc=1 ;;
(-print-prog-name=*) fullopt="$1"; canonopt="-print-prog-name"; optarg="$( echo "$1" | sed -E "s^-print-prog-name=^^" )"; inc=1 ;;
(-print-preamble)   fullopt="$1"; canonopt="-print-preamble"; inc=1 ;;
(-print-multiarch)   fullopt="$1"; canonopt="-print-multiarch"; inc=1 ;;
(-print-libgcc-file-name)   fullopt="$1"; canonopt="-print-libgcc-file-name"; inc=1 ;;
(-print-ivar-layout)   fullopt="$1"; canonopt="-print-ivar-layout"; inc=1 ;;
(-print-file-name=*) fullopt="$1"; canonopt="-print-file-name"; optarg="$( echo "$1" | sed -E "s^-print-file-name=^^" )"; inc=1 ;;
(-print-effective-triple)   fullopt="$1"; canonopt="-print-effective-triple"; inc=1 ;;
(-print-dependency-directives-minimized-source)   fullopt="$1"; canonopt="-print-dependency-directives-minimized-source"; inc=1 ;;
(-preamble-bytes=*) fullopt="$1"; canonopt="-preamble-bytes"; optarg="$( echo "$1" | sed -E "s^-preamble-bytes=^^" )"; inc=1 ;;
(-plugin)  fullopt="$1"; canonopt="-plugin"; optarg="$2"; inc=2;;
(-plugin-arg-*) fullopt="$1"; canonopt="-plugin-arg-"; optarg="$( echo "$1" | sed -E "s^-plugin-arg-^^" )"; inc=1 ;;
(-pipe)   fullopt="$1"; canonopt="-pipe"; inc=1 ;;
(-pic-level)  fullopt="$1"; canonopt="-pic-level"; optarg="$2"; inc=2;;
(-pic-is-pie)   fullopt="$1"; canonopt="-pic-is-pie"; inc=1 ;;
(-pg)   fullopt="$1"; canonopt="-pg"; inc=1 ;;
(-pedantic)   fullopt="$1"; canonopt="-pedantic"; inc=1 ;;
(-pch-through-header=*) fullopt="$1"; canonopt="-pch-through-header"; optarg="$( echo "$1" | sed -E "s^-pch-through-header=^^" )"; inc=1 ;;
(-pch-through-hdrstop-use)   fullopt="$1"; canonopt="-pch-through-hdrstop-use"; inc=1 ;;
(-pch-through-hdrstop-create)   fullopt="$1"; canonopt="-pch-through-hdrstop-create"; inc=1 ;;
(-opt-record-passes)  fullopt="$1"; canonopt="-opt-record-passes"; optarg="$2"; inc=2;;
(-opt-record-format)  fullopt="$1"; canonopt="-opt-record-format"; optarg="$2"; inc=2;;
(-opt-record-file)  fullopt="$1"; canonopt="-opt-record-file"; optarg="$2"; inc=2;;
(-objcxx-isystem)  fullopt="$1"; canonopt="-objcxx-isystem"; optarg="$2"; inc=2;;
(-objcmt-whitelist-dir-path=*) fullopt="$1"; canonopt="-objcmt-whitelist-dir-path"; optarg="$( echo "$1" | sed -E "s^-objcmt-whitelist-dir-path=^^" )"; inc=1 ;;
(-objcmt-returns-innerpointer-property)   fullopt="$1"; canonopt="-objcmt-returns-innerpointer-property"; inc=1 ;;
(-objcmt-ns-nonatomic-iosonly)   fullopt="$1"; canonopt="-objcmt-ns-nonatomic-iosonly"; inc=1 ;;
(-objcmt-migrate-subscripting)   fullopt="$1"; canonopt="-objcmt-migrate-subscripting"; inc=1 ;;
(-objcmt-migrate-readwrite-property)   fullopt="$1"; canonopt="-objcmt-migrate-readwrite-property"; inc=1 ;;
(-objcmt-migrate-readonly-property)   fullopt="$1"; canonopt="-objcmt-migrate-readonly-property"; inc=1 ;;
(-objcmt-migrate-protocol-conformance)   fullopt="$1"; canonopt="-objcmt-migrate-protocol-conformance"; inc=1 ;;
(-objcmt-migrate-property-dot-syntax)   fullopt="$1"; canonopt="-objcmt-migrate-property-dot-syntax"; inc=1 ;;
(-objcmt-migrate-property)   fullopt="$1"; canonopt="-objcmt-migrate-property"; inc=1 ;;
(-objcmt-migrate-ns-macros)   fullopt="$1"; canonopt="-objcmt-migrate-ns-macros"; inc=1 ;;
(-objcmt-migrate-literals)   fullopt="$1"; canonopt="-objcmt-migrate-literals"; inc=1 ;;
(-objcmt-migrate-instancetype)   fullopt="$1"; canonopt="-objcmt-migrate-instancetype"; inc=1 ;;
(-objcmt-migrate-designated-init)   fullopt="$1"; canonopt="-objcmt-migrate-designated-init"; inc=1 ;;
(-objcmt-migrate-annotation)   fullopt="$1"; canonopt="-objcmt-migrate-annotation"; inc=1 ;;
(-objcmt-migrate-all)   fullopt="$1"; canonopt="-objcmt-migrate-all"; inc=1 ;;
(-objcmt-atomic-property)   fullopt="$1"; canonopt="-objcmt-atomic-property"; inc=1 ;;
(-objc-isystem)  fullopt="$1"; canonopt="-objc-isystem"; optarg="$2"; inc=2;;
(-o)  fullopt="$1"; canonopt="-o"; optarg="$2"; inc=2;;
(-nostdsysteminc)   fullopt="$1"; canonopt="-nostdsysteminc"; inc=1 ;;
(-nostdinc++)   fullopt="$1"; canonopt="-nostdinc++"; inc=1 ;;
(-nogpulib)   fullopt="$1"; canonopt="-nogpulib"; inc=1 ;;
(-nogpuinc)   fullopt="$1"; canonopt="-nogpuinc"; inc=1 ;;
(-nobuiltininc)   fullopt="$1"; canonopt="-nobuiltininc"; inc=1 ;;
(-no-struct-path-tbaa)   fullopt="$1"; canonopt="-no-struct-path-tbaa"; inc=1 ;;
(-no-round-trip-args)   fullopt="$1"; canonopt="-no-round-trip-args"; inc=1 ;;
(-no-pthread)   fullopt="$1"; canonopt="-no-pthread"; inc=1 ;;
(-no-ns-alloc-error)   fullopt="$1"; canonopt="-no-ns-alloc-error"; inc=1 ;;
(-no-implicit-float)   fullopt="$1"; canonopt="-no-implicit-float"; inc=1 ;;
(-no-finalize-removal)   fullopt="$1"; canonopt="-no-finalize-removal"; inc=1 ;;
(-no-emit-llvm-uselists)   fullopt="$1"; canonopt="-no-emit-llvm-uselists"; inc=1 ;;
(-no-code-completion-ns-level-decls)   fullopt="$1"; canonopt="-no-code-completion-ns-level-decls"; inc=1 ;;
(-no-code-completion-globals)   fullopt="$1"; canonopt="-no-code-completion-globals"; inc=1 ;;
(-new-struct-path-tbaa)   fullopt="$1"; canonopt="-new-struct-path-tbaa"; inc=1 ;;
(-mwavefrontsize64)   fullopt="$1"; canonopt="-mwavefrontsize64"; inc=1 ;;
(-munwind-tables)   fullopt="$1"; canonopt="-munwind-tables"; inc=1 ;;
(-munsafe-fp-atomics)   fullopt="$1"; canonopt="-munsafe-fp-atomics"; inc=1 ;;
(-munaligned-access)   fullopt="$1"; canonopt="-munaligned-access"; inc=1 ;;
(-mtune=*) fullopt="$1"; canonopt="-mtune"; optarg="$( echo "$1" | sed -E "s^-mtune=^^" )"; inc=1 ;;
(-mtp)  fullopt="$1"; canonopt="-mtp"; optarg="$2"; inc=2;;
(-mtp=*) fullopt="$1"; canonopt="-mtp"; optarg="$( echo "$1" | sed -E "s^-mtp=^^" )"; inc=1 ;;
(-mtls-size=*) fullopt="$1"; canonopt="-mtls-size"; optarg="$( echo "$1" | sed -E "s^-mtls-size=^^" )"; inc=1 ;;
(-mtls-direct-seg-refs)   fullopt="$1"; canonopt="-mtls-direct-seg-refs"; inc=1 ;;
(-mthread-model)  fullopt="$1"; canonopt="-mthread-model"; optarg="$2"; inc=2;;
(-mtgsplit)   fullopt="$1"; canonopt="-mtgsplit"; inc=1 ;;
(-mt-migrate-directory)  fullopt="$1"; canonopt="-mt-migrate-directory"; optarg="$2"; inc=2;;
(-msvr4-struct-return)   fullopt="$1"; canonopt="-msvr4-struct-return"; inc=1 ;;
(-msve-vector-bits=*) fullopt="$1"; canonopt="-msve-vector-bits"; optarg="$( echo "$1" | sed -E "s^-msve-vector-bits=^^" )"; inc=1 ;;
(-mstrict-align)   fullopt="$1"; canonopt="-mstrict-align"; inc=1 ;;
(-mstackrealign)   fullopt="$1"; canonopt="-mstackrealign"; inc=1 ;;
(-mstack-protector-guard=*) fullopt="$1"; canonopt="-mstack-protector-guard"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard=^^" )"; inc=1 ;;
(-mstack-protector-guard-reg=*) fullopt="$1"; canonopt="-mstack-protector-guard-reg"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard-reg=^^" )"; inc=1 ;;
(-mstack-protector-guard-offset=*) fullopt="$1"; canonopt="-mstack-protector-guard-offset"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard-offset=^^" )"; inc=1 ;;
(-mstack-probe-size=*) fullopt="$1"; canonopt="-mstack-probe-size"; optarg="$( echo "$1" | sed -E "s^-mstack-probe-size=^^" )"; inc=1 ;;
(-mstack-arg-probe)   fullopt="$1"; canonopt="-mstack-arg-probe"; inc=1 ;;
(-mstack-alignment=*) fullopt="$1"; canonopt="-mstack-alignment"; optarg="$( echo "$1" | sed -E "s^-mstack-alignment=^^" )"; inc=1 ;;
(-mspeculative-load-hardening)   fullopt="$1"; canonopt="-mspeculative-load-hardening"; inc=1 ;;
(-msoft-float)   fullopt="$1"; canonopt="-msoft-float"; inc=1 ;;
(-msmall-data-limit)  fullopt="$1"; canonopt="-msmall-data-limit"; optarg="$2"; inc=2;;
(-msmall-data-limit=*) fullopt="$1"; canonopt="-msmall-data-limit"; optarg="$( echo "$1" | sed -E "s^-msmall-data-limit=^^" )"; inc=1 ;;
(-msign-return-address=*) fullopt="$1"; canonopt="-msign-return-address"; optarg="$( echo "$1" | sed -E "s^-msign-return-address=^^" )"; inc=1 ;;
(-mseses)   fullopt="$1"; canonopt="-mseses"; inc=1 ;;
(-msave-temp-labels)   fullopt="$1"; canonopt="-msave-temp-labels"; inc=1 ;;
(-msave-restore)   fullopt="$1"; canonopt="-msave-restore"; inc=1 ;;
(-mrtd)   fullopt="$1"; canonopt="-mrtd"; inc=1 ;;
(-mrestrict-it)   fullopt="$1"; canonopt="-mrestrict-it"; inc=1 ;;
(-mrelocation-model)  fullopt="$1"; canonopt="-mrelocation-model"; optarg="$2"; inc=2;;
(-mrelax-all)   fullopt="$1"; canonopt="-mrelax-all"; inc=1 ;;
(-mrelax)   fullopt="$1"; canonopt="-mrelax"; inc=1 ;;
(-mregparm)  fullopt="$1"; canonopt="-mregparm"; optarg="$2"; inc=2;;
(-mrecord-mcount)   fullopt="$1"; canonopt="-mrecord-mcount"; inc=1 ;;
(-mreassociate)   fullopt="$1"; canonopt="-mreassociate"; inc=1 ;;
(-mqdsp6-compat)   fullopt="$1"; canonopt="-mqdsp6-compat"; inc=1 ;;
(-mprefer-vector-width=*) fullopt="$1"; canonopt="-mprefer-vector-width"; optarg="$( echo "$1" | sed -E "s^-mprefer-vector-width=^^" )"; inc=1 ;;
(-mpad-max-prefix-size=*) fullopt="$1"; canonopt="-mpad-max-prefix-size"; optarg="$( echo "$1" | sed -E "s^-mpad-max-prefix-size=^^" )"; inc=1 ;;
(-mpackets)   fullopt="$1"; canonopt="-mpackets"; inc=1 ;;
(-mpacked-stack)   fullopt="$1"; canonopt="-mpacked-stack"; inc=1 ;;
(-moutline-atomics)   fullopt="$1"; canonopt="-moutline-atomics"; inc=1 ;;
(-moutline)   fullopt="$1"; canonopt="-moutline"; inc=1 ;;
(-momit-leaf-frame-pointer)   fullopt="$1"; canonopt="-momit-leaf-frame-pointer"; inc=1 ;;
(-module-file-info)   fullopt="$1"; canonopt="-module-file-info"; inc=1 ;;
(-module-file-deps)   fullopt="$1"; canonopt="-module-file-deps"; inc=1 ;;
(-module-dependency-dir)  fullopt="$1"; canonopt="-module-dependency-dir"; optarg="$2"; inc=2;;
(-mnvs)   fullopt="$1"; canonopt="-mnvs"; inc=1 ;;
(-mnvj)   fullopt="$1"; canonopt="-mnvj"; inc=1 ;;
(-mnop-mcount)   fullopt="$1"; canonopt="-mnop-mcount"; inc=1 ;;
(-mnoexecstack)   fullopt="$1"; canonopt="-mnoexecstack"; inc=1 ;;
(-mnocrc)   fullopt="$1"; canonopt="-mnocrc"; inc=1 ;;
(-mno-wavefrontsize64)   fullopt="$1"; canonopt="-mno-wavefrontsize64"; inc=1 ;;
(-mno-unsafe-fp-atomics)   fullopt="$1"; canonopt="-mno-unsafe-fp-atomics"; inc=1 ;;
(-mno-unaligned-access)   fullopt="$1"; canonopt="-mno-unaligned-access"; inc=1 ;;
(-mno-tls-direct-seg-refs)   fullopt="$1"; canonopt="-mno-tls-direct-seg-refs"; inc=1 ;;
(-mno-tgsplit)   fullopt="$1"; canonopt="-mno-tgsplit"; inc=1 ;;
(-mno-stack-arg-probe)   fullopt="$1"; canonopt="-mno-stack-arg-probe"; inc=1 ;;
(-mno-speculative-load-hardening)   fullopt="$1"; canonopt="-mno-speculative-load-hardening"; inc=1 ;;
(-mno-seses)   fullopt="$1"; canonopt="-mno-seses"; inc=1 ;;
(-mno-save-restore)   fullopt="$1"; canonopt="-mno-save-restore"; inc=1 ;;
(-mno-restrict-it)   fullopt="$1"; canonopt="-mno-restrict-it"; inc=1 ;;
(-mno-relax)   fullopt="$1"; canonopt="-mno-relax"; inc=1 ;;
(-mno-packets)   fullopt="$1"; canonopt="-mno-packets"; inc=1 ;;
(-mno-outline-atomics)   fullopt="$1"; canonopt="-mno-outline-atomics"; inc=1 ;;
(-mno-outline)   fullopt="$1"; canonopt="-mno-outline"; inc=1 ;;
(-mno-nvs)   fullopt="$1"; canonopt="-mno-nvs"; inc=1 ;;
(-mno-nvj)   fullopt="$1"; canonopt="-mno-nvj"; inc=1 ;;
(-mno-neg-immediates)   fullopt="$1"; canonopt="-mno-neg-immediates"; inc=1 ;;
(-mno-mt)   fullopt="$1"; canonopt="-mno-mt"; inc=1 ;;
(-mno-msa)   fullopt="$1"; canonopt="-mno-msa"; inc=1 ;;
(-mno-ms-bitfields)   fullopt="$1"; canonopt="-mno-ms-bitfields"; inc=1 ;;
(-mno-movt)   fullopt="$1"; canonopt="-mno-movt"; inc=1 ;;
(-mno-memops)   fullopt="$1"; canonopt="-mno-memops"; inc=1 ;;
(-mno-madd4)   fullopt="$1"; canonopt="-mno-madd4"; inc=1 ;;
(-mno-lvi-hardening)   fullopt="$1"; canonopt="-mno-lvi-hardening"; inc=1 ;;
(-mno-lvi-cfi)   fullopt="$1"; canonopt="-mno-lvi-cfi"; inc=1 ;;
(-mno-long-calls)   fullopt="$1"; canonopt="-mno-long-calls"; inc=1 ;;
(-mno-local-sdata)   fullopt="$1"; canonopt="-mno-local-sdata"; inc=1 ;;
(-mno-incremental-linker-compatible)   fullopt="$1"; canonopt="-mno-incremental-linker-compatible"; inc=1 ;;
(-mno-implicit-float)   fullopt="$1"; canonopt="-mno-implicit-float"; inc=1 ;;
(-mno-hvx)   fullopt="$1"; canonopt="-mno-hvx"; inc=1 ;;
(-mno-gpopt)   fullopt="$1"; canonopt="-mno-gpopt"; inc=1 ;;
(-mno-global-merge)   fullopt="$1"; canonopt="-mno-global-merge"; inc=1 ;;
(-mno-fix-cortex-a53-835769)   fullopt="$1"; canonopt="-mno-fix-cortex-a53-835769"; inc=1 ;;
(-mno-extern-sdata)   fullopt="$1"; canonopt="-mno-extern-sdata"; inc=1 ;;
(-mno-execute-only)   fullopt="$1"; canonopt="-mno-execute-only"; inc=1 ;;
(-mno-embedded-data)   fullopt="$1"; canonopt="-mno-embedded-data"; inc=1 ;;
(-mno-cumode)   fullopt="$1"; canonopt="-mno-cumode"; inc=1 ;;
(-mno-crc)   fullopt="$1"; canonopt="-mno-crc"; inc=1 ;;
(-mno-code-object-v3)   fullopt="$1"; canonopt="-mno-code-object-v3"; inc=1 ;;
(-mno-backchain)   fullopt="$1"; canonopt="-mno-backchain"; inc=1 ;;
(-mno-amdgpu-ieee)   fullopt="$1"; canonopt="-mno-amdgpu-ieee"; inc=1 ;;
(-mno-abicalls)   fullopt="$1"; canonopt="-mno-abicalls"; inc=1 ;;
(-mmt)   fullopt="$1"; canonopt="-mmt"; inc=1 ;;
(-mmsa)   fullopt="$1"; canonopt="-mmsa"; inc=1 ;;
(-mms-bitfields)   fullopt="$1"; canonopt="-mms-bitfields"; inc=1 ;;
(-mmemops)   fullopt="$1"; canonopt="-mmemops"; inc=1 ;;
(-mmark-bti-property)   fullopt="$1"; canonopt="-mmark-bti-property"; inc=1 ;;
(-mmadd4)   fullopt="$1"; canonopt="-mmadd4"; inc=1 ;;
(-mmacosx-version-min=*) fullopt="$1"; canonopt="-mmacosx-version-min"; optarg="$( echo "$1" | sed -E "s^-mmacosx-version-min=^^" )"; inc=1 ;;
(-mlvi-hardening)   fullopt="$1"; canonopt="-mlvi-hardening"; inc=1 ;;
(-mlvi-cfi)   fullopt="$1"; canonopt="-mlvi-cfi"; inc=1 ;;
(-mlong-double-80)   fullopt="$1"; canonopt="-mlong-double-80"; inc=1 ;;
(-mlong-double-64)   fullopt="$1"; canonopt="-mlong-double-64"; inc=1 ;;
(-mlong-double-128)   fullopt="$1"; canonopt="-mlong-double-128"; inc=1 ;;
(-mlong-calls)   fullopt="$1"; canonopt="-mlong-calls"; inc=1 ;;
(-mlocal-sdata)   fullopt="$1"; canonopt="-mlocal-sdata"; inc=1 ;;
(-mllvm)  fullopt="$1"; canonopt="-mllvm"; optarg="$2"; inc=2;;
(-mlink-builtin-bitcode)  fullopt="$1"; canonopt="-mlink-builtin-bitcode"; optarg="$2"; inc=2;;
(-mlink-bitcode-file)  fullopt="$1"; canonopt="-mlink-bitcode-file"; optarg="$2"; inc=2;;
(-mlimit-float-precision)  fullopt="$1"; canonopt="-mlimit-float-precision"; optarg="$2"; inc=2;;
(-mios-version-min=*) fullopt="$1"; canonopt="-mios-version-min"; optarg="$( echo "$1" | sed -E "s^-mios-version-min=^^" )"; inc=1 ;;
(-mindirect-jump=*) fullopt="$1"; canonopt="-mindirect-jump"; optarg="$( echo "$1" | sed -E "s^-mindirect-jump=^^" )"; inc=1 ;;
(-mincremental-linker-compatible)   fullopt="$1"; canonopt="-mincremental-linker-compatible"; inc=1 ;;
(-migrate)   fullopt="$1"; canonopt="-migrate"; inc=1 ;;
(-mignore-xcoff-visibility)   fullopt="$1"; canonopt="-mignore-xcoff-visibility"; inc=1 ;;
(-miamcu)   fullopt="$1"; canonopt="-miamcu"; inc=1 ;;
(-mhvx=*) fullopt="$1"; canonopt="-mhvx"; optarg="$( echo "$1" | sed -E "s^-mhvx=^^" )"; inc=1 ;;
(-mhvx-length=*) fullopt="$1"; canonopt="-mhvx-length"; optarg="$( echo "$1" | sed -E "s^-mhvx-length=^^" )"; inc=1 ;;
(-mhvx)   fullopt="$1"; canonopt="-mhvx"; inc=1 ;;
(-mharden-sls=*) fullopt="$1"; canonopt="-mharden-sls"; optarg="$( echo "$1" | sed -E "s^-mharden-sls=^^" )"; inc=1 ;;
(-mgpopt)   fullopt="$1"; canonopt="-mgpopt"; inc=1 ;;
(-mglobal-merge)   fullopt="$1"; canonopt="-mglobal-merge"; inc=1 ;;
(-mgeneral-regs-only)   fullopt="$1"; canonopt="-mgeneral-regs-only"; inc=1 ;;
(-mframe-pointer=*) fullopt="$1"; canonopt="-mframe-pointer"; optarg="$( echo "$1" | sed -E "s^-mframe-pointer=^^" )"; inc=1 ;;
(-mfpmath)  fullopt="$1"; canonopt="-mfpmath"; optarg="$2"; inc=2;;
(-mfp64)   fullopt="$1"; canonopt="-mfp64"; inc=1 ;;
(-mfp32)   fullopt="$1"; canonopt="-mfp32"; inc=1 ;;
(-mfloat-abi)  fullopt="$1"; canonopt="-mfloat-abi"; optarg="$2"; inc=2;;
(-mfix-cortex-a53-835769)   fullopt="$1"; canonopt="-mfix-cortex-a53-835769"; inc=1 ;;
(-mfentry)   fullopt="$1"; canonopt="-mfentry"; inc=1 ;;
(-mextern-sdata)   fullopt="$1"; canonopt="-mextern-sdata"; inc=1 ;;
(-mexecute-only)   fullopt="$1"; canonopt="-mexecute-only"; inc=1 ;;
(-mexec-model=*) fullopt="$1"; canonopt="-mexec-model"; optarg="$( echo "$1" | sed -E "s^-mexec-model=^^" )"; inc=1 ;;
(-menable-unsafe-fp-math)   fullopt="$1"; canonopt="-menable-unsafe-fp-math"; inc=1 ;;
(-menable-no-nans)   fullopt="$1"; canonopt="-menable-no-nans"; inc=1 ;;
(-menable-no-infs)   fullopt="$1"; canonopt="-menable-no-infs"; inc=1 ;;
(-menable-experimental-extensions)   fullopt="$1"; canonopt="-menable-experimental-extensions"; inc=1 ;;
(-membedded-data)   fullopt="$1"; canonopt="-membedded-data"; inc=1 ;;
(-meabi)  fullopt="$1"; canonopt="-meabi"; optarg="$2"; inc=2;;
(-mdouble=*) fullopt="$1"; canonopt="-mdouble"; optarg="$( echo "$1" | sed -E "s^-mdouble=^^" )"; inc=1 ;;
(-mdisable-tail-calls)   fullopt="$1"; canonopt="-mdisable-tail-calls"; inc=1 ;;
(-mdebug-pass)  fullopt="$1"; canonopt="-mdebug-pass"; optarg="$2"; inc=2;;
(-mcumode)   fullopt="$1"; canonopt="-mcumode"; inc=1 ;;
(-mcrc)   fullopt="$1"; canonopt="-mcrc"; inc=1 ;;
(-mconstructor-aliases)   fullopt="$1"; canonopt="-mconstructor-aliases"; inc=1 ;;
(-mcode-object-version=*) fullopt="$1"; canonopt="-mcode-object-version"; optarg="$( echo "$1" | sed -E "s^-mcode-object-version=^^" )"; inc=1 ;;
(-mcode-object-v3)   fullopt="$1"; canonopt="-mcode-object-v3"; inc=1 ;;
(-mcmse)   fullopt="$1"; canonopt="-mcmse"; inc=1 ;;
(-mcmodel=*) fullopt="$1"; canonopt="-mcmodel"; optarg="$( echo "$1" | sed -E "s^-mcmodel=^^" )"; inc=1 ;;
(-mbranches-within-32B-boundaries)   fullopt="$1"; canonopt="-mbranches-within-32B-boundaries"; inc=1 ;;
(-mbranch-protection=*) fullopt="$1"; canonopt="-mbranch-protection"; optarg="$( echo "$1" | sed -E "s^-mbranch-protection=^^" )"; inc=1 ;;
(-mbackchain)   fullopt="$1"; canonopt="-mbackchain"; inc=1 ;;
(-massembler-no-warn)   fullopt="$1"; canonopt="-massembler-no-warn"; inc=1 ;;
(-massembler-fatal-warnings)   fullopt="$1"; canonopt="-massembler-fatal-warnings"; inc=1 ;;
(-mamdgpu-ieee)   fullopt="$1"; canonopt="-mamdgpu-ieee"; inc=1 ;;
(-malign-double)   fullopt="$1"; canonopt="-malign-double"; inc=1 ;;
(-malign-branch=*) fullopt="$1"; canonopt="-malign-branch"; optarg="$( echo "$1" | sed -E "s^-malign-branch=^^" )"; inc=1 ;;
(-malign-branch-boundary=*) fullopt="$1"; canonopt="-malign-branch-boundary"; optarg="$( echo "$1" | sed -E "s^-malign-branch-boundary=^^" )"; inc=1 ;;
(-maix-struct-return)   fullopt="$1"; canonopt="-maix-struct-return"; inc=1 ;;
(-main-file-name)  fullopt="$1"; canonopt="-main-file-name"; optarg="$2"; inc=2;;
(-mabicalls)   fullopt="$1"; canonopt="-mabicalls"; inc=1 ;;
(-mabi=*) fullopt="$1"; canonopt="-mabi"; optarg="$( echo "$1" | sed -E "s^-mabi=^^" )"; inc=1 ;;
(-load)  fullopt="$1"; canonopt="-load"; optarg="$2"; inc=2;;
(-iwithsysroot)  fullopt="$1"; canonopt="-iwithsysroot"; optarg="$2"; inc=2;;
(-iwithprefixbefore)  fullopt="$1"; canonopt="-iwithprefixbefore"; optarg="$2"; inc=2;;
(-iwithprefix)  fullopt="$1"; canonopt="-iwithprefix"; optarg="$2"; inc=2;;
(-ivfsoverlay)  fullopt="$1"; canonopt="-ivfsoverlay"; optarg="$2"; inc=2;;
(-isystem)  fullopt="$1"; canonopt="-isystem"; optarg="$2"; inc=2;;
(-isystem-after)  fullopt="$1"; canonopt="-isystem-after"; optarg="$2"; inc=2;;
(-isysroot)  fullopt="$1"; canonopt="-isysroot"; optarg="$2"; inc=2;;
(-iquote)  fullopt="$1"; canonopt="-iquote"; optarg="$2"; inc=2;;
(-iprefix)  fullopt="$1"; canonopt="-iprefix"; optarg="$2"; inc=2;;
(-internal-isystem)  fullopt="$1"; canonopt="-internal-isystem"; optarg="$2"; inc=2;;
(-internal-externc-isystem)  fullopt="$1"; canonopt="-internal-externc-isystem"; optarg="$2"; inc=2;;
(-init-only)   fullopt="$1"; canonopt="-init-only"; inc=1 ;;
(-index-header-map)   fullopt="$1"; canonopt="-index-header-map"; inc=1 ;;
(-include)  fullopt="$1"; canonopt="-include"; optarg="$2"; inc=2;;
(-include-pch)  fullopt="$1"; canonopt="-include-pch"; optarg="$2"; inc=2;;
(-imacros)  fullopt="$1"; canonopt="-imacros"; optarg="$2"; inc=2;;
(-iframeworkwithsysroot)  fullopt="$1"; canonopt="-iframeworkwithsysroot"; optarg="$2"; inc=2;;
(-iframework)  fullopt="$1"; canonopt="-iframework"; optarg="$2"; inc=2;;
(-idirafter)  fullopt="$1"; canonopt="-idirafter"; optarg="$2"; inc=2;;
(-ibuiltininc)   fullopt="$1"; canonopt="-ibuiltininc"; inc=1 ;;
(-help)   fullopt="$1"; canonopt="-help"; inc=1 ;;
(-header-include-file)  fullopt="$1"; canonopt="-header-include-file"; optarg="$2"; inc=2;;
(-gz=*) fullopt="$1"; canonopt="-gz"; optarg="$( echo "$1" | sed -E "s^-gz=^^" )"; inc=1 ;;
(-gstrict-dwarf)   fullopt="$1"; canonopt="-gstrict-dwarf"; inc=1 ;;
(-gsplit-dwarf=*) fullopt="$1"; canonopt="-gsplit-dwarf"; optarg="$( echo "$1" | sed -E "s^-gsplit-dwarf=^^" )"; inc=1 ;;
(-gno-strict-dwarf)   fullopt="$1"; canonopt="-gno-strict-dwarf"; inc=1 ;;
(-gno-inline-line-tables)   fullopt="$1"; canonopt="-gno-inline-line-tables"; inc=1 ;;
(-gno-embed-source)   fullopt="$1"; canonopt="-gno-embed-source"; inc=1 ;;
(-gno-column-info)   fullopt="$1"; canonopt="-gno-column-info"; inc=1 ;;
(-gno-codeview-ghash)   fullopt="$1"; canonopt="-gno-codeview-ghash"; inc=1 ;;
(-gmodules)   fullopt="$1"; canonopt="-gmodules"; inc=1 ;;
(-gline-tables-only)   fullopt="$1"; canonopt="-gline-tables-only"; inc=1 ;;
(-gline-directives-only)   fullopt="$1"; canonopt="-gline-directives-only"; inc=1 ;;
(-ginline-line-tables)   fullopt="$1"; canonopt="-ginline-line-tables"; inc=1 ;;
(-gembed-source)   fullopt="$1"; canonopt="-gembed-source"; inc=1 ;;
(-gdwarf64)   fullopt="$1"; canonopt="-gdwarf64"; inc=1 ;;
(-gdwarf32)   fullopt="$1"; canonopt="-gdwarf32"; inc=1 ;;
(-gdwarf-5)   fullopt="$1"; canonopt="-gdwarf-5"; inc=1 ;;
(-gdwarf-4)   fullopt="$1"; canonopt="-gdwarf-4"; inc=1 ;;
(-gdwarf-3)   fullopt="$1"; canonopt="-gdwarf-3"; inc=1 ;;
(-gdwarf-2)   fullopt="$1"; canonopt="-gdwarf-2"; inc=1 ;;
(-gdwarf)   fullopt="$1"; canonopt="-gdwarf"; inc=1 ;;
(-gcolumn-info)   fullopt="$1"; canonopt="-gcolumn-info"; inc=1 ;;
(-gcodeview-ghash)   fullopt="$1"; canonopt="-gcodeview-ghash"; inc=1 ;;
(-gcodeview)   fullopt="$1"; canonopt="-gcodeview"; inc=1 ;;
(-g)   fullopt="$1"; canonopt="-g"; inc=1 ;;
(-fzvector)   fullopt="$1"; canonopt="-fzvector"; inc=1 ;;
(-fzero-initialized-in-bss)   fullopt="$1"; canonopt="-fzero-initialized-in-bss"; inc=1 ;;
(-fxray-selected-function-group=*) fullopt="$1"; canonopt="-fxray-selected-function-group"; optarg="$( echo "$1" | sed -E "s^-fxray-selected-function-group=^^" )"; inc=1 ;;
(-fxray-never-instrument=*) fullopt="$1"; canonopt="-fxray-never-instrument"; optarg="$( echo "$1" | sed -E "s^-fxray-never-instrument=^^" )"; inc=1 ;;
(-fxray-modes=*) fullopt="$1"; canonopt="-fxray-modes"; optarg="$( echo "$1" | sed -E "s^-fxray-modes=^^" )"; inc=1 ;;
(-fxray-link-deps)   fullopt="$1"; canonopt="-fxray-link-deps"; inc=1 ;;
(-fxray-instrumentation-bundle=*) fullopt="$1"; canonopt="-fxray-instrumentation-bundle"; optarg="$( echo "$1" | sed -E "s^-fxray-instrumentation-bundle=^^" )"; inc=1 ;;
(-fxray-instrument)   fullopt="$1"; canonopt="-fxray-instrument"; inc=1 ;;
(-fxray-instruction-threshold=*) fullopt="$1"; canonopt="-fxray-instruction-threshold"; optarg="$( echo "$1" | sed -E "s^-fxray-instruction-threshold=^^" )"; inc=1 ;;
(-fxray-ignore-loops)   fullopt="$1"; canonopt="-fxray-ignore-loops"; inc=1 ;;
(-fxray-function-index)   fullopt="$1"; canonopt="-fxray-function-index"; inc=1 ;;
(-fxray-function-groups=*) fullopt="$1"; canonopt="-fxray-function-groups"; optarg="$( echo "$1" | sed -E "s^-fxray-function-groups=^^" )"; inc=1 ;;
(-fxray-attr-list=*) fullopt="$1"; canonopt="-fxray-attr-list"; optarg="$( echo "$1" | sed -E "s^-fxray-attr-list=^^" )"; inc=1 ;;
(-fxray-always-instrument=*) fullopt="$1"; canonopt="-fxray-always-instrument"; optarg="$( echo "$1" | sed -E "s^-fxray-always-instrument=^^" )"; inc=1 ;;
(-fxray-always-emit-typedevents)   fullopt="$1"; canonopt="-fxray-always-emit-typedevents"; inc=1 ;;
(-fxray-always-emit-customevents)   fullopt="$1"; canonopt="-fxray-always-emit-customevents"; inc=1 ;;
(-fxl-pragma-pack)   fullopt="$1"; canonopt="-fxl-pragma-pack"; inc=1 ;;
(-fwritable-strings)   fullopt="$1"; canonopt="-fwritable-strings"; inc=1 ;;
(-fwrapv)   fullopt="$1"; canonopt="-fwrapv"; inc=1 ;;
(-fwhole-program-vtables)   fullopt="$1"; canonopt="-fwhole-program-vtables"; inc=1 ;;
(-fwchar-type=*) fullopt="$1"; canonopt="-fwchar-type"; optarg="$( echo "$1" | sed -E "s^-fwchar-type=^^" )"; inc=1 ;;
(-fwasm-exceptions)   fullopt="$1"; canonopt="-fwasm-exceptions"; inc=1 ;;
(-fvisibility)  fullopt="$1"; canonopt="-fvisibility"; optarg="$2"; inc=2;;
(-fvisibility=*) fullopt="$1"; canonopt="-fvisibility"; optarg="$( echo "$1" | sed -E "s^-fvisibility=^^" )"; inc=1 ;;
(-fvisibility-nodllstorageclass=*) fullopt="$1"; canonopt="-fvisibility-nodllstorageclass"; optarg="$( echo "$1" | sed -E "s^-fvisibility-nodllstorageclass=^^" )"; inc=1 ;;
(-fvisibility-ms-compat)   fullopt="$1"; canonopt="-fvisibility-ms-compat"; inc=1 ;;
(-fvisibility-inlines-hidden-static-local-var)   fullopt="$1"; canonopt="-fvisibility-inlines-hidden-static-local-var"; inc=1 ;;
(-fvisibility-inlines-hidden)   fullopt="$1"; canonopt="-fvisibility-inlines-hidden"; inc=1 ;;
(-fvisibility-global-new-delete-hidden)   fullopt="$1"; canonopt="-fvisibility-global-new-delete-hidden"; inc=1 ;;
(-fvisibility-from-dllstorageclass)   fullopt="$1"; canonopt="-fvisibility-from-dllstorageclass"; inc=1 ;;
(-fvisibility-externs-nodllstorageclass=*) fullopt="$1"; canonopt="-fvisibility-externs-nodllstorageclass"; optarg="$( echo "$1" | sed -E "s^-fvisibility-externs-nodllstorageclass=^^" )"; inc=1 ;;
(-fvisibility-externs-dllimport=*) fullopt="$1"; canonopt="-fvisibility-externs-dllimport"; optarg="$( echo "$1" | sed -E "s^-fvisibility-externs-dllimport=^^" )"; inc=1 ;;
(-fvisibility-dllexport=*) fullopt="$1"; canonopt="-fvisibility-dllexport"; optarg="$( echo "$1" | sed -E "s^-fvisibility-dllexport=^^" )"; inc=1 ;;
(-fvirtual-function-elimination)   fullopt="$1"; canonopt="-fvirtual-function-elimination"; inc=1 ;;
(-fverify-debuginfo-preserve-export=*) fullopt="$1"; canonopt="-fverify-debuginfo-preserve-export"; optarg="$( echo "$1" | sed -E "s^-fverify-debuginfo-preserve-export=^^" )"; inc=1 ;;
(-fverify-debuginfo-preserve)   fullopt="$1"; canonopt="-fverify-debuginfo-preserve"; inc=1 ;;
(-fverbose-asm)   fullopt="$1"; canonopt="-fverbose-asm"; inc=1 ;;
(-fvectorize)   fullopt="$1"; canonopt="-fvectorize"; inc=1 ;;
(-fveclib=*) fullopt="$1"; canonopt="-fveclib"; optarg="$( echo "$1" | sed -E "s^-fveclib=^^" )"; inc=1 ;;
(-fvalidate-ast-input-files-content)   fullopt="$1"; canonopt="-fvalidate-ast-input-files-content"; inc=1 ;;
(-fuse-register-sized-bitfield-access)   fullopt="$1"; canonopt="-fuse-register-sized-bitfield-access"; inc=1 ;;
(-fuse-line-directives)   fullopt="$1"; canonopt="-fuse-line-directives"; inc=1 ;;
(-fuse-init-array)   fullopt="$1"; canonopt="-fuse-init-array"; inc=1 ;;
(-fuse-cxa-atexit)   fullopt="$1"; canonopt="-fuse-cxa-atexit"; inc=1 ;;
(-fuse-cuid=*) fullopt="$1"; canonopt="-fuse-cuid"; optarg="$( echo "$1" | sed -E "s^-fuse-cuid=^^" )"; inc=1 ;;
(-fuse-ctor-homing)   fullopt="$1"; canonopt="-fuse-ctor-homing"; inc=1 ;;
(-funroll-loops)   fullopt="$1"; canonopt="-funroll-loops"; inc=1 ;;
(-funknown-anytype)   fullopt="$1"; canonopt="-funknown-anytype"; inc=1 ;;
(-funique-section-names)   fullopt="$1"; canonopt="-funique-section-names"; inc=1 ;;
(-funique-internal-linkage-names)   fullopt="$1"; canonopt="-funique-internal-linkage-names"; inc=1 ;;
(-funique-basic-block-section-names)   fullopt="$1"; canonopt="-funique-basic-block-section-names"; inc=1 ;;
(-function-alignment)  fullopt="$1"; canonopt="-function-alignment"; optarg="$2"; inc=2;;
(-ftype-visibility)  fullopt="$1"; canonopt="-ftype-visibility"; optarg="$2"; inc=2;;
(-ftrivial-auto-var-init=*) fullopt="$1"; canonopt="-ftrivial-auto-var-init"; optarg="$( echo "$1" | sed -E "s^-ftrivial-auto-var-init=^^" )"; inc=1 ;;
(-ftrivial-auto-var-init-stop-after=*) fullopt="$1"; canonopt="-ftrivial-auto-var-init-stop-after"; optarg="$( echo "$1" | sed -E "s^-ftrivial-auto-var-init-stop-after=^^" )"; inc=1 ;;
(-ftrigraphs)   fullopt="$1"; canonopt="-ftrigraphs"; inc=1 ;;
(-ftrapv-handler=*) fullopt="$1"; canonopt="-ftrapv-handler"; optarg="$( echo "$1" | sed -E "s^-ftrapv-handler=^^" )"; inc=1 ;;
(-ftrapv)   fullopt="$1"; canonopt="-ftrapv"; inc=1 ;;
(-ftrap-function=*) fullopt="$1"; canonopt="-ftrap-function"; optarg="$( echo "$1" | sed -E "s^-ftrap-function=^^" )"; inc=1 ;;
(-ftime-trace-granularity=*) fullopt="$1"; canonopt="-ftime-trace-granularity"; optarg="$( echo "$1" | sed -E "s^-ftime-trace-granularity=^^" )"; inc=1 ;;
(-ftime-trace)   fullopt="$1"; canonopt="-ftime-trace"; inc=1 ;;
(-ftime-report=*) fullopt="$1"; canonopt="-ftime-report"; optarg="$( echo "$1" | sed -E "s^-ftime-report=^^" )"; inc=1 ;;
(-fthreadsafe-statics)   fullopt="$1"; canonopt="-fthreadsafe-statics"; inc=1 ;;
(-fthinlto-index=*) fullopt="$1"; canonopt="-fthinlto-index"; optarg="$( echo "$1" | sed -E "s^-fthinlto-index=^^" )"; inc=1 ;;
(-fthin-link-bitcode=*) fullopt="$1"; canonopt="-fthin-link-bitcode"; optarg="$( echo "$1" | sed -E "s^-fthin-link-bitcode=^^" )"; inc=1 ;;
(-ftest-module-file-extension=*) fullopt="$1"; canonopt="-ftest-module-file-extension"; optarg="$( echo "$1" | sed -E "s^-ftest-module-file-extension=^^" )"; inc=1 ;;
(-ftest-coverage)   fullopt="$1"; canonopt="-ftest-coverage"; inc=1 ;;
(-ftemplate-depth)  fullopt="$1"; canonopt="-ftemplate-depth"; optarg="$2"; inc=2;;
(-ftemplate-backtrace-limit)  fullopt="$1"; canonopt="-ftemplate-backtrace-limit"; optarg="$2"; inc=2;;
(-ftabstop)  fullopt="$1"; canonopt="-ftabstop"; optarg="$2"; inc=2;;
(-fsystem-module)   fullopt="$1"; canonopt="-fsystem-module"; inc=1 ;;
(-fsycl-is-host)   fullopt="$1"; canonopt="-fsycl-is-host"; inc=1 ;;
(-fsycl-is-device)   fullopt="$1"; canonopt="-fsycl-is-device"; inc=1 ;;
(-fsycl)   fullopt="$1"; canonopt="-fsycl"; inc=1 ;;
(-fstrict-vtable-pointers)   fullopt="$1"; canonopt="-fstrict-vtable-pointers"; inc=1 ;;
(-fstrict-return)   fullopt="$1"; canonopt="-fstrict-return"; inc=1 ;;
(-fstrict-float-cast-overflow)   fullopt="$1"; canonopt="-fstrict-float-cast-overflow"; inc=1 ;;
(-fstrict-enums)   fullopt="$1"; canonopt="-fstrict-enums"; inc=1 ;;
(-fstandalone-debug)   fullopt="$1"; canonopt="-fstandalone-debug"; inc=1 ;;
(-fstack-usage)   fullopt="$1"; canonopt="-fstack-usage"; inc=1 ;;
(-fstack-size-section)   fullopt="$1"; canonopt="-fstack-size-section"; inc=1 ;;
(-fstack-protector-strong)   fullopt="$1"; canonopt="-fstack-protector-strong"; inc=1 ;;
(-fstack-protector-all)   fullopt="$1"; canonopt="-fstack-protector-all"; inc=1 ;;
(-fstack-protector)   fullopt="$1"; canonopt="-fstack-protector"; inc=1 ;;
(-fstack-clash-protection)   fullopt="$1"; canonopt="-fstack-clash-protection"; inc=1 ;;
(-fsplit-stack)   fullopt="$1"; canonopt="-fsplit-stack"; inc=1 ;;
(-fsplit-machine-functions)   fullopt="$1"; canonopt="-fsplit-machine-functions"; inc=1 ;;
(-fsplit-lto-unit)   fullopt="$1"; canonopt="-fsplit-lto-unit"; inc=1 ;;
(-fsplit-dwarf-inlining)   fullopt="$1"; canonopt="-fsplit-dwarf-inlining"; inc=1 ;;
(-fspell-checking-limit)  fullopt="$1"; canonopt="-fspell-checking-limit"; optarg="$2"; inc=2;;
(-fspell-checking)   fullopt="$1"; canonopt="-fspell-checking"; inc=1 ;;
(-fslp-vectorize)   fullopt="$1"; canonopt="-fslp-vectorize"; inc=1 ;;
(-fsjlj-exceptions)   fullopt="$1"; canonopt="-fsjlj-exceptions"; inc=1 ;;
(-fsized-deallocation)   fullopt="$1"; canonopt="-fsized-deallocation"; inc=1 ;;
(-fsigned-zeros)   fullopt="$1"; canonopt="-fsigned-zeros"; inc=1 ;;
(-fsigned-wchar)   fullopt="$1"; canonopt="-fsigned-wchar"; inc=1 ;;
(-fsigned-char)   fullopt="$1"; canonopt="-fsigned-char"; inc=1 ;;
(-fshow-source-location)   fullopt="$1"; canonopt="-fshow-source-location"; inc=1 ;;
(-fshow-skipped-includes)   fullopt="$1"; canonopt="-fshow-skipped-includes"; inc=1 ;;
(-fshow-overloads=*) fullopt="$1"; canonopt="-fshow-overloads"; optarg="$( echo "$1" | sed -E "s^-fshow-overloads=^^" )"; inc=1 ;;
(-fshow-column)   fullopt="$1"; canonopt="-fshow-column"; inc=1 ;;
(-fshort-wchar)   fullopt="$1"; canonopt="-fshort-wchar"; inc=1 ;;
(-fshort-enums)   fullopt="$1"; canonopt="-fshort-enums"; inc=1 ;;
(-fsemantic-interposition)   fullopt="$1"; canonopt="-fsemantic-interposition"; inc=1 ;;
(-fseh-exceptions)   fullopt="$1"; canonopt="-fseh-exceptions"; inc=1 ;;
(-fsave-optimization-record=*) fullopt="$1"; canonopt="-fsave-optimization-record"; optarg="$( echo "$1" | sed -E "s^-fsave-optimization-record=^^" )"; inc=1 ;;
(-fsave-optimization-record)   fullopt="$1"; canonopt="-fsave-optimization-record"; inc=1 ;;
(-fsanitize=*) fullopt="$1"; canonopt="-fsanitize"; optarg="$( echo "$1" | sed -E "s^-fsanitize=^^" )"; inc=1 ;;
(-fsanitize-undefined-strip-path-components=*) fullopt="$1"; canonopt="-fsanitize-undefined-strip-path-components"; optarg="$( echo "$1" | sed -E "s^-fsanitize-undefined-strip-path-components=^^" )"; inc=1 ;;
(-fsanitize-trap=*) fullopt="$1"; canonopt="-fsanitize-trap"; optarg="$( echo "$1" | sed -E "s^-fsanitize-trap=^^" )"; inc=1 ;;
(-fsanitize-trap)   fullopt="$1"; canonopt="-fsanitize-trap"; inc=1 ;;
(-fsanitize-thread-memory-access)   fullopt="$1"; canonopt="-fsanitize-thread-memory-access"; inc=1 ;;
(-fsanitize-thread-func-entry-exit)   fullopt="$1"; canonopt="-fsanitize-thread-func-entry-exit"; inc=1 ;;
(-fsanitize-thread-atomics)   fullopt="$1"; canonopt="-fsanitize-thread-atomics"; inc=1 ;;
(-fsanitize-system-ignorelist=*) fullopt="$1"; canonopt="-fsanitize-system-ignorelist"; optarg="$( echo "$1" | sed -E "s^-fsanitize-system-ignorelist=^^" )"; inc=1 ;;
(-fsanitize-system-blacklist=*) fullopt="$1"; canonopt="-fsanitize-system-blacklist"; optarg="$( echo "$1" | sed -E "s^-fsanitize-system-blacklist=^^" )"; inc=1 ;;
(-fsanitize-stats)   fullopt="$1"; canonopt="-fsanitize-stats"; inc=1 ;;
(-fsanitize-recover=*) fullopt="$1"; canonopt="-fsanitize-recover"; optarg="$( echo "$1" | sed -E "s^-fsanitize-recover=^^" )"; inc=1 ;;
(-fsanitize-minimal-runtime)   fullopt="$1"; canonopt="-fsanitize-minimal-runtime"; inc=1 ;;
(-fsanitize-memory-use-after-dtor)   fullopt="$1"; canonopt="-fsanitize-memory-use-after-dtor"; inc=1 ;;
(-fsanitize-memory-track-origins=*) fullopt="$1"; canonopt="-fsanitize-memory-track-origins"; optarg="$( echo "$1" | sed -E "s^-fsanitize-memory-track-origins=^^" )"; inc=1 ;;
(-fsanitize-memory-track-origins)   fullopt="$1"; canonopt="-fsanitize-memory-track-origins"; inc=1 ;;
(-fsanitize-ignorelist=*) fullopt="$1"; canonopt="-fsanitize-ignorelist"; optarg="$( echo "$1" | sed -E "s^-fsanitize-ignorelist=^^" )"; inc=1 ;;
(-fsanitize-hwaddress-experimental-aliasing)   fullopt="$1"; canonopt="-fsanitize-hwaddress-experimental-aliasing"; inc=1 ;;
(-fsanitize-hwaddress-abi=*) fullopt="$1"; canonopt="-fsanitize-hwaddress-abi"; optarg="$( echo "$1" | sed -E "s^-fsanitize-hwaddress-abi=^^" )"; inc=1 ;;
(-fsanitize-coverage=*) fullopt="$1"; canonopt="-fsanitize-coverage"; optarg="$( echo "$1" | sed -E "s^-fsanitize-coverage=^^" )"; inc=1 ;;
(-fsanitize-coverage-whitelist=*) fullopt="$1"; canonopt="-fsanitize-coverage-whitelist"; optarg="$( echo "$1" | sed -E "s^-fsanitize-coverage-whitelist=^^" )"; inc=1 ;;
(-fsanitize-coverage-type=*) fullopt="$1"; canonopt="-fsanitize-coverage-type"; optarg="$( echo "$1" | sed -E "s^-fsanitize-coverage-type=^^" )"; inc=1 ;;
(-fsanitize-coverage-trace-pc-guard)   fullopt="$1"; canonopt="-fsanitize-coverage-trace-pc-guard"; inc=1 ;;
(-fsanitize-coverage-trace-pc)   fullopt="$1"; canonopt="-fsanitize-coverage-trace-pc"; inc=1 ;;
(-fsanitize-coverage-trace-gep)   fullopt="$1"; canonopt="-fsanitize-coverage-trace-gep"; inc=1 ;;
(-fsanitize-coverage-trace-div)   fullopt="$1"; canonopt="-fsanitize-coverage-trace-div"; inc=1 ;;
(-fsanitize-coverage-trace-cmp)   fullopt="$1"; canonopt="-fsanitize-coverage-trace-cmp"; inc=1 ;;
(-fsanitize-coverage-trace-bb)   fullopt="$1"; canonopt="-fsanitize-coverage-trace-bb"; inc=1 ;;
(-fsanitize-coverage-stack-depth)   fullopt="$1"; canonopt="-fsanitize-coverage-stack-depth"; inc=1 ;;
(-fsanitize-coverage-pc-table)   fullopt="$1"; canonopt="-fsanitize-coverage-pc-table"; inc=1 ;;
(-fsanitize-coverage-no-prune)   fullopt="$1"; canonopt="-fsanitize-coverage-no-prune"; inc=1 ;;
(-fsanitize-coverage-inline-bool-flag)   fullopt="$1"; canonopt="-fsanitize-coverage-inline-bool-flag"; inc=1 ;;
(-fsanitize-coverage-inline-8bit-counters)   fullopt="$1"; canonopt="-fsanitize-coverage-inline-8bit-counters"; inc=1 ;;
(-fsanitize-coverage-indirect-calls)   fullopt="$1"; canonopt="-fsanitize-coverage-indirect-calls"; inc=1 ;;
(-fsanitize-coverage-ignorelist=*) fullopt="$1"; canonopt="-fsanitize-coverage-ignorelist"; optarg="$( echo "$1" | sed -E "s^-fsanitize-coverage-ignorelist=^^" )"; inc=1 ;;
(-fsanitize-coverage-blacklist=*) fullopt="$1"; canonopt="-fsanitize-coverage-blacklist"; optarg="$( echo "$1" | sed -E "s^-fsanitize-coverage-blacklist=^^" )"; inc=1 ;;
(-fsanitize-coverage-allowlist=*) fullopt="$1"; canonopt="-fsanitize-coverage-allowlist"; optarg="$( echo "$1" | sed -E "s^-fsanitize-coverage-allowlist=^^" )"; inc=1 ;;
(-fsanitize-coverage-8bit-counters)   fullopt="$1"; canonopt="-fsanitize-coverage-8bit-counters"; inc=1 ;;
(-fsanitize-cfi-icall-generalize-pointers)   fullopt="$1"; canonopt="-fsanitize-cfi-icall-generalize-pointers"; inc=1 ;;
(-fsanitize-cfi-cross-dso)   fullopt="$1"; canonopt="-fsanitize-cfi-cross-dso"; inc=1 ;;
(-fsanitize-cfi-canonical-jump-tables)   fullopt="$1"; canonopt="-fsanitize-cfi-canonical-jump-tables"; inc=1 ;;
(-fsanitize-blacklist=*) fullopt="$1"; canonopt="-fsanitize-blacklist"; optarg="$( echo "$1" | sed -E "s^-fsanitize-blacklist=^^" )"; inc=1 ;;
(-fsanitize-address-use-odr-indicator)   fullopt="$1"; canonopt="-fsanitize-address-use-odr-indicator"; inc=1 ;;
(-fsanitize-address-use-after-scope)   fullopt="$1"; canonopt="-fsanitize-address-use-after-scope"; inc=1 ;;
(-fsanitize-address-use-after-return=*) fullopt="$1"; canonopt="-fsanitize-address-use-after-return"; optarg="$( echo "$1" | sed -E "s^-fsanitize-address-use-after-return=^^" )"; inc=1 ;;
(-fsanitize-address-poison-custom-array-cookie)   fullopt="$1"; canonopt="-fsanitize-address-poison-custom-array-cookie"; inc=1 ;;
(-fsanitize-address-outline-instrumentation)   fullopt="$1"; canonopt="-fsanitize-address-outline-instrumentation"; inc=1 ;;
(-fsanitize-address-globals-dead-stripping)   fullopt="$1"; canonopt="-fsanitize-address-globals-dead-stripping"; inc=1 ;;
(-fsanitize-address-field-padding=*) fullopt="$1"; canonopt="-fsanitize-address-field-padding"; optarg="$( echo "$1" | sed -E "s^-fsanitize-address-field-padding=^^" )"; inc=1 ;;
(-fsanitize-address-destructor=*) fullopt="$1"; canonopt="-fsanitize-address-destructor"; optarg="$( echo "$1" | sed -E "s^-fsanitize-address-destructor=^^" )"; inc=1 ;;
(-frwpi)   fullopt="$1"; canonopt="-frwpi"; inc=1 ;;
(-frtti-data)   fullopt="$1"; canonopt="-frtti-data"; inc=1 ;;
(-frtti)   fullopt="$1"; canonopt="-frtti"; inc=1 ;;
(-frtlib-add-rpath)   fullopt="$1"; canonopt="-frtlib-add-rpath"; inc=1 ;;
(-fropi)   fullopt="$1"; canonopt="-fropi"; inc=1 ;;
(-frewrite-includes)   fullopt="$1"; canonopt="-frewrite-includes"; inc=1 ;;
(-frewrite-imports)   fullopt="$1"; canonopt="-frewrite-imports"; inc=1 ;;
(-freroll-loops)   fullopt="$1"; canonopt="-freroll-loops"; inc=1 ;;
(-frelaxed-template-template-args)   fullopt="$1"; canonopt="-frelaxed-template-template-args"; inc=1 ;;
(-fregister-global-dtors-with-atexit)   fullopt="$1"; canonopt="-fregister-global-dtors-with-atexit"; inc=1 ;;
(-freg-struct-return)   fullopt="$1"; canonopt="-freg-struct-return"; inc=1 ;;
(-frecovery-ast-type)   fullopt="$1"; canonopt="-frecovery-ast-type"; inc=1 ;;
(-frecovery-ast)   fullopt="$1"; canonopt="-frecovery-ast"; inc=1 ;;
(-freciprocal-math)   fullopt="$1"; canonopt="-freciprocal-math"; inc=1 ;;
(-fpseudo-probe-for-profiling)   fullopt="$1"; canonopt="-fpseudo-probe-for-profiling"; inc=1 ;;
(-fprotect-parens)   fullopt="$1"; canonopt="-fprotect-parens"; inc=1 ;;
(-fprofile-use=*) fullopt="$1"; canonopt="-fprofile-use"; optarg="$( echo "$1" | sed -E "s^-fprofile-use=^^" )"; inc=1 ;;
(-fprofile-update=*) fullopt="$1"; canonopt="-fprofile-update"; optarg="$( echo "$1" | sed -E "s^-fprofile-update=^^" )"; inc=1 ;;
(-fprofile-sample-use=*) fullopt="$1"; canonopt="-fprofile-sample-use"; optarg="$( echo "$1" | sed -E "s^-fprofile-sample-use=^^" )"; inc=1 ;;
(-fprofile-sample-accurate)   fullopt="$1"; canonopt="-fprofile-sample-accurate"; inc=1 ;;
(-fprofile-remapping-file=*) fullopt="$1"; canonopt="-fprofile-remapping-file"; optarg="$( echo "$1" | sed -E "s^-fprofile-remapping-file=^^" )"; inc=1 ;;
(-fprofile-list=*) fullopt="$1"; canonopt="-fprofile-list"; optarg="$( echo "$1" | sed -E "s^-fprofile-list=^^" )"; inc=1 ;;
(-fprofile-instrument=*) fullopt="$1"; canonopt="-fprofile-instrument"; optarg="$( echo "$1" | sed -E "s^-fprofile-instrument=^^" )"; inc=1 ;;
(-fprofile-instrument-use-path=*) fullopt="$1"; canonopt="-fprofile-instrument-use-path"; optarg="$( echo "$1" | sed -E "s^-fprofile-instrument-use-path=^^" )"; inc=1 ;;
(-fprofile-instrument-path=*) fullopt="$1"; canonopt="-fprofile-instrument-path"; optarg="$( echo "$1" | sed -E "s^-fprofile-instrument-path=^^" )"; inc=1 ;;
(-fprofile-instr-use=*) fullopt="$1"; canonopt="-fprofile-instr-use"; optarg="$( echo "$1" | sed -E "s^-fprofile-instr-use=^^" )"; inc=1 ;;
(-fprofile-instr-generate=*) fullopt="$1"; canonopt="-fprofile-instr-generate"; optarg="$( echo "$1" | sed -E "s^-fprofile-instr-generate=^^" )"; inc=1 ;;
(-fprofile-instr-generate)   fullopt="$1"; canonopt="-fprofile-instr-generate"; inc=1 ;;
(-fprofile-generate=*) fullopt="$1"; canonopt="-fprofile-generate"; optarg="$( echo "$1" | sed -E "s^-fprofile-generate=^^" )"; inc=1 ;;
(-fprofile-generate)   fullopt="$1"; canonopt="-fprofile-generate"; inc=1 ;;
(-fprofile-filter-files=*) fullopt="$1"; canonopt="-fprofile-filter-files"; optarg="$( echo "$1" | sed -E "s^-fprofile-filter-files=^^" )"; inc=1 ;;
(-fprofile-exclude-files=*) fullopt="$1"; canonopt="-fprofile-exclude-files"; optarg="$( echo "$1" | sed -E "s^-fprofile-exclude-files=^^" )"; inc=1 ;;
(-fprofile-arcs)   fullopt="$1"; canonopt="-fprofile-arcs"; inc=1 ;;
(-fproc-stat-report*) fullopt="$1"; canonopt="-fproc-stat-report"; optarg="$( echo "$1" | sed -E "s^-fproc-stat-report^^" )"; inc=1 ;;
(-fproc-stat-report=*) fullopt="$1"; canonopt="-fproc-stat-report"; optarg="$( echo "$1" | sed -E "s^-fproc-stat-report=^^" )"; inc=1 ;;
(-fpreserve-vec3-type)   fullopt="$1"; canonopt="-fpreserve-vec3-type"; inc=1 ;;
(-fpreserve-as-comments)   fullopt="$1"; canonopt="-fpreserve-as-comments"; inc=1 ;;
(-fprebuilt-module-path=*) fullopt="$1"; canonopt="-fprebuilt-module-path"; optarg="$( echo "$1" | sed -E "s^-fprebuilt-module-path=^^" )"; inc=1 ;;
(-fprebuilt-implicit-modules)   fullopt="$1"; canonopt="-fprebuilt-implicit-modules"; inc=1 ;;
(-fplugin=*) fullopt="$1"; canonopt="-fplugin"; optarg="$( echo "$1" | sed -E "s^-fplugin=^^" )"; inc=1 ;;
(-fplt)   fullopt="$1"; canonopt="-fplt"; inc=1 ;;
(-fpch-validate-input-files-content)   fullopt="$1"; canonopt="-fpch-validate-input-files-content"; inc=1 ;;
(-fpch-instantiate-templates)   fullopt="$1"; canonopt="-fpch-instantiate-templates"; inc=1 ;;
(-fpch-debuginfo)   fullopt="$1"; canonopt="-fpch-debuginfo"; inc=1 ;;
(-fpch-codegen)   fullopt="$1"; canonopt="-fpch-codegen"; inc=1 ;;
(-fpcc-struct-return)   fullopt="$1"; canonopt="-fpcc-struct-return"; inc=1 ;;
(-fpatchable-function-entry=*) fullopt="$1"; canonopt="-fpatchable-function-entry"; optarg="$( echo "$1" | sed -E "s^-fpatchable-function-entry=^^" )"; inc=1 ;;
(-fpatchable-function-entry-offset=*) fullopt="$1"; canonopt="-fpatchable-function-entry-offset"; optarg="$( echo "$1" | sed -E "s^-fpatchable-function-entry-offset=^^" )"; inc=1 ;;
(-fpass-plugin=*) fullopt="$1"; canonopt="-fpass-plugin"; optarg="$( echo "$1" | sed -E "s^-fpass-plugin=^^" )"; inc=1 ;;
(-fpass-by-value-is-noalias)   fullopt="$1"; canonopt="-fpass-by-value-is-noalias"; inc=1 ;;
(-fpascal-strings)   fullopt="$1"; canonopt="-fpascal-strings"; inc=1 ;;
(-fpadding-on-unsigned-fixed-point)   fullopt="$1"; canonopt="-fpadding-on-unsigned-fixed-point"; inc=1 ;;
(-fpack-struct=*) fullopt="$1"; canonopt="-fpack-struct"; optarg="$( echo "$1" | sed -E "s^-fpack-struct=^^" )"; inc=1 ;;
(-foverride-record-layout=*) fullopt="$1"; canonopt="-foverride-record-layout"; optarg="$( echo "$1" | sed -E "s^-foverride-record-layout=^^" )"; inc=1 ;;
(-forder-file-instrumentation)   fullopt="$1"; canonopt="-forder-file-instrumentation"; inc=1 ;;
(-foptimization-record-passes=*) fullopt="$1"; canonopt="-foptimization-record-passes"; optarg="$( echo "$1" | sed -E "s^-foptimization-record-passes=^^" )"; inc=1 ;;
(-foptimization-record-file=*) fullopt="$1"; canonopt="-foptimization-record-file"; optarg="$( echo "$1" | sed -E "s^-foptimization-record-file=^^" )"; inc=1 ;;
(-foperator-names)   fullopt="$1"; canonopt="-foperator-names"; inc=1 ;;
(-foperator-arrow-depth)  fullopt="$1"; canonopt="-foperator-arrow-depth"; optarg="$2"; inc=2;;
(-fopenmp-targets=*) fullopt="$1"; canonopt="-fopenmp-targets"; optarg="$( echo "$1" | sed -E "s^-fopenmp-targets=^^" )"; inc=1 ;;
(-fopenmp-target-new-runtime)   fullopt="$1"; canonopt="-fopenmp-target-new-runtime"; inc=1 ;;
(-fopenmp-simd)   fullopt="$1"; canonopt="-fopenmp-simd"; inc=1 ;;
(-fopenmp-optimistic-collapse)   fullopt="$1"; canonopt="-fopenmp-optimistic-collapse"; inc=1 ;;
(-fopenmp-is-device)   fullopt="$1"; canonopt="-fopenmp-is-device"; inc=1 ;;
(-fopenmp-host-ir-file-path)  fullopt="$1"; canonopt="-fopenmp-host-ir-file-path"; optarg="$2"; inc=2;;
(-fopenmp-enable-irbuilder)   fullopt="$1"; canonopt="-fopenmp-enable-irbuilder"; inc=1 ;;
(-fopenmp)   fullopt="$1"; canonopt="-fopenmp"; inc=1 ;;
(-foffload-lto=*) fullopt="$1"; canonopt="-foffload-lto"; optarg="$( echo "$1" | sed -E "s^-foffload-lto=^^" )"; inc=1 ;;
(-foffload-lto)   fullopt="$1"; canonopt="-foffload-lto"; inc=1 ;;
(-fobjc-weak)   fullopt="$1"; canonopt="-fobjc-weak"; inc=1 ;;
(-fobjc-subscripting-legacy-runtime)   fullopt="$1"; canonopt="-fobjc-subscripting-legacy-runtime"; inc=1 ;;
(-fobjc-runtime=*) fullopt="$1"; canonopt="-fobjc-runtime"; optarg="$( echo "$1" | sed -E "s^-fobjc-runtime=^^" )"; inc=1 ;;
(-fobjc-runtime-has-weak)   fullopt="$1"; canonopt="-fobjc-runtime-has-weak"; inc=1 ;;
(-fobjc-infer-related-result-type)   fullopt="$1"; canonopt="-fobjc-infer-related-result-type"; inc=1 ;;
(-fobjc-gc-only)   fullopt="$1"; canonopt="-fobjc-gc-only"; inc=1 ;;
(-fobjc-gc)   fullopt="$1"; canonopt="-fobjc-gc"; inc=1 ;;
(-fobjc-exceptions)   fullopt="$1"; canonopt="-fobjc-exceptions"; inc=1 ;;
(-fobjc-encode-cxx-class-template-spec)   fullopt="$1"; canonopt="-fobjc-encode-cxx-class-template-spec"; inc=1 ;;
(-fobjc-dispatch-method=*) fullopt="$1"; canonopt="-fobjc-dispatch-method"; optarg="$( echo "$1" | sed -E "s^-fobjc-dispatch-method=^^" )"; inc=1 ;;
(-fobjc-disable-direct-methods-for-testing)   fullopt="$1"; canonopt="-fobjc-disable-direct-methods-for-testing"; inc=1 ;;
(-fobjc-convert-messages-to-runtime-calls)   fullopt="$1"; canonopt="-fobjc-convert-messages-to-runtime-calls"; inc=1 ;;
(-fobjc-arc-exceptions)   fullopt="$1"; canonopt="-fobjc-arc-exceptions"; inc=1 ;;
(-fobjc-arc-cxxlib=*) fullopt="$1"; canonopt="-fobjc-arc-cxxlib"; optarg="$( echo "$1" | sed -E "s^-fobjc-arc-cxxlib=^^" )"; inc=1 ;;
(-fobjc-arc)   fullopt="$1"; canonopt="-fobjc-arc"; inc=1 ;;
(-fno-zvector)   fullopt="$1"; canonopt="-fno-zvector"; inc=1 ;;
(-fno-zero-initialized-in-bss)   fullopt="$1"; canonopt="-fno-zero-initialized-in-bss"; inc=1 ;;
(-fno-xray-instrument)   fullopt="$1"; canonopt="-fno-xray-instrument"; inc=1 ;;
(-fno-xray-ignore-loops)   fullopt="$1"; canonopt="-fno-xray-ignore-loops"; inc=1 ;;
(-fno-xray-function-index)   fullopt="$1"; canonopt="-fno-xray-function-index"; inc=1 ;;
(-fno-xray-always-emit-typedevents)   fullopt="$1"; canonopt="-fno-xray-always-emit-typedevents"; inc=1 ;;
(-fno-xray-always-emit-customevents)   fullopt="$1"; canonopt="-fno-xray-always-emit-customevents"; inc=1 ;;
(-fno-xl-pragma-pack)   fullopt="$1"; canonopt="-fno-xl-pragma-pack"; inc=1 ;;
(-fno-whole-program-vtables)   fullopt="$1"; canonopt="-fno-whole-program-vtables"; inc=1 ;;
(-fno-wchar)   fullopt="$1"; canonopt="-fno-wchar"; inc=1 ;;
(-fno-visibility-inlines-hidden-static-local-var)   fullopt="$1"; canonopt="-fno-visibility-inlines-hidden-static-local-var"; inc=1 ;;
(-fno-visibility-inlines-hidden)   fullopt="$1"; canonopt="-fno-visibility-inlines-hidden"; inc=1 ;;
(-fno-visibility-from-dllstorageclass)   fullopt="$1"; canonopt="-fno-visibility-from-dllstorageclass"; inc=1 ;;
(-fno-virtual-function-elimination)   fullopt="$1"; canonopt="-fno-virtual-function-elimination"; inc=1 ;;
(-fno-validate-pch)   fullopt="$1"; canonopt="-fno-validate-pch"; inc=1 ;;
(-fno-use-line-directives)   fullopt="$1"; canonopt="-fno-use-line-directives"; inc=1 ;;
(-fno-use-init-array)   fullopt="$1"; canonopt="-fno-use-init-array"; inc=1 ;;
(-fno-use-cxa-atexit)   fullopt="$1"; canonopt="-fno-use-cxa-atexit"; inc=1 ;;
(-fno-use-ctor-homing)   fullopt="$1"; canonopt="-fno-use-ctor-homing"; inc=1 ;;
(-fno-unroll-loops)   fullopt="$1"; canonopt="-fno-unroll-loops"; inc=1 ;;
(-fno-unique-section-names)   fullopt="$1"; canonopt="-fno-unique-section-names"; inc=1 ;;
(-fno-unique-internal-linkage-names)   fullopt="$1"; canonopt="-fno-unique-internal-linkage-names"; inc=1 ;;
(-fno-unique-basic-block-section-names)   fullopt="$1"; canonopt="-fno-unique-basic-block-section-names"; inc=1 ;;
(-fno-trigraphs)   fullopt="$1"; canonopt="-fno-trigraphs"; inc=1 ;;
(-fno-threadsafe-statics)   fullopt="$1"; canonopt="-fno-threadsafe-statics"; inc=1 ;;
(-fno-test-coverage)   fullopt="$1"; canonopt="-fno-test-coverage"; inc=1 ;;
(-fno-temp-file)   fullopt="$1"; canonopt="-fno-temp-file"; inc=1 ;;
(-fno-sycl)   fullopt="$1"; canonopt="-fno-sycl"; inc=1 ;;
(-fno-strict-vtable-pointers)   fullopt="$1"; canonopt="-fno-strict-vtable-pointers"; inc=1 ;;
(-fno-strict-return)   fullopt="$1"; canonopt="-fno-strict-return"; inc=1 ;;
(-fno-strict-float-cast-overflow)   fullopt="$1"; canonopt="-fno-strict-float-cast-overflow"; inc=1 ;;
(-fno-standalone-debug)   fullopt="$1"; canonopt="-fno-standalone-debug"; inc=1 ;;
(-fno-stack-size-section)   fullopt="$1"; canonopt="-fno-stack-size-section"; inc=1 ;;
(-fno-stack-protector)   fullopt="$1"; canonopt="-fno-stack-protector"; inc=1 ;;
(-fno-stack-clash-protection)   fullopt="$1"; canonopt="-fno-stack-clash-protection"; inc=1 ;;
(-fno-split-stack)   fullopt="$1"; canonopt="-fno-split-stack"; inc=1 ;;
(-fno-split-machine-functions)   fullopt="$1"; canonopt="-fno-split-machine-functions"; inc=1 ;;
(-fno-split-lto-unit)   fullopt="$1"; canonopt="-fno-split-lto-unit"; inc=1 ;;
(-fno-split-dwarf-inlining)   fullopt="$1"; canonopt="-fno-split-dwarf-inlining"; inc=1 ;;
(-fno-spell-checking)   fullopt="$1"; canonopt="-fno-spell-checking"; inc=1 ;;
(-fno-sized-deallocation)   fullopt="$1"; canonopt="-fno-sized-deallocation"; inc=1 ;;
(-fno-signed-zeros)   fullopt="$1"; canonopt="-fno-signed-zeros"; inc=1 ;;
(-fno-signed-wchar)   fullopt="$1"; canonopt="-fno-signed-wchar"; inc=1 ;;
(-fno-signed-char)   fullopt="$1"; canonopt="-fno-signed-char"; inc=1 ;;
(-fno-show-source-location)   fullopt="$1"; canonopt="-fno-show-source-location"; inc=1 ;;
(-fno-show-column)   fullopt="$1"; canonopt="-fno-show-column"; inc=1 ;;
(-fno-short-wchar)   fullopt="$1"; canonopt="-fno-short-wchar"; inc=1 ;;
(-fno-short-enums)   fullopt="$1"; canonopt="-fno-short-enums"; inc=1 ;;
(-fno-semantic-interposition)   fullopt="$1"; canonopt="-fno-semantic-interposition"; inc=1 ;;
(-fno-sanitize-trap=*) fullopt="$1"; canonopt="-fno-sanitize-trap"; optarg="$( echo "$1" | sed -E "s^-fno-sanitize-trap=^^" )"; inc=1 ;;
(-fno-sanitize-trap)   fullopt="$1"; canonopt="-fno-sanitize-trap"; inc=1 ;;
(-fno-sanitize-thread-memory-access)   fullopt="$1"; canonopt="-fno-sanitize-thread-memory-access"; inc=1 ;;
(-fno-sanitize-thread-func-entry-exit)   fullopt="$1"; canonopt="-fno-sanitize-thread-func-entry-exit"; inc=1 ;;
(-fno-sanitize-thread-atomics)   fullopt="$1"; canonopt="-fno-sanitize-thread-atomics"; inc=1 ;;
(-fno-sanitize-stats)   fullopt="$1"; canonopt="-fno-sanitize-stats"; inc=1 ;;
(-fno-sanitize-recover=*) fullopt="$1"; canonopt="-fno-sanitize-recover"; optarg="$( echo "$1" | sed -E "s^-fno-sanitize-recover=^^" )"; inc=1 ;;
(-fno-sanitize-minimal-runtime)   fullopt="$1"; canonopt="-fno-sanitize-minimal-runtime"; inc=1 ;;
(-fno-sanitize-memory-use-after-dtor)   fullopt="$1"; canonopt="-fno-sanitize-memory-use-after-dtor"; inc=1 ;;
(-fno-sanitize-memory-track-origins)   fullopt="$1"; canonopt="-fno-sanitize-memory-track-origins"; inc=1 ;;
(-fno-sanitize-ignorelist)   fullopt="$1"; canonopt="-fno-sanitize-ignorelist"; inc=1 ;;
(-fno-sanitize-hwaddress-experimental-aliasing)   fullopt="$1"; canonopt="-fno-sanitize-hwaddress-experimental-aliasing"; inc=1 ;;
(-fno-sanitize-coverage=*) fullopt="$1"; canonopt="-fno-sanitize-coverage"; optarg="$( echo "$1" | sed -E "s^-fno-sanitize-coverage=^^" )"; inc=1 ;;
(-fno-sanitize-cfi-cross-dso)   fullopt="$1"; canonopt="-fno-sanitize-cfi-cross-dso"; inc=1 ;;
(-fno-sanitize-cfi-canonical-jump-tables)   fullopt="$1"; canonopt="-fno-sanitize-cfi-canonical-jump-tables"; inc=1 ;;
(-fno-sanitize-address-use-odr-indicator)   fullopt="$1"; canonopt="-fno-sanitize-address-use-odr-indicator"; inc=1 ;;
(-fno-sanitize-address-use-after-scope)   fullopt="$1"; canonopt="-fno-sanitize-address-use-after-scope"; inc=1 ;;
(-fno-sanitize-address-poison-custom-array-cookie)   fullopt="$1"; canonopt="-fno-sanitize-address-poison-custom-array-cookie"; inc=1 ;;
(-fno-sanitize-address-outline-instrumentation)   fullopt="$1"; canonopt="-fno-sanitize-address-outline-instrumentation"; inc=1 ;;
(-fno-rwpi)   fullopt="$1"; canonopt="-fno-rwpi"; inc=1 ;;
(-fno-rtti-data)   fullopt="$1"; canonopt="-fno-rtti-data"; inc=1 ;;
(-fno-rtti)   fullopt="$1"; canonopt="-fno-rtti"; inc=1 ;;
(-fno-rtlib-add-rpath)   fullopt="$1"; canonopt="-fno-rtlib-add-rpath"; inc=1 ;;
(-fno-ropi)   fullopt="$1"; canonopt="-fno-ropi"; inc=1 ;;
(-fno-rewrite-includes)   fullopt="$1"; canonopt="-fno-rewrite-includes"; inc=1 ;;
(-fno-rewrite-imports)   fullopt="$1"; canonopt="-fno-rewrite-imports"; inc=1 ;;
(-fno-reroll-loops)   fullopt="$1"; canonopt="-fno-reroll-loops"; inc=1 ;;
(-fno-relaxed-template-template-args)   fullopt="$1"; canonopt="-fno-relaxed-template-template-args"; inc=1 ;;
(-fno-register-global-dtors-with-atexit)   fullopt="$1"; canonopt="-fno-register-global-dtors-with-atexit"; inc=1 ;;
(-fno-recovery-ast-type)   fullopt="$1"; canonopt="-fno-recovery-ast-type"; inc=1 ;;
(-fno-recovery-ast)   fullopt="$1"; canonopt="-fno-recovery-ast"; inc=1 ;;
(-fno-reciprocal-math)   fullopt="$1"; canonopt="-fno-reciprocal-math"; inc=1 ;;
(-fno-pseudo-probe-for-profiling)   fullopt="$1"; canonopt="-fno-pseudo-probe-for-profiling"; inc=1 ;;
(-fno-protect-parens)   fullopt="$1"; canonopt="-fno-protect-parens"; inc=1 ;;
(-fno-profile-instr-use)   fullopt="$1"; canonopt="-fno-profile-instr-use"; inc=1 ;;
(-fno-profile-instr-generate)   fullopt="$1"; canonopt="-fno-profile-instr-generate"; inc=1 ;;
(-fno-profile-generate)   fullopt="$1"; canonopt="-fno-profile-generate"; inc=1 ;;
(-fno-profile-arcs)   fullopt="$1"; canonopt="-fno-profile-arcs"; inc=1 ;;
(-fno-preserve-as-comments)   fullopt="$1"; canonopt="-fno-preserve-as-comments"; inc=1 ;;
(-fno-prebuilt-implicit-modules)   fullopt="$1"; canonopt="-fno-prebuilt-implicit-modules"; inc=1 ;;
(-fno-plt)   fullopt="$1"; canonopt="-fno-plt"; inc=1 ;;
(-fno-pch-timestamp)   fullopt="$1"; canonopt="-fno-pch-timestamp"; inc=1 ;;
(-fno-pch-instantiate-templates)   fullopt="$1"; canonopt="-fno-pch-instantiate-templates"; inc=1 ;;
(-fno-pch-debuginfo)   fullopt="$1"; canonopt="-fno-pch-debuginfo"; inc=1 ;;
(-fno-pch-codegen)   fullopt="$1"; canonopt="-fno-pch-codegen"; inc=1 ;;
(-fno-pascal-strings)   fullopt="$1"; canonopt="-fno-pascal-strings"; inc=1 ;;
(-fno-padding-on-unsigned-fixed-point)   fullopt="$1"; canonopt="-fno-padding-on-unsigned-fixed-point"; inc=1 ;;
(-fno-operator-names)   fullopt="$1"; canonopt="-fno-operator-names"; inc=1 ;;
(-fno-openmp-target-new-runtime)   fullopt="$1"; canonopt="-fno-openmp-target-new-runtime"; inc=1 ;;
(-fno-offload-lto)   fullopt="$1"; canonopt="-fno-offload-lto"; inc=1 ;;
(-fno-objc-infer-related-result-type)   fullopt="$1"; canonopt="-fno-objc-infer-related-result-type"; inc=1 ;;
(-fno-objc-exceptions)   fullopt="$1"; canonopt="-fno-objc-exceptions"; inc=1 ;;
(-fno-objc-encode-cxx-class-template-spec)   fullopt="$1"; canonopt="-fno-objc-encode-cxx-class-template-spec"; inc=1 ;;
(-fno-objc-convert-messages-to-runtime-calls)   fullopt="$1"; canonopt="-fno-objc-convert-messages-to-runtime-calls"; inc=1 ;;
(-fno-objc-arc-exceptions)   fullopt="$1"; canonopt="-fno-objc-arc-exceptions"; inc=1 ;;
(-fno-modules-validate-system-headers)   fullopt="$1"; canonopt="-fno-modules-validate-system-headers"; inc=1 ;;
(-fno-modules-search-all)   fullopt="$1"; canonopt="-fno-modules-search-all"; inc=1 ;;
(-fno-modules-global-index)   fullopt="$1"; canonopt="-fno-modules-global-index"; inc=1 ;;
(-fno-modules-error-recovery)   fullopt="$1"; canonopt="-fno-modules-error-recovery"; inc=1 ;;
(-fno-modules-decluse)   fullopt="$1"; canonopt="-fno-modules-decluse"; inc=1 ;;
(-fno-modules)   fullopt="$1"; canonopt="-fno-modules"; inc=1 ;;
(-fno-merge-all-constants)   fullopt="$1"; canonopt="-fno-merge-all-constants"; inc=1 ;;
(-fno-memory-profile)   fullopt="$1"; canonopt="-fno-memory-profile"; inc=1 ;;
(-fno-math-errno)   fullopt="$1"; canonopt="-fno-math-errno"; inc=1 ;;
(-fno-math-builtin)   fullopt="$1"; canonopt="-fno-math-builtin"; inc=1 ;;
(-fno-lto-unit)   fullopt="$1"; canonopt="-fno-lto-unit"; inc=1 ;;
(-fno-lto)   fullopt="$1"; canonopt="-fno-lto"; inc=1 ;;
(-fno-legacy-pass-manager)   fullopt="$1"; canonopt="-fno-legacy-pass-manager"; inc=1 ;;
(-fno-keep-static-consts)   fullopt="$1"; canonopt="-fno-keep-static-consts"; inc=1 ;;
(-fno-jump-tables)   fullopt="$1"; canonopt="-fno-jump-tables"; inc=1 ;;
(-fno-integrated-cc1)   fullopt="$1"; canonopt="-fno-integrated-cc1"; inc=1 ;;
(-fno-integrated-as)   fullopt="$1"; canonopt="-fno-integrated-as"; inc=1 ;;
(-fno-implicit-modules)   fullopt="$1"; canonopt="-fno-implicit-modules"; inc=1 ;;
(-fno-hip-new-launch-api)   fullopt="$1"; canonopt="-fno-hip-new-launch-api"; inc=1 ;;
(-fno-hip-fp32-correctly-rounded-divide-sqrt)   fullopt="$1"; canonopt="-fno-hip-fp32-correctly-rounded-divide-sqrt"; inc=1 ;;
(-fno-gpu-rdc)   fullopt="$1"; canonopt="-fno-gpu-rdc"; inc=1 ;;
(-fno-gpu-defer-diag)   fullopt="$1"; canonopt="-fno-gpu-defer-diag"; inc=1 ;;
(-fno-gpu-allow-device-init)   fullopt="$1"; canonopt="-fno-gpu-allow-device-init"; inc=1 ;;
(-fno-gnu89-inline)   fullopt="$1"; canonopt="-fno-gnu89-inline"; inc=1 ;;
(-fno-gnu-keywords)   fullopt="$1"; canonopt="-fno-gnu-keywords"; inc=1 ;;
(-fno-gnu-inline-asm)   fullopt="$1"; canonopt="-fno-gnu-inline-asm"; inc=1 ;;
(-fno-global-isel)   fullopt="$1"; canonopt="-fno-global-isel"; inc=1 ;;
(-fno-function-sections)   fullopt="$1"; canonopt="-fno-function-sections"; inc=1 ;;
(-fno-force-enable-int128)   fullopt="$1"; canonopt="-fno-force-enable-int128"; inc=1 ;;
(-fno-force-emit-vtables)   fullopt="$1"; canonopt="-fno-force-emit-vtables"; inc=1 ;;
(-fno-force-dwarf-frame)   fullopt="$1"; canonopt="-fno-force-dwarf-frame"; inc=1 ;;
(-fno-fixed-point)   fullopt="$1"; canonopt="-fno-fixed-point"; inc=1 ;;
(-fno-finite-math-only)   fullopt="$1"; canonopt="-fno-finite-math-only"; inc=1 ;;
(-fno-finite-loops)   fullopt="$1"; canonopt="-fno-finite-loops"; inc=1 ;;
(-fno-fine-grained-bitfield-accesses)   fullopt="$1"; canonopt="-fno-fine-grained-bitfield-accesses"; inc=1 ;;
(-fno-fast-math)   fullopt="$1"; canonopt="-fno-fast-math"; inc=1 ;;
(-fno-experimental-relative-c++-abi-vtables)   fullopt="$1"; canonopt="-fno-experimental-relative-c++-abi-vtables"; inc=1 ;;
(-fno-exceptions)   fullopt="$1"; canonopt="-fno-exceptions"; inc=1 ;;
(-fno-escaping-block-tail-calls)   fullopt="$1"; canonopt="-fno-escaping-block-tail-calls"; inc=1 ;;
(-fno-emulated-tls)   fullopt="$1"; canonopt="-fno-emulated-tls"; inc=1 ;;
(-fno-eliminate-unused-debug-types)   fullopt="$1"; canonopt="-fno-eliminate-unused-debug-types"; inc=1 ;;
(-fno-elide-type)   fullopt="$1"; canonopt="-fno-elide-type"; inc=1 ;;
(-fno-elide-constructors)   fullopt="$1"; canonopt="-fno-elide-constructors"; inc=1 ;;
(-fno-dwarf-directory-asm)   fullopt="$1"; canonopt="-fno-dwarf-directory-asm"; inc=1 ;;
(-fno-double-square-bracket-attributes)   fullopt="$1"; canonopt="-fno-double-square-bracket-attributes"; inc=1 ;;
(-fno-dollars-in-identifiers)   fullopt="$1"; canonopt="-fno-dollars-in-identifiers"; inc=1 ;;
(-fno-discard-value-names)   fullopt="$1"; canonopt="-fno-discard-value-names"; inc=1 ;;
(-fno-direct-access-external-data)   fullopt="$1"; canonopt="-fno-direct-access-external-data"; inc=1 ;;
(-fno-digraphs)   fullopt="$1"; canonopt="-fno-digraphs"; inc=1 ;;
(-fno-diagnostics-use-presumed-location)   fullopt="$1"; canonopt="-fno-diagnostics-use-presumed-location"; inc=1 ;;
(-fno-diagnostics-show-option)   fullopt="$1"; canonopt="-fno-diagnostics-show-option"; inc=1 ;;
(-fno-diagnostics-show-note-include-stack)   fullopt="$1"; canonopt="-fno-diagnostics-show-note-include-stack"; inc=1 ;;
(-fno-diagnostics-show-hotness)   fullopt="$1"; canonopt="-fno-diagnostics-show-hotness"; inc=1 ;;
(-fno-diagnostics-fixit-info)   fullopt="$1"; canonopt="-fno-diagnostics-fixit-info"; inc=1 ;;
(-fno-deprecated-macro)   fullopt="$1"; canonopt="-fno-deprecated-macro"; inc=1 ;;
(-fno-delete-null-pointer-checks)   fullopt="$1"; canonopt="-fno-delete-null-pointer-checks"; inc=1 ;;
(-fno-delayed-template-parsing)   fullopt="$1"; canonopt="-fno-delayed-template-parsing"; inc=1 ;;
(-fno-declspec)   fullopt="$1"; canonopt="-fno-declspec"; inc=1 ;;
(-fno-debug-ranges-base-address)   fullopt="$1"; canonopt="-fno-debug-ranges-base-address"; inc=1 ;;
(-fno-debug-pass-manager)   fullopt="$1"; canonopt="-fno-debug-pass-manager"; inc=1 ;;
(-fno-debug-macro)   fullopt="$1"; canonopt="-fno-debug-macro"; inc=1 ;;
(-fno-debug-info-for-profiling)   fullopt="$1"; canonopt="-fno-debug-info-for-profiling"; inc=1 ;;
(-fno-data-sections)   fullopt="$1"; canonopt="-fno-data-sections"; inc=1 ;;
(-fno-cxx-exceptions)   fullopt="$1"; canonopt="-fno-cxx-exceptions"; inc=1 ;;
(-fno-cuda-short-ptr)   fullopt="$1"; canonopt="-fno-cuda-short-ptr"; inc=1 ;;
(-fno-cuda-host-device-constexpr)   fullopt="$1"; canonopt="-fno-cuda-host-device-constexpr"; inc=1 ;;
(-fno-cuda-approx-transcendentals)   fullopt="$1"; canonopt="-fno-cuda-approx-transcendentals"; inc=1 ;;
(-fno-crash-diagnostics)   fullopt="$1"; canonopt="-fno-crash-diagnostics"; inc=1 ;;
(-fno-coverage-mapping)   fullopt="$1"; canonopt="-fno-coverage-mapping"; inc=1 ;;
(-fno-coroutines-ts)   fullopt="$1"; canonopt="-fno-coroutines-ts"; inc=1 ;;
(-fno-constant-cfstrings)   fullopt="$1"; canonopt="-fno-constant-cfstrings"; inc=1 ;;
(-fno-const-strings)   fullopt="$1"; canonopt="-fno-const-strings"; inc=1 ;;
(-fno-concept-satisfaction-caching)   fullopt="$1"; canonopt="-fno-concept-satisfaction-caching"; inc=1 ;;
(-fno-complete-member-pointers)   fullopt="$1"; canonopt="-fno-complete-member-pointers"; inc=1 ;;
(-fno-common)   fullopt="$1"; canonopt="-fno-common"; inc=1 ;;
(-fno-color-diagnostics)   fullopt="$1"; canonopt="-fno-color-diagnostics"; inc=1 ;;
(-fno-char8_t)   fullopt="$1"; canonopt="-fno-char8_t"; inc=1 ;;
(-fno-caret-diagnostics)   fullopt="$1"; canonopt="-fno-caret-diagnostics"; inc=1 ;;
(-fno-c++-static-destructors)   fullopt="$1"; canonopt="-fno-c++-static-destructors"; inc=1 ;;
(-fno-builtin-*) fullopt="$1"; canonopt="-fno-builtin-"; optarg="$( echo "$1" | sed -E "s^-fno-builtin-^^" )"; inc=1 ;;
(-fno-builtin)   fullopt="$1"; canonopt="-fno-builtin"; inc=1 ;;
(-fno-borland-extensions)   fullopt="$1"; canonopt="-fno-borland-extensions"; inc=1 ;;
(-fno-blocks)   fullopt="$1"; canonopt="-fno-blocks"; inc=1 ;;
(-fno-bitfield-type-align)   fullopt="$1"; canonopt="-fno-bitfield-type-align"; inc=1 ;;
(-fno-autolink)   fullopt="$1"; canonopt="-fno-autolink"; inc=1 ;;
(-fno-async-exceptions)   fullopt="$1"; canonopt="-fno-async-exceptions"; inc=1 ;;
(-fno-assume-sane-operator-new)   fullopt="$1"; canonopt="-fno-assume-sane-operator-new"; inc=1 ;;
(-fno-asm-blocks)   fullopt="$1"; canonopt="-fno-asm-blocks"; inc=1 ;;
(-fno-application-extension)   fullopt="$1"; canonopt="-fno-application-extension"; inc=1 ;;
(-fno-apple-pragma-pack)   fullopt="$1"; canonopt="-fno-apple-pragma-pack"; inc=1 ;;
(-fno-allow-editor-placeholders)   fullopt="$1"; canonopt="-fno-allow-editor-placeholders"; inc=1 ;;
(-fno-aligned-allocation)   fullopt="$1"; canonopt="-fno-aligned-allocation"; inc=1 ;;
(-fno-addrsig)   fullopt="$1"; canonopt="-fno-addrsig"; inc=1 ;;
(-fno-access-control)   fullopt="$1"; canonopt="-fno-access-control"; inc=1 ;;
(-fno-aapcs-bitfield-width)   fullopt="$1"; canonopt="-fno-aapcs-bitfield-width"; inc=1 ;;
(-fnew-alignment=*) fullopt="$1"; canonopt="-fnew-alignment"; optarg="$( echo "$1" | sed -E "s^-fnew-alignment=^^" )"; inc=1 ;;
(-fnative-half-type)   fullopt="$1"; canonopt="-fnative-half-type"; inc=1 ;;
(-fnative-half-arguments-and-returns)   fullopt="$1"; canonopt="-fnative-half-arguments-and-returns"; inc=1 ;;
(-fmsc-version=*) fullopt="$1"; canonopt="-fmsc-version"; optarg="$( echo "$1" | sed -E "s^-fmsc-version=^^" )"; inc=1 ;;
(-fms-extensions)   fullopt="$1"; canonopt="-fms-extensions"; inc=1 ;;
(-fms-compatibility-version=*) fullopt="$1"; canonopt="-fms-compatibility-version"; optarg="$( echo "$1" | sed -E "s^-fms-compatibility-version=^^" )"; inc=1 ;;
(-fms-compatibility)   fullopt="$1"; canonopt="-fms-compatibility"; inc=1 ;;
(-fmodules-validate-system-headers)   fullopt="$1"; canonopt="-fmodules-validate-system-headers"; inc=1 ;;
(-fmodules-validate-once-per-build-session)   fullopt="$1"; canonopt="-fmodules-validate-once-per-build-session"; inc=1 ;;
(-fmodules-validate-input-files-content)   fullopt="$1"; canonopt="-fmodules-validate-input-files-content"; inc=1 ;;
(-fmodules-user-build-path)  fullopt="$1"; canonopt="-fmodules-user-build-path"; optarg="$2"; inc=2;;
(-fmodules-ts)   fullopt="$1"; canonopt="-fmodules-ts"; inc=1 ;;
(-fmodules-strict-decluse)   fullopt="$1"; canonopt="-fmodules-strict-decluse"; inc=1 ;;
(-fmodules-strict-context-hash)   fullopt="$1"; canonopt="-fmodules-strict-context-hash"; inc=1 ;;
(-fmodules-search-all)   fullopt="$1"; canonopt="-fmodules-search-all"; inc=1 ;;
(-fmodules-prune-interval=*) fullopt="$1"; canonopt="-fmodules-prune-interval"; optarg="$( echo "$1" | sed -E "s^-fmodules-prune-interval=^^" )"; inc=1 ;;
(-fmodules-prune-after=*) fullopt="$1"; canonopt="-fmodules-prune-after"; optarg="$( echo "$1" | sed -E "s^-fmodules-prune-after=^^" )"; inc=1 ;;
(-fmodules-local-submodule-visibility)   fullopt="$1"; canonopt="-fmodules-local-submodule-visibility"; inc=1 ;;
(-fmodules-ignore-macro=*) fullopt="$1"; canonopt="-fmodules-ignore-macro"; optarg="$( echo "$1" | sed -E "s^-fmodules-ignore-macro=^^" )"; inc=1 ;;
(-fmodules-hash-content)   fullopt="$1"; canonopt="-fmodules-hash-content"; inc=1 ;;
(-fmodules-embed-file=*) fullopt="$1"; canonopt="-fmodules-embed-file"; optarg="$( echo "$1" | sed -E "s^-fmodules-embed-file=^^" )"; inc=1 ;;
(-fmodules-embed-all-files*) fullopt="$1"; canonopt="-fmodules-embed-all-files"; optarg="$( echo "$1" | sed -E "s^-fmodules-embed-all-files^^" )"; inc=1 ;;
(-fmodules-disable-diagnostic-validation)   fullopt="$1"; canonopt="-fmodules-disable-diagnostic-validation"; inc=1 ;;
(-fmodules-decluse)   fullopt="$1"; canonopt="-fmodules-decluse"; inc=1 ;;
(-fmodules-debuginfo)   fullopt="$1"; canonopt="-fmodules-debuginfo"; inc=1 ;;
(-fmodules-codegen)   fullopt="$1"; canonopt="-fmodules-codegen"; inc=1 ;;
(-fmodules-cache-path=*) fullopt="$1"; canonopt="-fmodules-cache-path"; optarg="$( echo "$1" | sed -E "s^-fmodules-cache-path=^^" )"; inc=1 ;;
(-fmodules)   fullopt="$1"; canonopt="-fmodules"; inc=1 ;;
(-fmodule-name=*) fullopt="$1"; canonopt="-fmodule-name"; optarg="$( echo "$1" | sed -E "s^-fmodule-name=^^" )"; inc=1 ;;
(-fmodule-map-file=*) fullopt="$1"; canonopt="-fmodule-map-file"; optarg="$( echo "$1" | sed -E "s^-fmodule-map-file=^^" )"; inc=1 ;;
(-fmodule-map-file-home-is-cwd)   fullopt="$1"; canonopt="-fmodule-map-file-home-is-cwd"; inc=1 ;;
(-fmodule-format=*) fullopt="$1"; canonopt="-fmodule-format"; optarg="$( echo "$1" | sed -E "s^-fmodule-format=^^" )"; inc=1 ;;
(-fmodule-file=*) fullopt="$1"; canonopt="-fmodule-file"; optarg="$( echo "$1" | sed -E "s^-fmodule-file=^^" )"; inc=1 ;;
(-fmodule-feature)  fullopt="$1"; canonopt="-fmodule-feature"; optarg="$2"; inc=2;;
(-fmessage-length=*) fullopt="$1"; canonopt="-fmessage-length"; optarg="$( echo "$1" | sed -E "s^-fmessage-length=^^" )"; inc=1 ;;
(-fmerge-functions)   fullopt="$1"; canonopt="-fmerge-functions"; inc=1 ;;
(-fmerge-all-constants)   fullopt="$1"; canonopt="-fmerge-all-constants"; inc=1 ;;
(-fmemory-profile=*) fullopt="$1"; canonopt="-fmemory-profile"; optarg="$( echo "$1" | sed -E "s^-fmemory-profile=^^" )"; inc=1 ;;
(-fmemory-profile)   fullopt="$1"; canonopt="-fmemory-profile"; inc=1 ;;
(-fmax-type-align=*) fullopt="$1"; canonopt="-fmax-type-align"; optarg="$( echo "$1" | sed -E "s^-fmax-type-align=^^" )"; inc=1 ;;
(-fmax-tokens=*) fullopt="$1"; canonopt="-fmax-tokens"; optarg="$( echo "$1" | sed -E "s^-fmax-tokens=^^" )"; inc=1 ;;
(-fmath-errno)   fullopt="$1"; canonopt="-fmath-errno"; inc=1 ;;
(-fmacro-prefix-map=*) fullopt="$1"; canonopt="-fmacro-prefix-map"; optarg="$( echo "$1" | sed -E "s^-fmacro-prefix-map=^^" )"; inc=1 ;;
(-fmacro-backtrace-limit)  fullopt="$1"; canonopt="-fmacro-backtrace-limit"; optarg="$2"; inc=2;;
(-flto=*) fullopt="$1"; canonopt="-flto"; optarg="$( echo "$1" | sed -E "s^-flto=^^" )"; inc=1 ;;
(-flto-visibility-public-std)   fullopt="$1"; canonopt="-flto-visibility-public-std"; inc=1 ;;
(-flto-unit)   fullopt="$1"; canonopt="-flto-unit"; inc=1 ;;
(-flto-jobs=*) fullopt="$1"; canonopt="-flto-jobs"; optarg="$( echo "$1" | sed -E "s^-flto-jobs=^^" )"; inc=1 ;;
(-flto)   fullopt="$1"; canonopt="-flto"; inc=1 ;;
(-flegacy-pass-manager)   fullopt="$1"; canonopt="-flegacy-pass-manager"; inc=1 ;;
(-flax-vector-conversions=*) fullopt="$1"; canonopt="-flax-vector-conversions"; optarg="$( echo "$1" | sed -E "s^-flax-vector-conversions=^^" )"; inc=1 ;;
(-fkeep-static-consts)   fullopt="$1"; canonopt="-fkeep-static-consts"; inc=1 ;;
(-fjump-tables)   fullopt="$1"; canonopt="-fjump-tables"; inc=1 ;;
(-fixit=*) fullopt="$1"; canonopt="-fixit"; optarg="$( echo "$1" | sed -E "s^-fixit=^^" )"; inc=1 ;;
(-fixit-to-temporary)   fullopt="$1"; canonopt="-fixit-to-temporary"; inc=1 ;;
(-fixit-recompile)   fullopt="$1"; canonopt="-fixit-recompile"; inc=1 ;;
(-fixit)   fullopt="$1"; canonopt="-fixit"; inc=1 ;;
(-fix-what-you-can)   fullopt="$1"; canonopt="-fix-what-you-can"; inc=1 ;;
(-fix-only-warnings)   fullopt="$1"; canonopt="-fix-only-warnings"; inc=1 ;;
(-fintegrated-cc1)   fullopt="$1"; canonopt="-fintegrated-cc1"; inc=1 ;;
(-fintegrated-as)   fullopt="$1"; canonopt="-fintegrated-as"; inc=1 ;;
(-finstrument-functions-after-inlining)   fullopt="$1"; canonopt="-finstrument-functions-after-inlining"; inc=1 ;;
(-finstrument-functions)   fullopt="$1"; canonopt="-finstrument-functions"; inc=1 ;;
(-finstrument-function-entry-bare)   fullopt="$1"; canonopt="-finstrument-function-entry-bare"; inc=1 ;;
(-finput-charset=*) fullopt="$1"; canonopt="-finput-charset"; optarg="$( echo "$1" | sed -E "s^-finput-charset=^^" )"; inc=1 ;;
(-finline-hint-functions)   fullopt="$1"; canonopt="-finline-hint-functions"; inc=1 ;;
(-finline-functions)   fullopt="$1"; canonopt="-finline-functions"; inc=1 ;;
(-finclude-default-header)   fullopt="$1"; canonopt="-finclude-default-header"; inc=1 ;;
(-fimplicit-modules)   fullopt="$1"; canonopt="-fimplicit-modules"; inc=1 ;;
(-fimplicit-module-maps)   fullopt="$1"; canonopt="-fimplicit-module-maps"; inc=1 ;;
(-fignore-exceptions)   fullopt="$1"; canonopt="-fignore-exceptions"; inc=1 ;;
(-fhip-new-launch-api)   fullopt="$1"; canonopt="-fhip-new-launch-api"; inc=1 ;;
(-fhip-fp32-correctly-rounded-divide-sqrt)   fullopt="$1"; canonopt="-fhip-fp32-correctly-rounded-divide-sqrt"; inc=1 ;;
(-fhalf-no-semantic-interposition)   fullopt="$1"; canonopt="-fhalf-no-semantic-interposition"; inc=1 ;;
(-fgpu-sanitize)   fullopt="$1"; canonopt="-fgpu-sanitize"; inc=1 ;;
(-fgpu-rdc)   fullopt="$1"; canonopt="-fgpu-rdc"; inc=1 ;;
(-fgpu-flush-denormals-to-zero)   fullopt="$1"; canonopt="-fgpu-flush-denormals-to-zero"; inc=1 ;;
(-fgpu-exclude-wrong-side-overloads)   fullopt="$1"; canonopt="-fgpu-exclude-wrong-side-overloads"; inc=1 ;;
(-fgpu-defer-diag)   fullopt="$1"; canonopt="-fgpu-defer-diag"; inc=1 ;;
(-fgpu-allow-device-init)   fullopt="$1"; canonopt="-fgpu-allow-device-init"; inc=1 ;;
(-fgnuc-version=*) fullopt="$1"; canonopt="-fgnuc-version"; optarg="$( echo "$1" | sed -E "s^-fgnuc-version=^^" )"; inc=1 ;;
(-fgnu89-inline)   fullopt="$1"; canonopt="-fgnu89-inline"; inc=1 ;;
(-fgnu-runtime)   fullopt="$1"; canonopt="-fgnu-runtime"; inc=1 ;;
(-fgnu-keywords)   fullopt="$1"; canonopt="-fgnu-keywords"; inc=1 ;;
(-fgnu-inline-asm)   fullopt="$1"; canonopt="-fgnu-inline-asm"; inc=1 ;;
(-fglobal-isel)   fullopt="$1"; canonopt="-fglobal-isel"; inc=1 ;;
(-ffunction-sections)   fullopt="$1"; canonopt="-ffunction-sections"; inc=1 ;;
(-ffreestanding)   fullopt="$1"; canonopt="-ffreestanding"; inc=1 ;;
(-ffp-model=*) fullopt="$1"; canonopt="-ffp-model"; optarg="$( echo "$1" | sed -E "s^-ffp-model=^^" )"; inc=1 ;;
(-ffp-exception-behavior=*) fullopt="$1"; canonopt="-ffp-exception-behavior"; optarg="$( echo "$1" | sed -E "s^-ffp-exception-behavior=^^" )"; inc=1 ;;
(-ffp-contract=*) fullopt="$1"; canonopt="-ffp-contract"; optarg="$( echo "$1" | sed -E "s^-ffp-contract=^^" )"; inc=1 ;;
(-fforce-enable-int128)   fullopt="$1"; canonopt="-fforce-enable-int128"; inc=1 ;;
(-fforce-emit-vtables)   fullopt="$1"; canonopt="-fforce-emit-vtables"; inc=1 ;;
(-fforce-dwarf-frame)   fullopt="$1"; canonopt="-fforce-dwarf-frame"; inc=1 ;;
(-fforbid-guard-variables)   fullopt="$1"; canonopt="-fforbid-guard-variables"; inc=1 ;;
(-ffixed-x9)   fullopt="$1"; canonopt="-ffixed-x9"; inc=1 ;;
(-ffixed-x8)   fullopt="$1"; canonopt="-ffixed-x8"; inc=1 ;;
(-ffixed-x7)   fullopt="$1"; canonopt="-ffixed-x7"; inc=1 ;;
(-ffixed-x6)   fullopt="$1"; canonopt="-ffixed-x6"; inc=1 ;;
(-ffixed-x5)   fullopt="$1"; canonopt="-ffixed-x5"; inc=1 ;;
(-ffixed-x4)   fullopt="$1"; canonopt="-ffixed-x4"; inc=1 ;;
(-ffixed-x31)   fullopt="$1"; canonopt="-ffixed-x31"; inc=1 ;;
(-ffixed-x30)   fullopt="$1"; canonopt="-ffixed-x30"; inc=1 ;;
(-ffixed-x3)   fullopt="$1"; canonopt="-ffixed-x3"; inc=1 ;;
(-ffixed-x29)   fullopt="$1"; canonopt="-ffixed-x29"; inc=1 ;;
(-ffixed-x28)   fullopt="$1"; canonopt="-ffixed-x28"; inc=1 ;;
(-ffixed-x27)   fullopt="$1"; canonopt="-ffixed-x27"; inc=1 ;;
(-ffixed-x26)   fullopt="$1"; canonopt="-ffixed-x26"; inc=1 ;;
(-ffixed-x25)   fullopt="$1"; canonopt="-ffixed-x25"; inc=1 ;;
(-ffixed-x24)   fullopt="$1"; canonopt="-ffixed-x24"; inc=1 ;;
(-ffixed-x23)   fullopt="$1"; canonopt="-ffixed-x23"; inc=1 ;;
(-ffixed-x22)   fullopt="$1"; canonopt="-ffixed-x22"; inc=1 ;;
(-ffixed-x21)   fullopt="$1"; canonopt="-ffixed-x21"; inc=1 ;;
(-ffixed-x20)   fullopt="$1"; canonopt="-ffixed-x20"; inc=1 ;;
(-ffixed-x2)   fullopt="$1"; canonopt="-ffixed-x2"; inc=1 ;;
(-ffixed-x19)   fullopt="$1"; canonopt="-ffixed-x19"; inc=1 ;;
(-ffixed-x18)   fullopt="$1"; canonopt="-ffixed-x18"; inc=1 ;;
(-ffixed-x17)   fullopt="$1"; canonopt="-ffixed-x17"; inc=1 ;;
(-ffixed-x16)   fullopt="$1"; canonopt="-ffixed-x16"; inc=1 ;;
(-ffixed-x15)   fullopt="$1"; canonopt="-ffixed-x15"; inc=1 ;;
(-ffixed-x14)   fullopt="$1"; canonopt="-ffixed-x14"; inc=1 ;;
(-ffixed-x13)   fullopt="$1"; canonopt="-ffixed-x13"; inc=1 ;;
(-ffixed-x12)   fullopt="$1"; canonopt="-ffixed-x12"; inc=1 ;;
(-ffixed-x11)   fullopt="$1"; canonopt="-ffixed-x11"; inc=1 ;;
(-ffixed-x10)   fullopt="$1"; canonopt="-ffixed-x10"; inc=1 ;;
(-ffixed-x1)   fullopt="$1"; canonopt="-ffixed-x1"; inc=1 ;;
(-ffixed-r9)   fullopt="$1"; canonopt="-ffixed-r9"; inc=1 ;;
(-ffixed-r19)   fullopt="$1"; canonopt="-ffixed-r19"; inc=1 ;;
(-ffixed-point)   fullopt="$1"; canonopt="-ffixed-point"; inc=1 ;;
(-ffixed-d7)   fullopt="$1"; canonopt="-ffixed-d7"; inc=1 ;;
(-ffixed-d6)   fullopt="$1"; canonopt="-ffixed-d6"; inc=1 ;;
(-ffixed-d5)   fullopt="$1"; canonopt="-ffixed-d5"; inc=1 ;;
(-ffixed-d4)   fullopt="$1"; canonopt="-ffixed-d4"; inc=1 ;;
(-ffixed-d3)   fullopt="$1"; canonopt="-ffixed-d3"; inc=1 ;;
(-ffixed-d2)   fullopt="$1"; canonopt="-ffixed-d2"; inc=1 ;;
(-ffixed-d1)   fullopt="$1"; canonopt="-ffixed-d1"; inc=1 ;;
(-ffixed-d0)   fullopt="$1"; canonopt="-ffixed-d0"; inc=1 ;;
(-ffixed-a6)   fullopt="$1"; canonopt="-ffixed-a6"; inc=1 ;;
(-ffixed-a5)   fullopt="$1"; canonopt="-ffixed-a5"; inc=1 ;;
(-ffixed-a4)   fullopt="$1"; canonopt="-ffixed-a4"; inc=1 ;;
(-ffixed-a3)   fullopt="$1"; canonopt="-ffixed-a3"; inc=1 ;;
(-ffixed-a2)   fullopt="$1"; canonopt="-ffixed-a2"; inc=1 ;;
(-ffixed-a1)   fullopt="$1"; canonopt="-ffixed-a1"; inc=1 ;;
(-ffixed-a0)   fullopt="$1"; canonopt="-ffixed-a0"; inc=1 ;;
(-ffinite-math-only)   fullopt="$1"; canonopt="-ffinite-math-only"; inc=1 ;;
(-ffinite-loops)   fullopt="$1"; canonopt="-ffinite-loops"; inc=1 ;;
(-ffine-grained-bitfield-accesses)   fullopt="$1"; canonopt="-ffine-grained-bitfield-accesses"; inc=1 ;;
(-ffile-prefix-map=*) fullopt="$1"; canonopt="-ffile-prefix-map"; optarg="$( echo "$1" | sed -E "s^-ffile-prefix-map=^^" )"; inc=1 ;;
(-ffile-compilation-dir=*) fullopt="$1"; canonopt="-ffile-compilation-dir"; optarg="$( echo "$1" | sed -E "s^-ffile-compilation-dir=^^" )"; inc=1 ;;
(-ffast-math)   fullopt="$1"; canonopt="-ffast-math"; inc=1 ;;
(-ffake-address-space-map)   fullopt="$1"; canonopt="-ffake-address-space-map"; inc=1 ;;
(-fexternc-nounwind)   fullopt="$1"; canonopt="-fexternc-nounwind"; inc=1 ;;
(-fextend-arguments=*) fullopt="$1"; canonopt="-fextend-arguments"; optarg="$( echo "$1" | sed -E "s^-fextend-arguments=^^" )"; inc=1 ;;
(-fexperimental-strict-floating-point)   fullopt="$1"; canonopt="-fexperimental-strict-floating-point"; inc=1 ;;
(-fexperimental-relative-c++-abi-vtables)   fullopt="$1"; canonopt="-fexperimental-relative-c++-abi-vtables"; inc=1 ;;
(-fexperimental-new-constant-interpreter)   fullopt="$1"; canonopt="-fexperimental-new-constant-interpreter"; inc=1 ;;
(-fexperimental-debug-variable-locations)   fullopt="$1"; canonopt="-fexperimental-debug-variable-locations"; inc=1 ;;
(-fexceptions)   fullopt="$1"; canonopt="-fexceptions"; inc=1 ;;
(-fescaping-block-tail-calls)   fullopt="$1"; canonopt="-fescaping-block-tail-calls"; inc=1 ;;
(-ferror-limit)  fullopt="$1"; canonopt="-ferror-limit"; optarg="$2"; inc=2;;
(-fencode-extended-block-signature)   fullopt="$1"; canonopt="-fencode-extended-block-signature"; inc=1 ;;
(-fenable-matrix)   fullopt="$1"; canonopt="-fenable-matrix"; inc=1 ;;
(-femulated-tls)   fullopt="$1"; canonopt="-femulated-tls"; inc=1 ;;
(-femit-all-decls)   fullopt="$1"; canonopt="-femit-all-decls"; inc=1 ;;
(-fembed-bitcode=*) fullopt="$1"; canonopt="-fembed-bitcode"; optarg="$( echo "$1" | sed -E "s^-fembed-bitcode=^^" )"; inc=1 ;;
(-fembed-bitcode-marker)   fullopt="$1"; canonopt="-fembed-bitcode-marker"; inc=1 ;;
(-fembed-bitcode)   fullopt="$1"; canonopt="-fembed-bitcode"; inc=1 ;;
(-feliminate-unused-debug-types)   fullopt="$1"; canonopt="-feliminate-unused-debug-types"; inc=1 ;;
(-felide-constructors)   fullopt="$1"; canonopt="-felide-constructors"; inc=1 ;;
(-fdwarf-exceptions)   fullopt="$1"; canonopt="-fdwarf-exceptions"; inc=1 ;;
(-fdwarf-directory-asm)   fullopt="$1"; canonopt="-fdwarf-directory-asm"; inc=1 ;;
(-fdump-vtable-layouts)   fullopt="$1"; canonopt="-fdump-vtable-layouts"; inc=1 ;;
(-fdump-record-layouts-simple)   fullopt="$1"; canonopt="-fdump-record-layouts-simple"; inc=1 ;;
(-fdump-record-layouts-complete)   fullopt="$1"; canonopt="-fdump-record-layouts-complete"; inc=1 ;;
(-fdump-record-layouts-canonical)   fullopt="$1"; canonopt="-fdump-record-layouts-canonical"; inc=1 ;;
(-fdump-record-layouts)   fullopt="$1"; canonopt="-fdump-record-layouts"; inc=1 ;;
(-fdouble-square-bracket-attributes)   fullopt="$1"; canonopt="-fdouble-square-bracket-attributes"; inc=1 ;;
(-fdollars-in-identifiers)   fullopt="$1"; canonopt="-fdollars-in-identifiers"; inc=1 ;;
(-fdiscard-value-names)   fullopt="$1"; canonopt="-fdiscard-value-names"; inc=1 ;;
(-fdisable-module-hash)   fullopt="$1"; canonopt="-fdisable-module-hash"; inc=1 ;;
(-fdirect-access-external-data)   fullopt="$1"; canonopt="-fdirect-access-external-data"; inc=1 ;;
(-fdigraphs)   fullopt="$1"; canonopt="-fdigraphs"; inc=1 ;;
(-fdiagnostics-show-template-tree)   fullopt="$1"; canonopt="-fdiagnostics-show-template-tree"; inc=1 ;;
(-fdiagnostics-show-option)   fullopt="$1"; canonopt="-fdiagnostics-show-option"; inc=1 ;;
(-fdiagnostics-show-note-include-stack)   fullopt="$1"; canonopt="-fdiagnostics-show-note-include-stack"; inc=1 ;;
(-fdiagnostics-show-hotness)   fullopt="$1"; canonopt="-fdiagnostics-show-hotness"; inc=1 ;;
(-fdiagnostics-show-category)  fullopt="$1"; canonopt="-fdiagnostics-show-category"; optarg="$2"; inc=2;;
(-fdiagnostics-print-source-range-info)   fullopt="$1"; canonopt="-fdiagnostics-print-source-range-info"; inc=1 ;;
(-fdiagnostics-parseable-fixits)   fullopt="$1"; canonopt="-fdiagnostics-parseable-fixits"; inc=1 ;;
(-fdiagnostics-hotness-threshold=*) fullopt="$1"; canonopt="-fdiagnostics-hotness-threshold"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-hotness-threshold=^^" )"; inc=1 ;;
(-fdiagnostics-format)  fullopt="$1"; canonopt="-fdiagnostics-format"; optarg="$2"; inc=2;;
(-fdiagnostics-absolute-paths)   fullopt="$1"; canonopt="-fdiagnostics-absolute-paths"; inc=1 ;;
(-fdeprecated-macro)   fullopt="$1"; canonopt="-fdeprecated-macro"; inc=1 ;;
(-fdelete-null-pointer-checks)   fullopt="$1"; canonopt="-fdelete-null-pointer-checks"; inc=1 ;;
(-fdelayed-template-parsing)   fullopt="$1"; canonopt="-fdelayed-template-parsing"; inc=1 ;;
(-fdefault-calling-conv=*) fullopt="$1"; canonopt="-fdefault-calling-conv"; optarg="$( echo "$1" | sed -E "s^-fdefault-calling-conv=^^" )"; inc=1 ;;
(-fdeclspec)   fullopt="$1"; canonopt="-fdeclspec"; inc=1 ;;
(-fdeclare-opencl-builtins)   fullopt="$1"; canonopt="-fdeclare-opencl-builtins"; inc=1 ;;
(-fdebugger-support)   fullopt="$1"; canonopt="-fdebugger-support"; inc=1 ;;
(-fdebugger-objc-literal)   fullopt="$1"; canonopt="-fdebugger-objc-literal"; inc=1 ;;
(-fdebugger-cast-result-to-id)   fullopt="$1"; canonopt="-fdebugger-cast-result-to-id"; inc=1 ;;
(-fdebug-types-section)   fullopt="$1"; canonopt="-fdebug-types-section"; inc=1 ;;
(-fdebug-ranges-base-address)   fullopt="$1"; canonopt="-fdebug-ranges-base-address"; inc=1 ;;
(-fdebug-prefix-map=*) fullopt="$1"; canonopt="-fdebug-prefix-map"; optarg="$( echo "$1" | sed -E "s^-fdebug-prefix-map=^^" )"; inc=1 ;;
(-fdebug-pass-manager)   fullopt="$1"; canonopt="-fdebug-pass-manager"; inc=1 ;;
(-fdebug-macro)   fullopt="$1"; canonopt="-fdebug-macro"; inc=1 ;;
(-fdebug-info-for-profiling)   fullopt="$1"; canonopt="-fdebug-info-for-profiling"; inc=1 ;;
(-fdebug-default-version=*) fullopt="$1"; canonopt="-fdebug-default-version"; optarg="$( echo "$1" | sed -E "s^-fdebug-default-version=^^" )"; inc=1 ;;
(-fdebug-compilation-dir=*) fullopt="$1"; canonopt="-fdebug-compilation-dir"; optarg="$( echo "$1" | sed -E "s^-fdebug-compilation-dir=^^" )"; inc=1 ;;
(-fdata-sections)   fullopt="$1"; canonopt="-fdata-sections"; inc=1 ;;
(-fcxx-exceptions)   fullopt="$1"; canonopt="-fcxx-exceptions"; inc=1 ;;
(-fcuda-short-ptr)   fullopt="$1"; canonopt="-fcuda-short-ptr"; inc=1 ;;
(-fcuda-is-device)   fullopt="$1"; canonopt="-fcuda-is-device"; inc=1 ;;
(-fcuda-include-gpubinary)  fullopt="$1"; canonopt="-fcuda-include-gpubinary"; optarg="$2"; inc=2;;
(-fcuda-approx-transcendentals)   fullopt="$1"; canonopt="-fcuda-approx-transcendentals"; inc=1 ;;
(-fcuda-allow-variadic-functions)   fullopt="$1"; canonopt="-fcuda-allow-variadic-functions"; inc=1 ;;
(-fcs-profile-generate=*) fullopt="$1"; canonopt="-fcs-profile-generate"; optarg="$( echo "$1" | sed -E "s^-fcs-profile-generate=^^" )"; inc=1 ;;
(-fcs-profile-generate)   fullopt="$1"; canonopt="-fcs-profile-generate"; inc=1 ;;
(-fcrash-diagnostics-dir=*) fullopt="$1"; canonopt="-fcrash-diagnostics-dir"; optarg="$( echo "$1" | sed -E "s^-fcrash-diagnostics-dir=^^" )"; inc=1 ;;
(-fcoverage-prefix-map=*) fullopt="$1"; canonopt="-fcoverage-prefix-map"; optarg="$( echo "$1" | sed -E "s^-fcoverage-prefix-map=^^" )"; inc=1 ;;
(-fcoverage-mapping)   fullopt="$1"; canonopt="-fcoverage-mapping"; inc=1 ;;
(-fcoverage-compilation-dir=*) fullopt="$1"; canonopt="-fcoverage-compilation-dir"; optarg="$( echo "$1" | sed -E "s^-fcoverage-compilation-dir=^^" )"; inc=1 ;;
(-fcoroutines-ts)   fullopt="$1"; canonopt="-fcoroutines-ts"; inc=1 ;;
(-fconvergent-functions)   fullopt="$1"; canonopt="-fconvergent-functions"; inc=1 ;;
(-fconstexpr-steps)  fullopt="$1"; canonopt="-fconstexpr-steps"; optarg="$2"; inc=2;;
(-fconstexpr-depth)  fullopt="$1"; canonopt="-fconstexpr-depth"; optarg="$2"; inc=2;;
(-fconstexpr-backtrace-limit)  fullopt="$1"; canonopt="-fconstexpr-backtrace-limit"; optarg="$2"; inc=2;;
(-fconstant-string-class)  fullopt="$1"; canonopt="-fconstant-string-class"; optarg="$2"; inc=2;;
(-fconstant-cfstrings)   fullopt="$1"; canonopt="-fconstant-cfstrings"; inc=1 ;;
(-fconst-strings)   fullopt="$1"; canonopt="-fconst-strings"; inc=1 ;;
(-fconcepts-ts)   fullopt="$1"; canonopt="-fconcepts-ts"; inc=1 ;;
(-fcomplete-member-pointers)   fullopt="$1"; canonopt="-fcomplete-member-pointers"; inc=1 ;;
(-fcompatibility-qualified-id-block-type-checking)   fullopt="$1"; canonopt="-fcompatibility-qualified-id-block-type-checking"; inc=1 ;;
(-fcommon)   fullopt="$1"; canonopt="-fcommon"; inc=1 ;;
(-fcomment-block-commands=*) fullopt="$1"; canonopt="-fcomment-block-commands"; optarg="$( echo "$1" | sed -E "s^-fcomment-block-commands=^^" )"; inc=1 ;;
(-fcolor-diagnostics)   fullopt="$1"; canonopt="-fcolor-diagnostics"; inc=1 ;;
(-fclang-abi-compat=*) fullopt="$1"; canonopt="-fclang-abi-compat"; optarg="$( echo "$1" | sed -E "s^-fclang-abi-compat=^^" )"; inc=1 ;;
(-fchar8_t)   fullopt="$1"; canonopt="-fchar8_t"; inc=1 ;;
(-fcf-protection=*) fullopt="$1"; canonopt="-fcf-protection"; optarg="$( echo "$1" | sed -E "s^-fcf-protection=^^" )"; inc=1 ;;
(-fcf-protection)   fullopt="$1"; canonopt="-fcf-protection"; inc=1 ;;
(-fcaret-diagnostics-max-lines)  fullopt="$1"; canonopt="-fcaret-diagnostics-max-lines"; optarg="$2"; inc=2;;
(-fcaret-diagnostics)   fullopt="$1"; canonopt="-fcaret-diagnostics"; inc=1 ;;
(-fcall-saved-x9)   fullopt="$1"; canonopt="-fcall-saved-x9"; inc=1 ;;
(-fcall-saved-x8)   fullopt="$1"; canonopt="-fcall-saved-x8"; inc=1 ;;
(-fcall-saved-x18)   fullopt="$1"; canonopt="-fcall-saved-x18"; inc=1 ;;
(-fcall-saved-x15)   fullopt="$1"; canonopt="-fcall-saved-x15"; inc=1 ;;
(-fcall-saved-x14)   fullopt="$1"; canonopt="-fcall-saved-x14"; inc=1 ;;
(-fcall-saved-x13)   fullopt="$1"; canonopt="-fcall-saved-x13"; inc=1 ;;
(-fcall-saved-x12)   fullopt="$1"; canonopt="-fcall-saved-x12"; inc=1 ;;
(-fcall-saved-x11)   fullopt="$1"; canonopt="-fcall-saved-x11"; inc=1 ;;
(-fcall-saved-x10)   fullopt="$1"; canonopt="-fcall-saved-x10"; inc=1 ;;
(-fc++-static-destructors)   fullopt="$1"; canonopt="-fc++-static-destructors"; inc=1 ;;
(-fc++-abi=*) fullopt="$1"; canonopt="-fc++-abi"; optarg="$( echo "$1" | sed -E "s^-fc++-abi=^^" )"; inc=1 ;;
(-fbuiltin-module-map)   fullopt="$1"; canonopt="-fbuiltin-module-map"; inc=1 ;;
(-fbuild-session-timestamp=*) fullopt="$1"; canonopt="-fbuild-session-timestamp"; optarg="$( echo "$1" | sed -E "s^-fbuild-session-timestamp=^^" )"; inc=1 ;;
(-fbuild-session-file=*) fullopt="$1"; canonopt="-fbuild-session-file"; optarg="$( echo "$1" | sed -E "s^-fbuild-session-file=^^" )"; inc=1 ;;
(-fbracket-depth)  fullopt="$1"; canonopt="-fbracket-depth"; optarg="$2"; inc=2;;
(-fborland-extensions)   fullopt="$1"; canonopt="-fborland-extensions"; inc=1 ;;
(-fblocks-runtime-optional)   fullopt="$1"; canonopt="-fblocks-runtime-optional"; inc=1 ;;
(-fblocks)   fullopt="$1"; canonopt="-fblocks"; inc=1 ;;
(-fbinutils-version=*) fullopt="$1"; canonopt="-fbinutils-version"; optarg="$( echo "$1" | sed -E "s^-fbinutils-version=^^" )"; inc=1 ;;
(-fbasic-block-sections=*) fullopt="$1"; canonopt="-fbasic-block-sections"; optarg="$( echo "$1" | sed -E "s^-fbasic-block-sections=^^" )"; inc=1 ;;
(-fautolink)   fullopt="$1"; canonopt="-fautolink"; inc=1 ;;
(-fasync-exceptions)   fullopt="$1"; canonopt="-fasync-exceptions"; inc=1 ;;
(-fasm-blocks)   fullopt="$1"; canonopt="-fasm-blocks"; inc=1 ;;
(-fapply-global-visibility-to-externs)   fullopt="$1"; canonopt="-fapply-global-visibility-to-externs"; inc=1 ;;
(-fapplication-extension)   fullopt="$1"; canonopt="-fapplication-extension"; inc=1 ;;
(-fapple-pragma-pack)   fullopt="$1"; canonopt="-fapple-pragma-pack"; inc=1 ;;
(-fapple-link-rtlib)   fullopt="$1"; canonopt="-fapple-link-rtlib"; inc=1 ;;
(-fapple-kext)   fullopt="$1"; canonopt="-fapple-kext"; inc=1 ;;
(-fansi-escape-codes)   fullopt="$1"; canonopt="-fansi-escape-codes"; inc=1 ;;
(-faltivec-src-compat=*) fullopt="$1"; canonopt="-faltivec-src-compat"; optarg="$( echo "$1" | sed -E "s^-faltivec-src-compat=^^" )"; inc=1 ;;
(-fallow-pcm-with-compiler-errors)   fullopt="$1"; canonopt="-fallow-pcm-with-compiler-errors"; inc=1 ;;
(-fallow-pch-with-different-modules-cache-path)   fullopt="$1"; canonopt="-fallow-pch-with-different-modules-cache-path"; inc=1 ;;
(-fallow-pch-with-compiler-errors)   fullopt="$1"; canonopt="-fallow-pch-with-compiler-errors"; inc=1 ;;
(-fallow-half-arguments-and-returns)   fullopt="$1"; canonopt="-fallow-half-arguments-and-returns"; inc=1 ;;
(-fallow-editor-placeholders)   fullopt="$1"; canonopt="-fallow-editor-placeholders"; inc=1 ;;
(-faligned-allocation)   fullopt="$1"; canonopt="-faligned-allocation"; inc=1 ;;
(-faligned-alloc-unavailable)   fullopt="$1"; canonopt="-faligned-alloc-unavailable"; inc=1 ;;
(-faddrsig)   fullopt="$1"; canonopt="-faddrsig"; inc=1 ;;
(-faddress-space-map-mangling=*) fullopt="$1"; canonopt="-faddress-space-map-mangling"; optarg="$( echo "$1" | sed -E "s^-faddress-space-map-mangling=^^" )"; inc=1 ;;
(-faccess-control)   fullopt="$1"; canonopt="-faccess-control"; inc=1 ;;
(-faapcs-bitfield-width)   fullopt="$1"; canonopt="-faapcs-bitfield-width"; inc=1 ;;
(-faapcs-bitfield-load)   fullopt="$1"; canonopt="-faapcs-bitfield-load"; inc=1 ;;
(-exception-model)  fullopt="$1"; canonopt="-exception-model"; optarg="$2"; inc=2;;
(-error-on-deserialized-decl)  fullopt="$1"; canonopt="-error-on-deserialized-decl"; optarg="$2"; inc=2;;
(-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang)   fullopt="$1"; canonopt="-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang"; inc=1 ;;
(-enable-noundef-analysis)   fullopt="$1"; canonopt="-enable-noundef-analysis"; inc=1 ;;
(-emit-pch)   fullopt="$1"; canonopt="-emit-pch"; inc=1 ;;
(-emit-obj)   fullopt="$1"; canonopt="-emit-obj"; inc=1 ;;
(-emit-module-interface)   fullopt="$1"; canonopt="-emit-module-interface"; inc=1 ;;
(-emit-module)   fullopt="$1"; canonopt="-emit-module"; inc=1 ;;
(-emit-merged-ifs)   fullopt="$1"; canonopt="-emit-merged-ifs"; inc=1 ;;
(-emit-llvm-uselists)   fullopt="$1"; canonopt="-emit-llvm-uselists"; inc=1 ;;
(-emit-llvm-only)   fullopt="$1"; canonopt="-emit-llvm-only"; inc=1 ;;
(-emit-llvm-bc)   fullopt="$1"; canonopt="-emit-llvm-bc"; inc=1 ;;
(-emit-llvm)   fullopt="$1"; canonopt="-emit-llvm"; inc=1 ;;
(-emit-interface-stubs)   fullopt="$1"; canonopt="-emit-interface-stubs"; inc=1 ;;
(-emit-html)   fullopt="$1"; canonopt="-emit-html"; inc=1 ;;
(-emit-header-module)   fullopt="$1"; canonopt="-emit-header-module"; inc=1 ;;
(-emit-codegen-only)   fullopt="$1"; canonopt="-emit-codegen-only"; inc=1 ;;
(-emit-ast)   fullopt="$1"; canonopt="-emit-ast"; inc=1 ;;
(-ehcontguard)   fullopt="$1"; canonopt="-ehcontguard"; inc=1 ;;
(-dwarf-ext-refs)   fullopt="$1"; canonopt="-dwarf-ext-refs"; inc=1 ;;
(-dwarf-explicit-import)   fullopt="$1"; canonopt="-dwarf-explicit-import"; inc=1 ;;
(-dwarf-debug-flags)  fullopt="$1"; canonopt="-dwarf-debug-flags"; optarg="$2"; inc=2;;
(-dump-tokens)   fullopt="$1"; canonopt="-dump-tokens"; inc=1 ;;
(-dump-raw-tokens)   fullopt="$1"; canonopt="-dump-raw-tokens"; inc=1 ;;
(-dump-deserialized-decls)   fullopt="$1"; canonopt="-dump-deserialized-decls"; inc=1 ;;
(-dump-coverage-mapping)   fullopt="$1"; canonopt="-dump-coverage-mapping"; inc=1 ;;
(-dsym-dir)  fullopt="$1"; canonopt="-dsym-dir"; optarg="$2"; inc=2;;
(-discard-value-names)   fullopt="$1"; canonopt="-discard-value-names"; inc=1 ;;
(-disable-red-zone)   fullopt="$1"; canonopt="-disable-red-zone"; inc=1 ;;
(-disable-pragma-debug-crash)   fullopt="$1"; canonopt="-disable-pragma-debug-crash"; inc=1 ;;
(-disable-objc-default-synthesize-properties)   fullopt="$1"; canonopt="-disable-objc-default-synthesize-properties"; inc=1 ;;
(-disable-llvm-verifier)   fullopt="$1"; canonopt="-disable-llvm-verifier"; inc=1 ;;
(-disable-llvm-passes)   fullopt="$1"; canonopt="-disable-llvm-passes"; inc=1 ;;
(-disable-lifetime-markers)   fullopt="$1"; canonopt="-disable-lifetime-markers"; inc=1 ;;
(-disable-free)   fullopt="$1"; canonopt="-disable-free"; inc=1 ;;
(-disable-O0-optnone)   fullopt="$1"; canonopt="-disable-O0-optnone"; inc=1 ;;
(-diagnostic-log-file)  fullopt="$1"; canonopt="-diagnostic-log-file"; optarg="$2"; inc=2;;
(-detailed-preprocessing-record)   fullopt="$1"; canonopt="-detailed-preprocessing-record"; inc=1 ;;
(-dependency-file)  fullopt="$1"; canonopt="-dependency-file"; optarg="$2"; inc=2;;
(-dependency-dot)  fullopt="$1"; canonopt="-dependency-dot"; optarg="$2"; inc=2;;
(-default-function-attr)  fullopt="$1"; canonopt="-default-function-attr"; optarg="$2"; inc=2;;
(-debug-info-macro)   fullopt="$1"; canonopt="-debug-info-macro"; inc=1 ;;
(-debug-forward-template-params)   fullopt="$1"; canonopt="-debug-forward-template-params"; inc=1 ;;
(-dM)   fullopt="$1"; canonopt="-dM"; inc=1 ;;
(-dI)   fullopt="$1"; canonopt="-dI"; inc=1 ;;
(-dD)   fullopt="$1"; canonopt="-dD"; inc=1 ;;
(-cxx-isystem)  fullopt="$1"; canonopt="-cxx-isystem"; optarg="$2"; inc=2;;
(-cuid=*) fullopt="$1"; canonopt="-cuid"; optarg="$( echo "$1" | sed -E "s^-cuid=^^" )"; inc=1 ;;
(-coverage-version=*) fullopt="$1"; canonopt="-coverage-version"; optarg="$( echo "$1" | sed -E "s^-coverage-version=^^" )"; inc=1 ;;
(-coverage-notes-file)  fullopt="$1"; canonopt="-coverage-notes-file"; optarg="$2"; inc=2;;
(-coverage-data-file)  fullopt="$1"; canonopt="-coverage-data-file"; optarg="$2"; inc=2;;
(-compress-debug-sections=*) fullopt="$1"; canonopt="-compress-debug-sections"; optarg="$( echo "$1" | sed -E "s^-compress-debug-sections=^^" )"; inc=1 ;;
(-compiler-options-dump)   fullopt="$1"; canonopt="-compiler-options-dump"; inc=1 ;;
(-code-completion-with-fixits)   fullopt="$1"; canonopt="-code-completion-with-fixits"; inc=1 ;;
(-code-completion-patterns)   fullopt="$1"; canonopt="-code-completion-patterns"; inc=1 ;;
(-code-completion-macros)   fullopt="$1"; canonopt="-code-completion-macros"; inc=1 ;;
(-code-completion-brief-comments)   fullopt="$1"; canonopt="-code-completion-brief-comments"; inc=1 ;;
(-code-completion-at)  fullopt="$1"; canonopt="-code-completion-at"; optarg="$2"; inc=2;;
(-cl-unsafe-math-optimizations)   fullopt="$1"; canonopt="-cl-unsafe-math-optimizations"; inc=1 ;;
(-cl-uniform-work-group-size)   fullopt="$1"; canonopt="-cl-uniform-work-group-size"; inc=1 ;;
(-cl-strict-aliasing)   fullopt="$1"; canonopt="-cl-strict-aliasing"; inc=1 ;;
(-cl-std=*) fullopt="$1"; canonopt="-cl-std"; optarg="$( echo "$1" | sed -E "s^-cl-std=^^" )"; inc=1 ;;
(-cl-single-precision-constant)   fullopt="$1"; canonopt="-cl-single-precision-constant"; inc=1 ;;
(-cl-opt-disable)   fullopt="$1"; canonopt="-cl-opt-disable"; inc=1 ;;
(-cl-no-stdinc)   fullopt="$1"; canonopt="-cl-no-stdinc"; inc=1 ;;
(-cl-no-signed-zeros)   fullopt="$1"; canonopt="-cl-no-signed-zeros"; inc=1 ;;
(-cl-mad-enable)   fullopt="$1"; canonopt="-cl-mad-enable"; inc=1 ;;
(-cl-kernel-arg-info)   fullopt="$1"; canonopt="-cl-kernel-arg-info"; inc=1 ;;
(-cl-fp32-correctly-rounded-divide-sqrt)   fullopt="$1"; canonopt="-cl-fp32-correctly-rounded-divide-sqrt"; inc=1 ;;
(-cl-finite-math-only)   fullopt="$1"; canonopt="-cl-finite-math-only"; inc=1 ;;
(-cl-fast-relaxed-math)   fullopt="$1"; canonopt="-cl-fast-relaxed-math"; inc=1 ;;
(-cl-ext=*) fullopt="$1"; canonopt="-cl-ext"; optarg="$( echo "$1" | sed -E "s^-cl-ext=^^" )"; inc=1 ;;
(-cl-denorms-are-zero)   fullopt="$1"; canonopt="-cl-denorms-are-zero"; inc=1 ;;
(-chain-include)  fullopt="$1"; canonopt="-chain-include"; optarg="$2"; inc=2;;
(-cfguard-no-checks)   fullopt="$1"; canonopt="-cfguard-no-checks"; inc=1 ;;
(-cfguard)   fullopt="$1"; canonopt="-cfguard"; inc=1 ;;
(-cfg-add-implicit-dtors)   fullopt="$1"; canonopt="-cfg-add-implicit-dtors"; inc=1 ;;
(-c-isystem)  fullopt="$1"; canonopt="-c-isystem"; optarg="$2"; inc=2;;
(-c)   fullopt="$1"; canonopt="-c"; inc=1 ;;
(-building-pch-with-obj)   fullopt="$1"; canonopt="-building-pch-with-obj"; inc=1 ;;
(-aux-triple)  fullopt="$1"; canonopt="-aux-triple"; optarg="$2"; inc=2;;
(-aux-target-feature)  fullopt="$1"; canonopt="-aux-target-feature"; optarg="$2"; inc=2;;
(-aux-target-cpu)  fullopt="$1"; canonopt="-aux-target-cpu"; optarg="$2"; inc=2;;
(-ast-view)   fullopt="$1"; canonopt="-ast-view"; inc=1 ;;
(-ast-print)   fullopt="$1"; canonopt="-ast-print"; inc=1 ;;
(-ast-merge)  fullopt="$1"; canonopt="-ast-merge"; optarg="$2"; inc=2;;
(-ast-list)   fullopt="$1"; canonopt="-ast-list"; inc=1 ;;
(-ast-dump=*) fullopt="$1"; canonopt="-ast-dump"; optarg="$( echo "$1" | sed -E "s^-ast-dump=^^" )"; inc=1 ;;
(-ast-dump-lookups)   fullopt="$1"; canonopt="-ast-dump-lookups"; inc=1 ;;
(-ast-dump-filter)  fullopt="$1"; canonopt="-ast-dump-filter"; optarg="$2"; inc=2;;
(-ast-dump-decl-types)   fullopt="$1"; canonopt="-ast-dump-decl-types"; inc=1 ;;
(-ast-dump-all=*) fullopt="$1"; canonopt="-ast-dump-all"; optarg="$( echo "$1" | sed -E "s^-ast-dump-all=^^" )"; inc=1 ;;
(-ast-dump-all)   fullopt="$1"; canonopt="-ast-dump-all"; inc=1 ;;
(-ast-dump)   fullopt="$1"; canonopt="-ast-dump"; inc=1 ;;
(-arcmt-migrate-report-output)  fullopt="$1"; canonopt="-arcmt-migrate-report-output"; optarg="$2"; inc=2;;
(-arcmt-migrate-emit-errors)   fullopt="$1"; canonopt="-arcmt-migrate-emit-errors"; inc=1 ;;
(-arcmt-action=*) fullopt="$1"; canonopt="-arcmt-action"; optarg="$( echo "$1" | sed -E "s^-arcmt-action=^^" )"; inc=1 ;;
(-analyzer-werror)   fullopt="$1"; canonopt="-analyzer-werror"; inc=1 ;;
(-analyzer-viz-egraph-graphviz)   fullopt="$1"; canonopt="-analyzer-viz-egraph-graphviz"; inc=1 ;;
(-analyzer-store)  fullopt="$1"; canonopt="-analyzer-store"; optarg="$2"; inc=2;;
(-analyzer-stats)   fullopt="$1"; canonopt="-analyzer-stats"; inc=1 ;;
(-analyzer-purge)  fullopt="$1"; canonopt="-analyzer-purge"; optarg="$2"; inc=2;;
(-analyzer-output)  fullopt="$1"; canonopt="-analyzer-output"; optarg="$2"; inc=2;;
(-analyzer-opt-analyze-nested-blocks)   fullopt="$1"; canonopt="-analyzer-opt-analyze-nested-blocks"; inc=1 ;;
(-analyzer-opt-analyze-headers)   fullopt="$1"; canonopt="-analyzer-opt-analyze-headers"; inc=1 ;;
(-analyzer-max-loop)  fullopt="$1"; canonopt="-analyzer-max-loop"; optarg="$2"; inc=2;;
(-analyzer-list-enabled-checkers)   fullopt="$1"; canonopt="-analyzer-list-enabled-checkers"; inc=1 ;;
(-analyzer-inlining-mode)  fullopt="$1"; canonopt="-analyzer-inlining-mode"; optarg="$2"; inc=2;;
(-analyzer-inline-max-stack-depth)  fullopt="$1"; canonopt="-analyzer-inline-max-stack-depth"; optarg="$2"; inc=2;;
(-analyzer-dump-egraph)  fullopt="$1"; canonopt="-analyzer-dump-egraph"; optarg="$2"; inc=2;;
(-analyzer-display-progress)   fullopt="$1"; canonopt="-analyzer-display-progress"; inc=1 ;;
(-analyzer-disable-retry-exhausted)   fullopt="$1"; canonopt="-analyzer-disable-retry-exhausted"; inc=1 ;;
(-analyzer-disable-checker)  fullopt="$1"; canonopt="-analyzer-disable-checker"; optarg="$2"; inc=2;;
(-analyzer-disable-all-checks)   fullopt="$1"; canonopt="-analyzer-disable-all-checks"; inc=1 ;;
(-analyzer-constraints)  fullopt="$1"; canonopt="-analyzer-constraints"; optarg="$2"; inc=2;;
(-analyzer-config)  fullopt="$1"; canonopt="-analyzer-config"; optarg="$2"; inc=2;;
(-analyzer-config-help)   fullopt="$1"; canonopt="-analyzer-config-help"; inc=1 ;;
(-analyzer-config-compatibility-mode)  fullopt="$1"; canonopt="-analyzer-config-compatibility-mode"; optarg="$2"; inc=2;;
(-analyzer-checker)  fullopt="$1"; canonopt="-analyzer-checker"; optarg="$2"; inc=2;;
(-analyzer-checker-option-help-developer)   fullopt="$1"; canonopt="-analyzer-checker-option-help-developer"; inc=1 ;;
(-analyzer-checker-option-help-alpha)   fullopt="$1"; canonopt="-analyzer-checker-option-help-alpha"; inc=1 ;;
(-analyzer-checker-option-help)   fullopt="$1"; canonopt="-analyzer-checker-option-help"; inc=1 ;;
(-analyzer-checker-help-developer)   fullopt="$1"; canonopt="-analyzer-checker-help-developer"; inc=1 ;;
(-analyzer-checker-help-alpha)   fullopt="$1"; canonopt="-analyzer-checker-help-alpha"; inc=1 ;;
(-analyzer-checker-help)   fullopt="$1"; canonopt="-analyzer-checker-help"; inc=1 ;;
(-analyze-function)  fullopt="$1"; canonopt="-analyze-function"; optarg="$2"; inc=2;;
(-analyze)   fullopt="$1"; canonopt="-analyze"; inc=1 ;;
(-add-plugin)  fullopt="$1"; canonopt="-add-plugin"; optarg="$2"; inc=2;;
(-Xpreprocessor)  fullopt="$1"; canonopt="-Xpreprocessor"; optarg="$2"; inc=2;;
(-Xopenmp-target)  fullopt="$1"; canonopt="-Xopenmp-target"; optarg="$2"; inc=2;;
(-Xopenmp-target=*) fullopt="$1"; canonopt="-Xopenmp-target"; optarg="$( echo "$1" | sed -E "s^-Xopenmp-target=^^" )"; inc=1 ;;
(-Xlinker)  fullopt="$1"; canonopt="-Xlinker"; optarg="$2"; inc=2;;
(-Xcuda-ptxas)  fullopt="$1"; canonopt="-Xcuda-ptxas"; optarg="$2"; inc=2;;
(-Xcuda-fatbinary)  fullopt="$1"; canonopt="-Xcuda-fatbinary"; optarg="$2"; inc=2;;
(-Xclang)  fullopt="$1"; canonopt="-Xclang"; optarg="$2"; inc=2;;
(-Xassembler)  fullopt="$1"; canonopt="-Xassembler"; optarg="$2"; inc=2;;
(-Xarch_host)  fullopt="$1"; canonopt="-Xarch_host"; optarg="$2"; inc=2;;
(-Xarch_device)  fullopt="$1"; canonopt="-Xarch_device"; optarg="$2"; inc=2;;
(-Xanalyzer)  fullopt="$1"; canonopt="-Xanalyzer"; optarg="$2"; inc=2;;
(-Wundef-prefix=*) fullopt="$1"; canonopt="-Wundef-prefix"; optarg="$( echo "$1" | sed -E "s^-Wundef-prefix=^^" )"; inc=1 ;;
(-Wp,*) fullopt="$1"; canonopt="-Wp,"; optarg="$( echo "$1" | sed -E "s^-Wp,^^" )"; inc=1 ;;
(-Wno-rewrite-macros)   fullopt="$1"; canonopt="-Wno-rewrite-macros"; inc=1 ;;
(-Wl,*) fullopt="$1"; canonopt="-Wl,"; optarg="$( echo "$1" | sed -E "s^-Wl,^^" )"; inc=1 ;;
(-Wdeprecated)   fullopt="$1"; canonopt="-Wdeprecated"; inc=1 ;;
(-Wa,*) fullopt="$1"; canonopt="-Wa,"; optarg="$( echo "$1" | sed -E "s^-Wa,^^" )"; inc=1 ;;
(-W*) fullopt="$1"; canonopt="-W"; optarg="$( echo "$1" | sed -E "s^-W^^" )"; inc=1 ;;
(-U)  fullopt="$1"; canonopt="-U"; optarg="$2"; inc=2;;
(-Ttext)  fullopt="$1"; canonopt="-Ttext"; optarg="$2"; inc=2;;
(-Tdata)  fullopt="$1"; canonopt="-Tdata"; optarg="$2"; inc=2;;
(-Tbss)  fullopt="$1"; canonopt="-Tbss"; optarg="$2"; inc=2;;
(-T)  fullopt="$1"; canonopt="-T"; optarg="$2"; inc=2;;
(-S)   fullopt="$1"; canonopt="-S"; inc=1 ;;
(-Rpass=*) fullopt="$1"; canonopt="-Rpass"; optarg="$( echo "$1" | sed -E "s^-Rpass=^^" )"; inc=1 ;;
(-Rpass-missed=*) fullopt="$1"; canonopt="-Rpass-missed"; optarg="$( echo "$1" | sed -E "s^-Rpass-missed=^^" )"; inc=1 ;;
(-Rpass-analysis=*) fullopt="$1"; canonopt="-Rpass-analysis"; optarg="$( echo "$1" | sed -E "s^-Rpass-analysis=^^" )"; inc=1 ;;
(-R*) fullopt="$1"; canonopt="-R"; optarg="$( echo "$1" | sed -E "s^-R^^" )"; inc=1 ;;
(-Qy)   fullopt="$1"; canonopt="-Qy"; inc=1 ;;
(-Qunused-arguments)   fullopt="$1"; canonopt="-Qunused-arguments"; inc=1 ;;
(-Qn)   fullopt="$1"; canonopt="-Qn"; inc=1 ;;
(-P)   fullopt="$1"; canonopt="-P"; inc=1 ;;
(-ObjC++)   fullopt="$1"; canonopt="-ObjC++"; inc=1 ;;
(-ObjC)   fullopt="$1"; canonopt="-ObjC"; inc=1 ;;
(-MV)   fullopt="$1"; canonopt="-MV"; inc=1 ;;
(-MT)  fullopt="$1"; canonopt="-MT"; optarg="$2"; inc=2;;
(-MQ)  fullopt="$1"; canonopt="-MQ"; optarg="$2"; inc=2;;
(-MP)   fullopt="$1"; canonopt="-MP"; inc=1 ;;
(-MMD)   fullopt="$1"; canonopt="-MMD"; inc=1 ;;
(-MM)   fullopt="$1"; canonopt="-MM"; inc=1 ;;
(-MJ)  fullopt="$1"; canonopt="-MJ"; optarg="$2"; inc=2;;
(-MG)   fullopt="$1"; canonopt="-MG"; inc=1 ;;
(-MF)  fullopt="$1"; canonopt="-MF"; optarg="$2"; inc=2;;
(-MD)   fullopt="$1"; canonopt="-MD"; inc=1 ;;
(-M)   fullopt="$1"; canonopt="-M"; inc=1 ;;
(-L)  fullopt="$1"; canonopt="-L"; optarg="$2"; inc=2;;
(-I)  fullopt="$1"; canonopt="-I"; optarg="$2"; inc=2;;
(-I-)   fullopt="$1"; canonopt="-I-"; inc=1 ;;
(-H)   fullopt="$1"; canonopt="-H"; inc=1 ;;
(-G)  fullopt="$1"; canonopt="-G"; optarg="$2"; inc=2;;
(-F)  fullopt="$1"; canonopt="-F"; optarg="$2"; inc=2;;
(-Eonly)   fullopt="$1"; canonopt="-Eonly"; inc=1 ;;
(-E)   fullopt="$1"; canonopt="-E"; inc=1 ;;
(-D)  fullopt="$1"; canonopt="-D"; optarg="$2"; inc=2;;
(-CC)   fullopt="$1"; canonopt="-CC"; inc=1 ;;
(-C)   fullopt="$1"; canonopt="-C"; inc=1 ;;
(-B)  fullopt="$1"; canonopt="-B"; optarg="$2"; inc=2;;
(--version)   fullopt="$1"; canonopt="--version"; inc=1 ;;
(--verify-debug-info)   fullopt="$1"; canonopt="--verify-debug-info"; inc=1 ;;
(--target=*) fullopt="$1"; canonopt="--target"; optarg="$( echo "$1" | sed -E "s^--target=^^" )"; inc=1 ;;
(--system-header-prefix=*) fullopt="$1"; canonopt="--system-header-prefix"; optarg="$( echo "$1" | sed -E "s^--system-header-prefix=^^" )"; inc=1 ;;
(--show-includes)   fullopt="$1"; canonopt="--show-includes"; inc=1 ;;
(--rocm-path=*) fullopt="$1"; canonopt="--rocm-path"; optarg="$( echo "$1" | sed -E "s^--rocm-path=^^" )"; inc=1 ;;
(--rocm-device-lib-path=*) fullopt="$1"; canonopt="--rocm-device-lib-path"; optarg="$( echo "$1" | sed -E "s^--rocm-device-lib-path=^^" )"; inc=1 ;;
(--ptxas-path=*) fullopt="$1"; canonopt="--ptxas-path"; optarg="$( echo "$1" | sed -E "s^--ptxas-path=^^" )"; inc=1 ;;
(--precompile)   fullopt="$1"; canonopt="--precompile"; inc=1 ;;
(--offload-arch=*) fullopt="$1"; canonopt="--offload-arch"; optarg="$( echo "$1" | sed -E "s^--offload-arch=^^" )"; inc=1 ;;
(--no-system-header-prefix=*) fullopt="$1"; canonopt="--no-system-header-prefix"; optarg="$( echo "$1" | sed -E "s^--no-system-header-prefix=^^" )"; inc=1 ;;
(--no-offload-arch=*) fullopt="$1"; canonopt="--no-offload-arch"; optarg="$( echo "$1" | sed -E "s^--no-offload-arch=^^" )"; inc=1 ;;
(--no-gpu-bundle-output)   fullopt="$1"; canonopt="--no-gpu-bundle-output"; inc=1 ;;
(--no-cuda-version-check)   fullopt="$1"; canonopt="--no-cuda-version-check"; inc=1 ;;
(--no-cuda-include-ptx=*) fullopt="$1"; canonopt="--no-cuda-include-ptx"; optarg="$( echo "$1" | sed -E "s^--no-cuda-include-ptx=^^" )"; inc=1 ;;
(--mrelax-relocations)   fullopt="$1"; canonopt="--mrelax-relocations"; inc=1 ;;
(--migrate)   fullopt="$1"; canonopt="--migrate"; inc=1 ;;
(--linker-option=*) fullopt="$1"; canonopt="--linker-option"; optarg="$( echo "$1" | sed -E "s^--linker-option=^^" )"; inc=1 ;;
(--libomptarget-nvptx-bc-path=*) fullopt="$1"; canonopt="--libomptarget-nvptx-bc-path"; optarg="$( echo "$1" | sed -E "s^--libomptarget-nvptx-bc-path=^^" )"; inc=1 ;;
(--libomptarget-amdgcn-bc-path=*) fullopt="$1"; canonopt="--libomptarget-amdgcn-bc-path"; optarg="$( echo "$1" | sed -E "s^--libomptarget-amdgcn-bc-path=^^" )"; inc=1 ;;
(--hip-version=*) fullopt="$1"; canonopt="--hip-version"; optarg="$( echo "$1" | sed -E "s^--hip-version=^^" )"; inc=1 ;;
(--hip-path=*) fullopt="$1"; canonopt="--hip-path"; optarg="$( echo "$1" | sed -E "s^--hip-path=^^" )"; inc=1 ;;
(--hip-link)   fullopt="$1"; canonopt="--hip-link"; inc=1 ;;
(--hip-device-lib=*) fullopt="$1"; canonopt="--hip-device-lib"; optarg="$( echo "$1" | sed -E "s^--hip-device-lib=^^" )"; inc=1 ;;
(--help-hidden)   fullopt="$1"; canonopt="--help-hidden"; inc=1 ;;
(--gpu-max-threads-per-block=*) fullopt="$1"; canonopt="--gpu-max-threads-per-block"; optarg="$( echo "$1" | sed -E "s^--gpu-max-threads-per-block=^^" )"; inc=1 ;;
(--gpu-instrument-lib=*) fullopt="$1"; canonopt="--gpu-instrument-lib"; optarg="$( echo "$1" | sed -E "s^--gpu-instrument-lib=^^" )"; inc=1 ;;
(--gpu-bundle-output)   fullopt="$1"; canonopt="--gpu-bundle-output"; inc=1 ;;
(--gcc-toolchain=*) fullopt="$1"; canonopt="--gcc-toolchain"; optarg="$( echo "$1" | sed -E "s^--gcc-toolchain=^^" )"; inc=1 ;;
(--emit-static-lib)   fullopt="$1"; canonopt="--emit-static-lib"; inc=1 ;;
(--dependent-lib=*) fullopt="$1"; canonopt="--dependent-lib"; optarg="$( echo "$1" | sed -E "s^--dependent-lib=^^" )"; inc=1 ;;
(--cuda-path=*) fullopt="$1"; canonopt="--cuda-path"; optarg="$( echo "$1" | sed -E "s^--cuda-path=^^" )"; inc=1 ;;
(--cuda-path-ignore-env)   fullopt="$1"; canonopt="--cuda-path-ignore-env"; inc=1 ;;
(--cuda-noopt-device-debug)   fullopt="$1"; canonopt="--cuda-noopt-device-debug"; inc=1 ;;
(--cuda-include-ptx=*) fullopt="$1"; canonopt="--cuda-include-ptx"; optarg="$( echo "$1" | sed -E "s^--cuda-include-ptx=^^" )"; inc=1 ;;
(--cuda-host-only)   fullopt="$1"; canonopt="--cuda-host-only"; inc=1 ;;
(--cuda-device-only)   fullopt="$1"; canonopt="--cuda-device-only"; inc=1 ;;
(--cuda-compile-host-device)   fullopt="$1"; canonopt="--cuda-compile-host-device"; inc=1 ;;
(--config)  fullopt="$1"; canonopt="--config"; optarg="$2"; inc=2;;
(--analyzer-output)  fullopt="$1"; canonopt="--analyzer-output"; optarg="$2"; inc=2;;
(--analyze)   fullopt="$1"; canonopt="--analyze"; inc=1 ;;
(--amdgpu-arch-tool=*) fullopt="$1"; canonopt="--amdgpu-arch-tool"; optarg="$( echo "$1" | sed -E "s^--amdgpu-arch-tool=^^" )"; inc=1 ;;
(-###)   fullopt="$1"; canonopt="-###"; inc=1 ;;
# END GENERATED FROM clang_optlines | optlines_to_caselines
esac
}
scan_clang () {
    local clang="$1"
    shift
    scan_generic clang_optcases clang "${clang:-clang}" "" "$@"
}
# we want it to be possible to write wrappers
# as shell functions, not just commands.
do_exec () {
    debug_print 1 "Doing: $@"
#    exec "$@"
    "$@"
    status=$?
    exit $status
}

# utility for as-wrappers
parse_assembler_command () {
    debug_print 1 "My as: $@" 1>&2
    as="$1"
    shift
    declare -ga as_args
    declare -ga as_infiles
    for a in `seq 1 $#`; do
        as_args[$ctr]="${!a}"
        ctr=$(( $ctr + 1 ))
    done
    declare -ga as_options
    ctr=0
    while expr match "$1" '^-.*' >/dev/null; do
        as_options[$ctr]="$1"
        ctr=$(( $ctr + 1 ))
        case "$1" in
            ('--')  # no more args
                shift; break
            ;;
            # options taking a non-option-looking argument
            ('-o')
                as_outfile="$2"
            ;;&
            (--debug-prefix-map|-I|--MD|-o)
                as_options[$ctr]="$2"
                ctr=$(( $ctr + 1 ))
                shift
            ;;
            (-*)
                # some other option
            ;;
            (*) # error!
                debug_print 1 "Unrecognised 'as' option: $1" 1>&2
                false
            ;;
        esac
        shift || break
    done
    debug_print 1 "as args left over ($#): $@" 1>&2
    ctr=0
    for a in `seq 1 $#`; do
        as_infiles[$ctr]="${!a}"
        ctr=$(( $ctr + 1 ))
    done
}

list_fulloptposns () {
    output=""
    local prefix="$1"
    shift
    declare -n optposns_by_fullopt=${prefix}_optposns_by_fullopt
    initargs="$@"
    for n in `seq 1 $#`; do
        arg="${!n}"
        debug_print 3 "O ($prefix) considering $arg (${!optposns_by_fullopt[*]})" 1>&2
        if [[ -v optposns_by_fullopt[$arg] ]]; then
            output="${output:+${output},}$(echo "${optposns_by_fullopt[$arg]}" | tr -s '[:blank:]' ',' )"
        fi
    done
    debug_print 2 "fulloptposns ($prefix) for ${initargs}: $output" 1>&2
    echo "$output"
}
list_optposns () {
    output=""
    local prefix="$1"
    shift
    declare -n optposns_by_canonopt=${prefix}_optposns_by_canonopt
    initargs="$@"
    for n in `seq 1 $#`; do
        arg="${!n}"
        debug_print 3 "O ($prefix) considering $arg (${!optposns_by_canonopt[*]})" 1>&2
        if [[ -v optposns_by_canonopt[$arg] ]]; then
            output="${output:+${output},}$(echo "${optposns_by_canonopt[$arg]}" | tr -s '[:blank:]' ',' )"
        fi
    done
    debug_print 2 "optposns ($prefix) for ${initargs}: $output" 1>&2
    echo "$output"
}
list_optargposns () {
    output=""
    local prefix="$1"
    shift
    declare -n optargposns_by_canonopt=${prefix}_optargposns_by_canonopt
    initargs="$@"
    for n in `seq 1 $#`; do
        arg="${!n}"
        debug_print 3 "A ($prefix) considering $arg (${!opgtargposns_by_canonopt[*]})" 1>&2
        if [[ -v optargposns_by_canonopt[$arg] ]]; then
            output="${output:+${output},}$(echo "${optargposns_by_canonopt[$arg]}" | tr -s '[:blank:]' ','  )"
        fi
    done
    debug_print 2 "argposns ($prefix) for ${initargs}: $output" 1>&2
    echo "$output"
}
get_optposn_unique () {
    local prefix="$1"
    shift
    local posnlist="$(list_optposns "$prefix" "$@")"
    declare -n args=${prefix}_args
    case "$posnlist" in
        ('') # OK, we get nothing
        ;;
        (*,*) # not OK
            echo "Error: option {$@} does not appear uniquely" 1>&2
            exit 1
        ;;
        (*) # OK, we get something unique
            echo "${args[$posnlist]}"
        ;;
    esac
}
get_optargposn_unique () {
    local prefix="$1"
    shift
    local posnlist="$(list_optargposns "$prefix" "$@")"
    declare -n args=${prefix}_args
    case "$posnlist" in
        ('') # OK, we get nothing
        ;;
        (*,*) # not OK
            echo "Error: option {$@} does not appear (with an argument) uniquely" 1>&2
            exit 1
        ;;
        (*) # OK, we get something unique
            echo "${args[$posnlist]}"
        ;;
    esac
}
get_optposn_greatest () {
    local prefix="$1"
    shift
    list_optposns "$prefix" "$@" | tr ',' '\n' | sort -rn | head -n1
}
get_optargposn_greatest () {
    local prefix="$1"
    shift
    list_optargposns "$prefix" "$@" | tr ',' '\n' | sort -rn | head -n1
}
# This logic should work the same for gcc/cc1 and clang.
command_is_pp () {
    local prefix="$1"
    shift
    declare -n optposns_by_canonopt=${prefix}_optposns_by_canonopt
    # we're pp iff we saw -E  and we are not suppressing pp output via -M or -MM
    case "$(list_optposns "$prefix" "-M" "-MM")" in
        ('') local doing_m=0 ;;
        (*)  local doing_m=1 ;;
    esac
    case "${optposns_by_canonopt["-E"]}" in
        ('') return 1 # not pp
        ;;
        (*) # looks like it is pp, but are we suppressing preprocessor output?
            if [[ $doing_m -eq 1 ]]; then
                return 1 # not pp, because we do not generate any preprocessor output
            else
                return 0 # is pp
            fi
        ;;
    esac
}

# How do we walk the arguments we scanned and simply repeat them?
# FIXME: write a generic walker/rescanner
# ... maybe something like:
# visit_opts
# visit_input_files
noop_cc1 () {
    # The basic idea is to walk over the non-optarg indices.
    # "canonopt" isn't necessarily a form that will work if we use it
    # as an option, so we want to output the args as they really came in.
    argposn=1
    echo "gcc_cc1_argcount is $gcc_cc1_argcount" 1>&2
    while [[ $argposn -lt $gcc_cc1_argcount ]]; do
        echo -n "${argposn}: ${gcc_cc1_args[$argposn]}"
        inc=${gcc_cc1_incs_by_argposn[$argposn]:-1}
        for n in `seq $(( $argposn + 1 )) $(( $argposn + $inc - 1 ))`; do
            echo -n " "
            echo -n "${gcc_cc1_args[$n]}"
        done
        echo -n " ("
        echo -n "inc is $inc; "
        if [[ -n "${gcc_cc1_input_files_by_argposn[$argposn]}" ]]; then
            echo -n "input file"
        else
            echo -n "option, canonically \`${gcc_cc1_canonopts_by_argposn[$argposn]}'"
            if [[ $inc -eq 1 ]]; then
                # we scraped the optarg, if there was one
                local maybe_optarg="${gcc_cc1_optargs_by_argposn[$argposn]}"
                if [[ -n "$maybe_optarg" ]]; then
                    echo -n ", joined argument \`$maybe_optarg'"
                fi
            fi
        fi
        echo ")"
        argposn=$(( $argposn + $inc ))
    done
}

# Like gcc_cc1_optcases, but we also accept additional options specified via
# the environment variable CC_IDENTIFY_ARGS.
# Note that this variable fulfils two functions: it defines extra option arguments
# which we scan here (using our "optline" JARG/SARG syntax)
# and it specifies which options the inferior tool would like us to scan
# for it. This is a bit of an abuse. In particular, if the tool wants us to
# scan something, say "-I", then we will generate a completely redundant "-I"
# case here. The goal of specifying it is so that we will set CC_IDENTIFIED_ARGS
# giving the argument positions where it appears.
# A valid word in CC_IDENTIFY_ARGS might not begin with '-'; if it doesn't,
# it is considered to stand for input files. We filter these out here.

identified_optlines () {
    for w in $CC_IDENTIFY_ARGS; do
        case $w in
            (-*) echo $w ;;
        esac
    done
}

gcc_cc1_optcases_plus_tool_optcases () {
    inc=0
    gcc_driver_optcases "$@"
    if [[ $inc -eq 0 ]] && [[ -n "$CC_IDENTIFY_ARGS" ]]; then
        # For each word that is an optline, write an optline.
        # If it doesn't begin with '-' assume it denotes an input file.
        # HMM. This feels wrong. Why do we want infile_caseline here?
        # scan_generic is what does the infile handling.
        
        local infile_caseline="(*) input_files_by_argposn[\$realposn]=\"\$1\"; inc=1 ;;"
        #eval "case \"\$1\" in `for w in $CC_IDENTIFY_ARGS; do case $w in (-*) echo $w | optlines_to_caselines ;; (*) echo $infile_caseline ;; esac; done` esac"
        eval "case \"\$1\" in `identified_optlines | optlines_to_caselines` esac"
    fi
}

lift_gcc_cc1_to_cc () {
    # FIXME: reinstate the special handling of -Os with -Werror with -D_FORTIFY_SOURCE
    # FIXME: clang version
    
    # Firstly we handle the pp options if we have them. We will use this
    # to lift up any pp-qualified opts with -Xpreprocessor, but only if their
    # pp-qualified appearance count matches their cc1 appearance count.
    # Otherwise we might be mistaking a non-pp-directed arg (e.g. a filename)
    # for a pp-directed arg, e.g.   cc -Wp,-blah -blah -o -blah
    # ... our cc1 will see         cc1     -blah -blah -o -blah
    # and although the final '-blah' is safe, we will not know which of the other
    # two to lift.
    local is_pp="$1"  # 1 if is_pp, 0 otherwise
    shift
    prefix="cc_pp" eval "$declare_scan_outputs"
    declare -a ppargs
    scan_driver_pp $CC_DRIVER $CC_DRIVER_ARGS
    debug_print 1 "Got ppargs: ${ppargs[@]}" 1>&2
    debug_print 1 "Got cc_pp_args: ${cc_pp_args[@]}" 1>&2
    debug_print 1 "Got pparg_posns: ${pparg_posns[@]}" 1>&2

    # What now?
    # Scan the now-split-out ppargs as if they were cc1 args, and compare to
    # our actual cc1 args. Only do this if we got any ppargs, otherwise it's
    # pointless and will cause an empty filename error.
    prefix="pp_as_cc1" eval "$declare_scan_outputs"
    if [[ $pparg_ctr -gt 1 ]]; then
        scan_generic gcc_cc1_optcases_plus_tool_optcases pp_as_cc1 \
           "${cc1:-cc1}" "" "${ppargs[@]}"
    fi
    
    # We will assume any pparg whose appearance count matches across these two scans
    # should be -Xpreprocessor-qualified, i.e. does not pass through the driver as-is.
    
    # Now we can walk the args using the incs we collected, and write 'outargs'
    # which is our lifted set of args for the driver.
    # We know we have to:
    # - rewrite -MD into -MD -MF
    #     -- can cc1 take -MD _ -MF _? yes, but the later overrides the earlier
    #     -- so we rewrite to -MD -MF <later-given filename>
    # - drop anything not driver-friendly (by patterns)
    # - if we're pp, put "-Xpreprocessor" before anything we saw in the driver args
    #     that was -Wp- or -Xpreprocessor-qualified
    #     if we're sure this is the same arg.
    #        NOTE that in the case of -Wp,arg1,arg2, we need to put -Xpreprocessor before
    #        both arg1 and arg2.
    outctr=1  # we start at position 1
    md_argind="$(get_optargposn_greatest "gcc_cc1" "-MD" "-MMD")"
    mf_argind="$(get_optargposn_greatest "gcc_cc1" "-MF" )"
    # echo "md, mf arginds: $md_argind, $mf_argind" 1>&2
    local inposn=1
    local suppress_arg=0
    debug_print 2 "gcc_cc1_argcount is $gcc_cc1_argcount" 1>&2
    # We use this shell function to do the output.
    # It takes care of prefixing with -Xpreprocessor and also
    # appending the outctr to CC_IDENTIFIED_ARGS if needed.
    # Note that it does not advance inposn.
    output_one () {
        local arg="$1"
        local arg_prefix="$2"
        local originating_optstring=""
        case "$arg_prefix" in
            (?*)
                outargs[$outctr]="$arg_prefix"
                outctr=$(( $outctr + 1 ))
            ;;&
            (*)
                outargs[$outctr]="$arg"
                outctr=$(( $outctr + 1 ))
            ;;
        esac
    }
    # last_ ...? something to do with identified args
    case_stmt="case \"\$1\" in `identified_optlines | optlines_to_caselines` esac"
    while [[ $inposn -le ${gcc_cc1_argcount} ]]; do
        arg="${gcc_cc1_args[$inposn]}"
        # Is this arg one of the "identified" args?
        # That means our inferior tool (say cilpp) wants us to tell it
        # where in the command line it is, to save it from scanning for it.
        # Since they were identified by an optstring (in CC_IDENTIFY_ARGS),
        # we need to match the arg against the optstring.
        inc=0; fullopt=""; canonopt="";
        eval "$case_stmt"
        # For now we remember the number of input arguments in this position
        # that match an identified param; 0 means it's not identified.
        # We will process
        n_identified="$inc"
        if [[ $n_identified -gt 0 ]]; then
            fullopt_identified="$fullopt"
            canonopt_identified="$canonopt"
        fi
        
        # If we have -MD,
        # and if this is -MF, or if it's -MD or -MMD but not the greatest md argind,
        # skip it and its argument
        # Else if it's -MD or -MMD, include it and also a -MF
        # (slurped using the greatest argind of *either* md *or* mf argind)
        #
        # Beware: e.g. from GNU hello:
        # gcc .. -MD -MF lib/.deps/basename-lgpl.Tpo
        # v
        # cc1 -MD lib/basename-lgpl.d -MF lib/.deps/basename-lgpl.Tpo
        # v
        # gcc -MD -MF lib/basename-lgpl.d
        # i.e. our explicit -MF argument needs to win if it comes later in the command.
        if [[ -n "$md_argind" ]]; then
            # We have an explicit -MD, so we will generate an -MF; skip this explicit -MF
            # but we will retrieve its argument if it wins over (appears later than) -MD
            if [[ "$arg" == "-MF" ]]; then
                # skip it and its argument
                inposn=$(( $inposn + 2 ))
                continue
            fi
            if [[ "$arg" == "-MD" ]] || [[ "$arg" == "-MMD" ]] && [[ $inposn -lt $md_argind ]]; then
                # skip it and its argument
                inposn=$(( $inposn + 2 ))
                continue
            fi
            if [[ "$arg" == "-MD" ]] || [[ "$arg" == "-MMD" ]]; then
                # FIXME: if -MD or -MMD or -MF are "identified" args, this needs reflecting
                # here.
                output_one "$arg"
                output_one "-MF"
                # What's the real -MF argument? If it comes later, it wins.
                if [[ $inposn -lt ${mf_argind:-0} ]]; then
                    # the explicit -MF should win
                    mf_arg="${gcc_cc1_args[$(( ${mf_argind} + 1 ))]}"
                else
                    mf_arg="${gcc_cc1_args[$(($inposn + 1))]}"
                fi
                output_one "$mf_arg"
                inposn=$(( $inposn + 2 ))
                continue
            fi
        fi
        # how many will we inc by?
        inc=${gcc_cc1_incs_by_argposn[$inposn]:-1}
        # do the output, unless we are skipping
        case "$arg" in
            (-imultiarch|-iremap*|-auxbase|-auxbase-strip|-quiet|-fhonour-copts)
                # NASTY. These are options which we know don't directly lift up to driver
                # options, i.e. the driver rejects them. We could just drop them... not good!
                # Maybe we could try to pass them through with -Wp,xxx?
                # That would only affect preprocessing.
                # (If there were a -Wc,xxx equivalent, we could put them there too.
                # We can't create such an option because the driver would reject *it*.
                # We *could* use an environment variable, containing options that we
                # are to add back when creating the "proper" no-pp cc1 invocation.
                # But we ourselves never make such a cc1 invocation! We just do $CC -S,
                # i.e. we run the driver and remove ourselves from the loop (i.e. omit to
                # re-pass '-wrapper'). We could in extremis instead create a trivial wrapper
                # that exists *just* to add these options back in. Our default cc -S could be
                # something like "$CC -wrapper /path/to/mini-wrapper -S ${CC1_ADDBACK}".
                # This is ugly; I won't do this until/unless a need is identified.
                # It could be used to check that when the driver re-lowers to cc1 we get
                # a compatible set of cc1 options as the one we lifted. FIXME: do this!
                # It's possibly a good check. For now, put these back just for preprocessing.
                if [[ $is_pp -eq 1 ]]; then
                    arg_prefix="-Xpreprocessor"
                else
                    # We'd use -Xcompiler, but it doesn't exist.
                    # We could delete the arg, but 'continue' would be wrong here
                    # because our increment happens at the end of the loop body.
                    suppress_arg=1
                fi
            ;;
            (*)
                # This is any other arg.
                # It might still need -Xpreprocessor if it came in to the driver with
                # -Wp or -Xpreprocessor itself.
                # Nasty-ish case: we could write "-Dd -Wp,-Dd"
                # and we'd get two -Dds in the cc1, but would not know which to prefix.
                # (It's harmless not to prefix, of course, but we can't know this.)
                # Nastier case: cpp takes a SARG that looks like an opt
                # cc:   -Wp,-real-cpp,-blah -Wp,-blah
                # cc1:  -real-cpp -blah -blah
                # ... we would have to know to ignore the first "-blah" as it's a driver
                # optarg -- but it's not a driver optarg!
                # Hence the test: "its pp count matches its cc1 count"
                # Remember that our wrapper-substituted cpp (say) might accept arguments
                # specific to itself, e.g. -real-cpp.
                count_as_pp_opt="$( list_fulloptposns "pp_as_cc1" "$arg" | tr ',' '\n' | sed '/^$/ d' | wc -l )"
                # FIXME: don't just grep for the arg -- regex-escape it first
                count_as_pp_infile="$( echo ${pp_as_cc1_input_files_by_argposn[*]} | \
                   grep "^$arg\$" | wc -l )"
                count_as_cc1_opt="$( list_fulloptposns "gcc_cc1" "$arg" | tr ',' '\n'  | sed '/^$/ d' | wc -l )"
                count_as_cc1_infile="$( echo ${gcc_cc1_input_files_by_argposn[*]} | \
                   grep "^$arg\$" | wc -l )"
                # Counting would be foiled by canonicalisation,
                # so we are counting the "fullopt" positions.
                # This works because the options really are passed through
                # verbatim, so we expect a fullopt match.
                debug_print 3 "Counts for $arg: $count_as_pp_opt $count_as_pp_infile $count_as_cc1_opt "\
                    "$count_as_cc1_infile" 1>&2
                if [[ $count_as_pp_opt -eq $count_as_cc1_opt ]] && \
                   [[ $count_as_pp_opt -gt 0 ]]; then
                    arg_prefix="-Xpreprocessor"
                elif [[ $count_as_pp_infile -eq $count_as_cc1_infile ]] && \
                   [[ $count_as_pp_infile -gt 0 ]]; then
                    arg_prefix="-Xpreprocessor"
                else
                    arg_prefix=""
                fi
            ;;
        esac
        if [[ $suppress_arg -eq 0 ]]; then
            if [[ $n_identified -gt 0 ]]; then
                # This means it matched a caseline, so let's update CC_IDENTIFIED_ARGS
                if [[ -n "$arg_prefix" ]]; then
                    # Use 'seq' with its FIRST INCREMENT LAST form
                    seq="$( seq $outctr 2 $(( $outctr + ( 2 * $inc ) - 1 )) )"
                else
                    seq="$( seq $outctr $(( $outctr + $inc - 1 )) )"
                fi
                local tok="$( echo "$seq" | tr -s '[:blank:]' ',')$1"
                # Remember that our indices need to come from the output space.
                # Also I think we don't support identifying -MD or -MF, since we
                # rewrote these above.
                # We could modify output_one to build the comma-separated part of the
                # "identified" token as it goes.
                CC_IDENTIFIED_ARGS="${CC_IDENTIFIED_ARGS:+${CC_IDENTIFIED_ARGS} }$tok"
            fi
            # output the arg itself
            output_one "$arg" "$arg_prefix"
            # this will output zero or more additional args, also prefixed if necessary
            for n in `seq $(( $inposn + 1 )) $(( $inposn + $inc - 1 ))`; do
                output_one "${gcc_cc1_args[$n]}" "$arg_prefix"
            done
        fi
        suppress_arg=0
        inposn=$(( $inposn + $inc ))
    done
    export CC_IDENTIFIED_ARGS
}
detraditionalize_clang_if_needed () {
    outctr=1  # we start at position 1
    traditional_cpp_argind="$(get_optposn_greatest "clang" "-traditional-cpp" "--traditional-cpp")"
    local inposn=1
    while [[ $inposn -le ${clang_argcount} ]]; do
        arg="${clang_args[$inposn]}"
        # If we have -MD,
        # and if this is -MF, or if it's -MD or -MMD but not the greatest md argind,
        # skip it and its argument
        # Else if it's -MD or -MMD, include it and also a -MF (slurped using the greatest argind
        # of *either* md *or* mf argind)
        # FIXME: handle case where some of {-traditional-cpp, --traditional-cpp} are
        # passed multiple times (i.e. don't just do a single -eq test)
        if [[ -n "$traditional_cpp_argind" ]] && [[ -n "$CPP_NOT_TRADITIONAL" ]] \
        && [[ $inposn -eq $traditional_cpp_argind ]]; then
            # skip it
            inposn=$(( $inposn + 1 ))
            continue
        fi
        if [[ -n "$CPP_NOT_TRADITIONAL"  ]]; then
            case "$arg" in
                (-traditional-cpp|--traditional-cpp) echo "ERROR! not traditionally traditional (argind: $traditional_cpp_argind)" 1>&2
                    exit 1
                ;;
                (*)
                ;;
            esac
        fi
        # how many will we inc by?
        inc=${gcc_cc1_incs_by_argposn[$inposn]:-1}

        outargs[$outctr]="$arg"; outctr=$(( $outctr + 1 ))
        # output any separate arg
        for n in `seq $(( $inposn + 1 )) $(( $inposn + $inc - 1 ))`; do
            outargs[$outctr]="${clang_args[$n]}"; outctr=$(( $outctr + 1 ))
        done

        inposn=$(( $inposn + $inc ))
    done
}

case "$0" in
    (*cflags|*cppflags|*cxxflags)
        /bin/echo -no-integrated-cpp -wrapper "$(readlink -f "$(dirname "$0")")"/wrapper
        exit 0
    ;;
    (*ldflags)
        /bin/echo -wrapper "$(readlink -f "$(dirname "$0")")"/wrapper
        exit 0
    ;;
    (*wrapper) # silently continue, i.e. actually act as a "-wrapper wrapper" command
        # If we're run via -wrapper, we can guess the driver from the parent process.
        # This screws with testing, e.g. a workflow where the human uses -### and then
        # tries to run the wrapper commands directly. In that case, the human must
        # set CC_DRIVER and this function will never be called. We have a failsafe
        # against being run from a shell, just in case. But guessing a plausible
        # driver command is hard, because something as simple as "cc file.c" is a
        # valid driver command.
        #driver="$( ps -p $PPID -o comm= )"
        if [[ -z "$CC_DRIVER" ]]; then
            #driver_fullcmd="$( ps -p $PPID -o cmd= )"
            driver_fullcmd="$( cat /proc/$PPID/cmdline | tr '\0' '\n' )"
            if looks_like_driver_command $driver_fullcmd ; then
                read driver rest<<<"$driver_fullcmd"
                debug_print 1 "driver binary might be $driver" 1>&2
                CC_DRIVER="$driver"
                CC_DRIVER_ARGS="$( quote_args "$rest" )"
            else
                # What's a sanity check we can do on the parent process? For now just rule out the stupids...
                # another approach might be to look at the whole parent command line and
                # test whether it's a plausible compiler command, and insist on CC_DRIVER if
                # we don't think it is plausible.
                # One test would be whether it has "-wrapper" in it!
                echo "Bailing as could not guess driver (parent command: $driver_fullcmd)" 1>&2
                exit 1
            fi
        fi
        export CC_DRIVER
        export CC_DRIVER_ARGS
        if [[ -z "$CC_DRIVER_ARGS" ]]; then
            echo "Warning: without CC_DRIVER_ARGS, cannot rewrite e.g. cpp-specific option -foo to -Wp,-foo (for driver)" 1>&2
        fi
        # NOW WE continue with the script, after 'esac'; this is the only case that does so.
    ;;
    (*wrap) # assume the next argument is a driver command, and use -### to interrogate it,
            # i.e. act as a "ccwrap" commad in "ccwrap cc ..." ...
            # To do this we call ourselves as a wrapper
        CC_DRIVER="$1"
        export CC_DRIVER
        declare -a real_args
        ctr=0
        just_output=0
        already_traditional=0
        already_no_integrated_as=0
        already_no_integrated_cc1=0
        while shift; do
            case "$1" in
                ('') ;;
                # FIXME: this is not properly scanning the command line... run our driver
                # scanner, then sift the results.
                ('-fno-integrated-as'|'-no-integrated-as') already_no_integrated_as=1;;&
                ('-fno-integrated-cc1'|'-no-integrated-cc1') already_no_integrated_cc1=1;;&
                ('-traditional-cpp'|'--traditional-cpp') already_traditional=1 ;;&
                ('-###') just_output=1 ;;&
                (*)
                    real_args[$ctr]="$1"
                ;;
            esac
            ctr=$(( $ctr + 1 ))
        done
        CC_DRIVER_ARGS="$( quote_args "${real_args[@]}" )"
        export CC_DRIVER_ARGS
        # We will add '-traditional-cpp' to force a separate preprocessing command...
        # only do this if it's not already present. Remember if we added it.
        if [[ $already_traditional -eq 0 ]]; then
            traditional_arg="-traditional-cpp"
            export CPP_NOT_TRADITIONAL=1
        else traditional_arg=""
        fi
        # Unlike the traditional-cpp thing, we don't have to undo -fno-integrated-as
        # later, because (at least in principle, FIXME) it does't change the semantics
        # of the command.
        if [[ $already_no_integrated_as -eq 0 ]]; then
            as_arg="-fno-integrated-as"
        fi
        # Ditto
        if [[ $already_no_integrated_cc1 -eq 0 ]]; then
            cc1_arg="-fno-integrated-cc1"
        fi
        # Now we need to implement "-wrapper" ourselves, in effect, given a driver $driver
        # that does not support "-wrapper" but does support "-###".
        # What we do next depends on whether "-###" appears in the command already.
        # If it does, we output the command we *would* run.
        # If it doesn't, we actually run them.
        output_stderr="$( ${CC_DRIVER} -\#\#\# $traditional_arg $as_arg $cc1_arg "${real_args[@]}" 2>&1 1>&2 )"
        status=$?
        # Every legit command should begin with a space and contain a double quote
        # or a single quote or '-o'
        cmdline_filter="^ .*\([\"']\|-o\)"
        debug_print 1 "Got -### status $status and output: $output_stderr" 1>&2
        # Did our command actually trigger the "-###" behaviour?
        # If so, we should get at least one line matching "$cmdline_filter"
        # and also a 'Target:' and a 'Thread model:' line. If we don't get these,
        # we assume the compiler did nothing but print some informative output, so
        # we echo that and repeat its return status.
        { grep "$cmdline_filter" <<<"$output_stderr" >/dev/null && \
           grep "^Target:" <<<"$output_stderr" >/dev/null && \
           grep "^Thread model:" <<<"$output_stderr" >/dev/null; } || \
           { echo "Wrapper-degenerated $0" 1>&2; echo "$output_stderr" 1>&2; exit $status; }
        # What if we got that output because the -### was already in the command line?
        # Then we still need to wrap -- we need to output the wrapped command.
        # What's our "wrapper" self? Look for an alias of ourselves, in the
        # containing directory, whose name matches "*wrapper"
        our_realpath="$(readlink -f "$0")" #"
        ourselves_as_wrapper="$( ls "$(dirname "$our_realpath")"/*wrapper | while read cand; do
            if [[ "$(realpath "$cand")" == "$our_realpath" ]]; then
                echo "$cand"; break
            fi
        done )"
        if [[ -z "$ourselves_as_wrapper" ]]; then
            echo "Could not identify wrapper alias for $0" 1>&2
            exit 1
        else
            debug_print 1 "Identified ourselves as wrapper: $ourselves_as_wrapper" 1>&2
        fi
        status=0
        while read cmdline; do
            if [[ $just_output -eq 1 ]]; then
                echo "$ourselves_as_wrapper" $cmdline 1>&2
                status=0
            else
                debug_print 1 "REALLY DOING (driver: $CC_DRIVER): " "$ourselves_as_wrapper" \
                   "$cmdline" 1>&2  
                "$ourselves_as_wrapper" $( eval echo $cmdline ) # cmdline is quoted
                status=$?
                debug_print 1 "Got status $status"
            fi
            if ! [[ $status -eq 0 ]]; then exit $status; fi
        done <<<"$( echo "$output_stderr" | grep "$cmdline_filter" )"
        exit $status
    ;;
    (real-ld)
        # A neat trick for wrapping ld within collect2... see below.
        # FIXME: snarf our default 'ld' the same way collect2 does it,
        # since this 'real-ld' thing is specific to collect2.
        ${LD:-ld} "$@"
        status=$?
        exit $status
    ;;
    (*) # we're being run as another command -- just being sourced?
        return >/dev/null 2>&1 || { echo "Did not understand our own name: $0" 1>&2; exit 1; }
    ;;
esac

# In general, we want to run the command that the driver is running.
# To hook preprocessing, although we could wrap the GCC-private
# cc1/cc1plus command, we'd rather wrap the well-documented "cpp"
# command or the driver "cc -E". So we transform a preprocessing
# cc1/cc1plus call's args into args that work for a cpp call.
#
# We need to be able to scan a cc1 command correctly. However, it's
# partly up to the user what arguments the preprocessor accepts. For
# example, we have our own 'cilpp' preprocessor that also accepts
# -fplugin=... and -fpass-* options. If we use these with GCC, what
# happens? Do they get passed to the cc1 command? Yes, they do...
# even if it is also doing compilation proper. So with our wrapper,
# in the cilpp use case, we are simultaneously:
# - telling the driver to add some args [that are not known to the command
#     the driver wants to run]
# - wrapping the command run by the driver...
# - ... such that the added args are *not* seen by the underlying
#          preprocessing command that actually runs, but are
#          interpreted by the wrapper or another intermediary.
#
# So this means that we need to examine the driver command line also.
# If we want to do preprocessing by reinvoking the driver, we already
# had this problem: a cc1 arg '-blah' might need to become '-Wp,-blah'
# 
debug_print 1 "\$@ is $@" 1>&2
debug_print 1 "cmd_to_run is $1" 1>&2
debug_print 1 "`basename "$1"`-wrapping ($1): $@" 1>&2
case "$1" in
    (*/cc1|*/cc1plus|*/cc1obj)
        # How do we do this? cc1_command_is_pp is crusty and also scans the cc1 command.
        # Let's (1) scan it once, (2) apply the equivalent "is it pp?" test as currently,
        # (3) re-use our scanned results when we run our CPP or CC.
        prefix=gcc_cc1 eval "$declare_scan_outputs"
        scan_gcc_cc1 "$@" # this writes vars
        # print out how we scanned the command line
        if [[ ${DEBUG_CC:-0} -gt 0 ]]; then
            noop_cc1 1>&2
        fi
        if [[ "$(list_optposns "gcc_cc1" "-o" "-output")" == "" ]] && \
           [[ "$(list_optposns "gcc_cc1" "-M" "-MM" )"    == "" ]]; then
            # no output file... hmm
            echo "FIXME: can't work with cc1/cc1plus commands with no output file" 1>&2
            # this is totally fixable but requires us to reimplement cc1's rules for
            # generating the .s or .i output filename... 
            exit 1
        fi
        if command_is_pp "gcc_cc1" "$@"; then
            CPP="${CPP:-${CC_DRIVER} -E}"
            # How do we do this?
            # 1. normalize away cc1 tricky cases  <-- sets norm_cc1_options
            # 2. scan cc1
            # 3. enlighten our CPP about the args it asked about
            # 3. lift to driver as we assume our CPP requires?
            #     or let it also tell us which it is?
            # declare -a cc_options
            #write_cc_options_from_cc1_command "$@"
            declare -a outargs
            lift_gcc_cc1_to_cc 1 "$@"
            do_exec ${CPP} "${outargs[@]}"
        else
            CC="${CC:-${CC_DRIVER} -S}"
            #declare -a cc_options
            #write_cc_options_from_cc1_command "$@"
            declare -a outargs
            lift_gcc_cc1_to_cc 0 "$@"
            do_exec ${CC} "${outargs[@]}"
        fi
        ;;
    (*/clang)
        # How do we do this?
        # We assume that if it's needed, we have done the trick of adding -traditional-cpp.
        # That would ensure we get run twice: once for preprocessing, once for compilation.
        # Both will hit this case. So we still need to detect the "is pp" case and run our
        # pp wrapper specially here. If *we* added -traditional-cpp, we drop it when we
        # actually do the preprocessing step. How does "driver us" (the parent process)
        # signal that we were already traditional?
        prefix="clang" eval "$declare_scan_outputs"
        scan_clang "$@" # this writes vars
        declare -a outargs
        detraditionalize_clang_if_needed "$@"
        # FIXME: actually do the lifting to cc like we do for GCC
        if [[ "$(list_optposns "clang" "-E")" == "" ]] && \
           [[ "$(list_optposns "clang" "-S")" == "" ]] && \
           [[ "$(list_optposns "clang" "--emit-llvm-bc" "-emit-llvm-bc")" == "" ]]; then
            # something is wrong -- maybe the -traditional-cpp hack didn't work?
            echo "ERROR: failed to split clang's preprocessing and compilation steps" 1>&2
            exit 1
        elif [[ "$(list_optposns "clang" "-E")" != "" ]]; then
            CMD="${CPP:-${1}}"
        elif [[ "$(list_optposns "clang" "--emit-llvm-bc")" != "" ]]; then
            # What to do here? We just treat it as a mode of CC, i.e.
            # our compiler wrapper must support both --emit-llvm-bc and -S
            CMD="${CC:-${1}}"
        else # must be -S
            CMD="${CC:-${1}}"
        fi
        do_exec ${CMD} "${outargs[@]}"
        ;;
    (as|*/as)
        AS="${AS:-$1}" # don't call into driver again; 'as' is a documented tool
        debug_print 1 "command is $@" 1>&2
        orig_as="$1"
        # set some variables that our wrapped AS might use, if a shell function
        parse_assembler_command "$@" 
        shift
        do_exec ${AS} "$@"
        ;;
    (collect2|*/collect2)
        # We want to actually run collect2 but allow wrapping
        # the straight link commands that it would run.
        # https://gcc.gnu.org/onlinedocs/gccint/Collect2.html
        # ... collect2 runs the linker once, then maybe runs it again
        # with an extra (generated) input. (Sounds familiar!)
        # If we just pretend it's like ld, then collect2's
        # initialization stuff won't happen.
        # Perhaps we can do this by always running collect2 here, but
        # exploiting its rules for where it finds its 'ld' command. Those are:
        # "1. a hard coded linker file name, if GCC was configured with the --with-ld option.
        #  2. real-ld in the directories listed in the compiler's search directories.
        #  3. real-ld in the directories listed in the environment variable PATH.
        #  4. The file specified in the REAL_LD_FILE_NAME configuration macro, if specified.
        #  5. ld in the compiler's search directories, except that collect2 will not execute itself recursively.
        #  6. ld in PATH.
        #  ... where "the compiler's search directories" means all the directories where
        #     gcc searches for passes of the compiler. This includes directories that you
        #     specify with -B."
        # So we could prefix our own -B option to do this, and provide a 'real-ld' in it.
        # Obviously the directory would be our own directory and real-ld would be a symlink
        # to us. One problem: how do we tell collect2 to search this directory? It does not
        # support -B itself! Instead we have to put it in COLLECT_GCC_OPTIONS.
        collect2_cmd="$1"
        shift
        export COLLECT_GCC_OPTIONS="'-B' '$(dirname "$(readlink -f "${our_filename}")")' ${COLLECT_GCC_OPTIONS}"
        do_exec "${collect2_cmd}" "$@"
        ;;
    (ld|*/ld)
        # if the driver wants to run 'ld' direcly, that's OK. We can wrap it
        LD="${LD:-$1}"  # don't call into driver again; ld is a documented tool
        shift
        do_exec ${LD} "$@"
        ;;
    (*) debug_print 1 "Actually not wrapping: $@" 1>&2
        do_exec "$@"
        ;;
esac
