#!/usr/bin/env bash

# Translate complex compiler driver invocations into simple and
# (optionally) wrappable compilation steps: preprocess, compile,
# assemble, link. We work in one of two ways.
#
# (1) Using gcc's -wrapper option, the compiler driver will invoke
# us instead of cc1, etc., with the full subcommand path as $1.
# The default behaviour is to perform a series of single-operation
# (preprocess or compile or assemble or link) invocations of the
# compiler driver (gcc) for preprocess/compile or the separate tool
# (as, collect2) for assemble/link. However, each of those operations can be
# customised by setting environment variables:
#
# CPP       default: $CC_DRIVER -E      where CC_DRIVER is inferred
# CC        default: $CC_DRIVER -S      where CC_DRIVER is inferred
# AS        default: as                 FIXME: should be "whatever assembler the driver would run"?
# LD        default: ld                 (not collect2, because we have a nice way of wrapping that)
#
# (These variables denote replacement commands; they do not receive a further
# command as their first argument -- unlike this wrapper script itself, when
# it is run e.g. by gcc -wrapper. Each variable's string value is subject to
# shell expansion and word splitting, so can be multiple commands and use
# $VARIABLES. Some useful variables are set by this script. FIXME: document.)
#
# ... and this script is designed to be extended by a client that
# sources it, so the replacement commands can be shell functions.
#
# (2) Or we can be run as 'wrapcc', or anything matching 'wrap*',
# and the compiler driver command in $@, and we will interrogate the
# compiler using -### and re-invoke ourselves as a wrapper. This is
# useful for clang which does not understand -wrapper but does
# understand -###. Again, constituent subcommands will be rewritten. In
# fact we use -### to emulate option 1: each subcommand is run under
# the wrapper.
#
#   ABOUT collect2: it is used to implement global initialization and destruction
#   in the GNU toolchain, without assuming a loader that supports such features
#   natively. I think any statically linked environment might not?
#   It pulls in __main from libgcc and ensures it has a table of constructors
#   to run. On ELF platforms under static linking, do .ctors and .dtors and .init and .fini
#   and .init_array and .fini_array take effect in the loader? Or is this mechanism
#   i.e. explicit startup code for doing so, needed?
#   Since there is no .dynamic section mandated and no section headers need be present either,
#   I guess it is needed?
#
# SANITY CHECK: how can we use the above to run, say, cilpp -real-cpp '$driver -E' -plugin foo.cmx -fpass-foo ?
# I think so. Run the wrapper with CPP="cilpp -real-cpp \"$CC_DRIVER -E\""
# and the wrapper will set CC_DRIVER as needed. FIXME: who transforms -Wp,BLAH ?
# GAH. Possible problem with -Wp,-blah. It has already been lowered to -blah in the
# cc1 command, so it needs to be lifted back up to -Wp,-blah for the driver command.
# YES. This is where glibly defaulting CPP to "$CC_DRIVER -E" is not right.

# So what's our contract? We can undertake to lift and lower as needed, but if
# we lifted from cc1 to driver, it means CPP can never be a bone fide cpp command.
# That is at least consistent with 'make'. However, it falls short of what we
# hoped which is that in the design of 'cilpp' or another CPP-satisfying tool it
# can be left to the caller: if they supply cpp-style args then the delegated-to
# command can be cpp, otherwise it can be cc -E. Hmm, or does it fall short? I think
# cilpp can plausibly still be written this way, just that currently we always give
# it driver-style args and a driver-based -real-cpp. But we
# should be able to write it s.t. the real requirement is just that the args we
# give it are well-matched to what we give it as -real-cpp -- but they could be
# driver-style or cpp-style or something else entirely.
#
# I considered providing a property about arg order as documented in cilpp.ml, so that
#  -o and -Wp,* and -Xpreprocessor * would appear before other arguments.
# GAH, but with the linker this is a bad idea: -Wl,--start-group and -Wl,--end-group
# need to have their order preserved w.r.t. other arguments.

# Since we want to be the unique script that undertakes to understand all cc/cc1
# options and whether they take an argument, we can (in principle) reliably detect
# '-Wp,blah'. Maybe we need to create a side channel, "CPP_TARGETED_OPTS" and pass
# that, i.e. to explicitly identify relevant options to tools, so they needn't grok the
# whole command line. E.g. a tool like cilpp that does not understand the entire
# driver command line can still identify the options that are directed at it. Otherwise,
# once it sees an option it doesn't recognise, it'd have to ignore all later options.
# If it gets CPP_TARGETED_OPTIONS, then it knows that -o ... and -MF ...
# and -fpass-* and -fplugin=* will all be identified in that variable.
# BUT PROBLEM: it still wants to delete them from the command line, to avoid passing
# them to the real cpp... and if they are not unique, e.g. because one is really a
# filename, then which one to delete? CPP_TARGETED_OPTIONS could identify the positions too.
#
# We are then basically doing the cmdline-scanning on behalf of the cpp wrapper tool.
# But for a single-tool invocation, aren't *all* options "targeted"? What
# does "targeted" mean? In our case we know there are some options that cilpp
# will process. So those are the "targeted" ones. But that's coupling to a
# particular tool behaviour... how does this generalise?

# I think the answer is that as well as CPP="cppwrapper" we need CPP_IDENTIFY_ARGS="-fpass-JARG"
# i.e. to provide a vaguely getopt-like description of the arguments that our wrapper
# cares about. Then our scanner can pass these as CPP_IDENTIFIED_ARGS="1-fpass-dumpallocs"
# OR should that be "1-Wp,-fpass-dumpallocs"?
# i.e. how does this interact with lifting?
# It's our design that we want to lift the cc1 command back to a driver command.
# so that our wrapper is specified as CPP="cilpp -real-cpp \"$CC_DRIVER -E\""
# and we will expand the $CC_DRIVER when we run it.
# Then what goes in the above CPP_IDENTIFY_ARGS and CPP_IDENTIFIED_ARGS?
# Our wrapper does not care whether its targeted options were decorated with
# -Wp,*, -Xpreprocessor or so on. But then, it is masquerading as a driver so
# it does, after all, care about processing those. Will it have to lower them
# itself? YES! So is the rule "do not lift identified args?" This is getting
# messier and messier.
# 
# Maybe we want to support CPP_IS_DRIVER or CPP_IS_CC1LIKE, and forget about
# lifting for cilpp? AH NO, but if we don't lift then we can't use 'cc -E' as
# the "real CPP"!
#
# So maybe we just say that CPP_IDENTIFY_ARGS and CPP_IDENTIFIED_ARGS
# are non-lifted, but the actual args we pass on the command line will be lifted,
# but in CPP_IDENTIFIED_ARGS they appear in non-lifted form? We also need to know
# the range of *lifted* argument indices that they correspond to, so the tool can
# delete them from the real cpp command (if it so chooses!).
# This might be weird in the case of -MD <file> as seen by cc1. Should the cilpp
# or similar tool really have to know about this? I think we have to rely on
# normalizing that away... it is super-irregular. (CHECK: does clang's cc1 have
# this problem? NO, but it expands to a "-dependency-file" option. GAH. So
# how would we run this by our cilpp-like tool? It does not lift straightforwardly
# so ...)

# XXX: delete this 'targeted' stuff
#  We know that all
# our options came from a cc1 invocation. One kind of "targeted" means it
# got there from -Wp or -Xpreprocessor. What's another?
#
# Let's imagine we have two possible behaviours: lift to the driver, or
# "leave at cpp". The latter has stripped out -Wp and -Xpreprocessor.
# But it's not safe to reorder these relative to other options.
# So the cpp tool needs to scan the command line precisely.
# Maybe the tool needs to tell us which are its "TARGETED" options?
# And it does this exactly because it wraps an underlying tool, and only
# the underlying tool groks the full set of options.
# But that's OK; it's a wrapper! We are in the business of wrapping!
# So maybe we can have a default spec for "args the wrapper is sensitive to"
# and in return, we tell it where they are. It deletes those (at its option;
# it may want to leave them in! if they are just ordinary cpp options, say)
#
# Can we use getopt() for this spec? Maybe. cc/cc1 do not do option-combining
# (things like "tar -xzf") so we could use getopt_long_only perhaps.
# There is no "optstring" syntax for getopt_long and getopt_long_only,
# just a list of struct option { name, has_arg, ...}. So the spec should be
# perhaps a whitespace-separated list of names, with '=' at the end of any
# that takes an argument.

# Again this is us doing the scanning.

# Note that there is no -Xcompiler option.


# We also do AS_TARGETED_OPTS and LD_TARGETED_OPTS, but they are less useful
# because we don't launch the driver for AS and LD.
# So our contract is (1) we put "-o" first   (and also -MF? HMM)
#                    (2) we re-lift to driver, i.e. "-Wp,blah" etc.
#                    (3) we set CPP_TARGETED_OPTS

# Note that in GCC, -no-integrated-cpp no longer does the obvious: even
# if run with -no-integrated-cpp, gcc will not run `cpp' ever... it
# uses cc1 -E. However, for clients that want to intercept just preprocessing,
# -no-integrated-cpp is still important: it prevents a combined preprocess-
# -and-compile cc1 invocation.
#
# If we are symlinked under a name ending '-cflags', '-cppflags',
# '-ldflags' etc, we print out the options that one should pass
# to the compiler for the wrapper to be employed. So you can do
#
# gcc `/path/to/this/file/wrapper-cflags` <... normal gcc args...>
#
# to run with the alternative cpp, and so on.

debug_print () {
    lvl="$1"
    shift
    if [[ "$DEBUG_CC" -ge $lvl ]]; then
        echo "$@" 1>&2
    fi
}

quote_args () {
    for arg in "$@"; do
        echo -n "'"
        echo -n "${arg}" | sed "s/'/\\'/g"
        echo "'"
        echo "${IFS:-$' \t\n'}" | head -c1
    done
}

our_filename="${BASH_SOURCE[0]}"
looks_like_driver_command () {
    # initially $1 is the command name
    case "$1" in
        (*sh)   
            echo "Bailing rather than believing driver is $1" 1>&2
            return 1
        ;;
        (*)
            true
        ;;
    esac
    while shift || break; do case "$1" in
        ('-wrapper')
            if [[ -n "$(readlink -f "$2")" ]] && \
               [[ "$(readlink -f "$2" )" == "$(readlink -f "$our_filename")" ]]; then
               return 0  # definitely a wrapper
            fi
            ;;
        (*) ;;
    esac; done
    return 1
}

# REMEMBER (about naming / terminology): the entire command line consists of "args".
# Some "args" are "opts"; others are input files.
# Some args, if they follow an option that takes a separate argument, are also "optargs".
# But "optargs" can also occur within "opts"; this is the "joined argument" case.
# These terms ("separate" and "joined") are taken from the GCC documentation.

# Here is how we scrape the compiler documentation to generate our big case statements.
# Options end either with '='  or with ' ARGSPEC' where ARGSPEC is
# something like '<arg>' or '{yes|no}' or '[...]' or exceptionally FILE
# However, ARGSPECs can also be embedded into what looks like the option name,
# as with "-Wl,<arg>" or with "-fgo-optimize-<type>"
# and argument names need not be unique, e.g. since '-std=c99' is documented separately
# from 'std=c11'.
# We assume that anything beginning '<' or '{' or '[' is an argspec and so
# should be replaced with '*'.
# We take '=' and ' ' literally, i.e. we assume that one cannot be replaced
# with another. This is necessry because gcc has both '-save-temps' (no arg)
# and '-save-temps=<arg>'.
# This means we replace '=' with '=*'. Do this first, i.e. before handling '<' etc.
select_option_doclines () { sed -n '/^[[:blank:]]\{1,8\}\([-@][^=[:blank:]<>].*\)/ {s//\1/;p}'; }
# this handles '@FILE' specially
# and the syntax for "-fopt-info[-<type>=filename]"
# and                "-fenable-[tree|rtl|ipa]-<pass>=range1+range2"
label_joined_args () { sed 's/=.*/=JARG/' | sed 's/@FILE/@JARG/' | \
sed 's/\(.*\)-fopt-info\[-.*/\1-fopt-info-JARG/' | \
sed 's/-\[.*\].*/-JARG/' | \
sed 's/\([^[:blank:]]\)<.*/\1JARG/'; }
label_separate_args () { sed 's/^\([^[:blank:]]*\)[[:blank:]][[<{]/\1SARG/'; }
# Now we have optlines beginning '-' (or exceptionally '@', for '@FILE'), but
# still with the documentation plain text embedded... here we drop those.
drop_descriptions () { sed 's/\(\(SARG\|JARG\)\|[[:blank:]]\).*/\2/'; }
gcc_driver_optlines () {
    local gcc="$1"
    chop_driver_options () { sed -n '/Options:/,/Target:/ p' | sed '/Target:/ q'; }
    optlines="$( LANG=C ${gcc:-gcc} -v --help 2>/dev/null | chop_driver_options | select_option_doclines )"
    # PROBLEM: gcc lets us enumerate 'joined' and 'separated' args separately,
    # but syntactically some of the 'separated' args appear joined in the output, like -D and -U.
    # This is because they can be written either way! But the output only shows them joined.
    # So we need to add explicitly the "separate but appear joined" cases.
    # PROBLEM: can't restrict '--help=separate' to just the driver, and they don't emerge
    # separated in the output.
    #more_optlines="$( LANG=C ${gcc:-gcc} --help=separate 2>/dev/null | \
    #  select_option_doclines | \
    #  label_joined_args | \
    #  grep JARG | sed 's/=\?JARG/SARG/' )"
    # PROBLEM: -no-integrated-cpp is not showing up, even though it's a real arg.
    # Add it manually. FIXME: scan gcc docs for any more like this. '-wrapper' is one!
    # FIXME: handle -g*, -f*, -m*, -O*, -W*, --param=* and --param *
    # FIXME: these aren't enough! what about the -M* options? What about -i* for include hackery?
    { echo "-no-integrated-cpp"; echo "-wrapperSARG"
      #echo "$more_optlines"
      echo "$optlines" | label_joined_args | label_separate_args
    } | drop_descriptions
    # PROBLEM: --[no-]opt style is not expanded (do we need this? maybe for cc1?) No, seems not.
}
gcc_cc1_optlines () {
    local cc1="$1"
    # HACK: this chopping is probably the nastiest bit.
    chop_cc1_options () { sed -n '/The following.*language C/,/Usage: as/ p' | sed '/Usage: as/ q'; }
    # PROBLEM: the cc1 docs don't make separgs explicit.
    # Instead let's scrape them using --help=separate.
    # cc1's "--help=separate" output lists synonyms on the same line, e.g.
    #   --output                              -o
    # ... so if we see a line of this form, we insert a line break and process it as two options
    split_multiopt_lines () {
        sed 's/\([[:blank:]]-[^[:blank:]]\+\([[:blank:]]\+[^-][^[:blank:]]\+\)\?\)[[:blank:]]\+\(-[^[:blank:]]\+\)/\1\n  \3/'
    }
    sep_optlines="$( LANG=C ${cc1:-`gcc -print-prog-name=cc1`} -v --help=separate 2>/dev/null | \
        split_multiopt_lines | select_option_doclines | label_joined_args | \
        sed 's/=\?JARG/SARG/' | label_separate_args | drop_descriptions | \
        sed -n '/SARG$/ {p;d}; s/.*/&SARG/ p' )"
    # Now we scrape all args, but beware that in the output some SARGs really
    # will look like no-arg options. Since an option can't be both SARG and no-arg,
    # we know it's correct to drop the no-arg versions. Use a massive regexp.
    eregexp="$( echo -n "$sep_optlines" | sed 's/SARG$//' | tr '\n' '|' | sed 's/|$//' )"
    optlines="$( LANG=C ${gcc:-gcc} -v --help 2>/dev/null | chop_cc1_options | select_option_doclines )"
    { echo "$optlines" | label_joined_args | label_separate_args | drop_descriptions | \
      egrep -v "^($eregexp)\$"
      echo "$sep_optlines"; }
    # This is looking OK but some weirdnesses:
    # -undef without any arg -- is that correct? Yes.
    # no -g3
}
clang_optlines () {
    local clang="$1"
    # FIXME: haven't inspected this very carefully
    # but it seems to do the right thing
    LANG=C ${clang:-clang} --help | select_option_doclines | label_joined_args | \
         label_separate_args | drop_descriptions
}
# Now are we ready to tackle scanning the command lines? Almost.
# Generate the shell code we need. We will paste it.
optlines_to_caselines () {
    # we sort in reverse order so that SARG comes before JARG comes before (no suffix)
    sort -r | uniq | \
    sed -En '/(.*)SARG$/   {s//(\1)  canonopt="\1"; optarg="$2"; inc=2;;/;p;d}
             /(([^=]*)=?)JARG$/ {s//(\1*) canonopt="\2"; optarg="$( echo "\$1" | sed -E "s^\1^^" )"; inc=1 ;;/;p;d}
             /^$/          d
             /.*/          {s//(&)   canonopt="&"; inc=1 ;;/;p;d}'
}

scan_generic () {
    local casefunc="$1"
    local var_prefix="$2"
    shift; shift
    
    # How can we share the logic that wraps around what is generated?
    # - the case stmt is its own function
    # - inc is initially 0
    # - a separate case split in the caller handles -, -*, *

}
# Now let's do a scanner. NOTE: currently we don't use this driver scanner.
scan_gcc_driver () {
    local gcc="$1"
    shift
    driver_argcount=0
    realposn=1
    while true; do
        canonopt=""; inc=1; optarg=""
        driver_args[$driver_argcount]="$1"; driver_argcount=$(( $driver_argcount + 1 ))
        case "$1" in
# BEGIN GENERATED FROM gcc_driver_optlines | optlines_to_caselines
(-x)  canonopt="-x"; optarg="$2"; inc=2;;
(-v)   canonopt="-v"; inc=1 ;;
(-time)   canonopt="-time"; inc=1 ;;
(-std=*) canonopt="-std"; optarg="$( echo "$1" | sed -E "s^-std=^^" )"; inc=1 ;;
(-specs=*) canonopt="-specs"; optarg="$( echo "$1" | sed -E "s^-specs=^^" )"; inc=1 ;;
(-shared)   canonopt="-shared"; inc=1 ;;
(-save-temps=*) canonopt="-save-temps"; optarg="$( echo "$1" | sed -E "s^-save-temps=^^" )"; inc=1 ;;
(-save-temps)   canonopt="-save-temps"; inc=1 ;;
(-print-sysroot-headers-suffix)   canonopt="-print-sysroot-headers-suffix"; inc=1 ;;
(-print-sysroot)   canonopt="-print-sysroot"; inc=1 ;;
(-print-search-dirs)   canonopt="-print-search-dirs"; inc=1 ;;
(-print-prog-name=*) canonopt="-print-prog-name"; optarg="$( echo "$1" | sed -E "s^-print-prog-name=^^" )"; inc=1 ;;
(-print-multiarch)   canonopt="-print-multiarch"; inc=1 ;;
(-print-multi-os-directory)   canonopt="-print-multi-os-directory"; inc=1 ;;
(-print-multi-lib)   canonopt="-print-multi-lib"; inc=1 ;;
(-print-multi-directory)   canonopt="-print-multi-directory"; inc=1 ;;
(-print-libgcc-file-name)   canonopt="-print-libgcc-file-name"; inc=1 ;;
(-print-file-name=*) canonopt="-print-file-name"; optarg="$( echo "$1" | sed -E "s^-print-file-name=^^" )"; inc=1 ;;
(-pipe)   canonopt="-pipe"; inc=1 ;;
(-pie)   canonopt="-pie"; inc=1 ;;
(-pass-exit-codes)   canonopt="-pass-exit-codes"; inc=1 ;;
(-o)  canonopt="-o"; optarg="$2"; inc=2;;
(-no-canonical-prefixes)   canonopt="-no-canonical-prefixes"; inc=1 ;;
(-dumpversion)   canonopt="-dumpversion"; inc=1 ;;
(-dumpspecs)   canonopt="-dumpspecs"; inc=1 ;;
(-dumpmachine)   canonopt="-dumpmachine"; inc=1 ;;
(-c)   canonopt="-c"; inc=1 ;;
(-Xpreprocessor)  canonopt="-Xpreprocessor"; optarg="$2"; inc=2;;
(-Xlinker)  canonopt="-Xlinker"; optarg="$2"; inc=2;;
(-Xassembler)  canonopt="-Xassembler"; optarg="$2"; inc=2;;
(-Wp,*) canonopt="-Wp,"; optarg="$( echo "$1" | sed -E "s^-Wp,^^" )"; inc=1 ;;
(-Wl,*) canonopt="-Wl,"; optarg="$( echo "$1" | sed -E "s^-Wl,^^" )"; inc=1 ;;
(-Wa,*) canonopt="-Wa,"; optarg="$( echo "$1" | sed -E "s^-Wa,^^" )"; inc=1 ;;
(-S)   canonopt="-S"; inc=1 ;;
(-E)   canonopt="-E"; inc=1 ;;
(-B)  canonopt="-B"; optarg="$2"; inc=2;;
(--version)   canonopt="--version"; inc=1 ;;
(--target-help)   canonopt="--target-help"; inc=1 ;;
(--sysroot=*) canonopt="--sysroot"; optarg="$( echo "$1" | sed -E "s^--sysroot=^^" )"; inc=1 ;;
(--help=*) canonopt="--help"; optarg="$( echo "$1" | sed -E "s^--help=^^" )"; inc=1 ;;
(--help)   canonopt="--help"; inc=1 ;;
(-###)   canonopt="-###"; inc=1 ;;
# END GENERATED FROM gcc_driver_optlines | optlines_to_caselines
        (-) # stdin/stdout
            # this is a filename -- do something with it
            input_files_by_argposn[$realposn]="$1"
        ;;
        (-*)    # unrecognised option
            echo "WARNING: unrecognised optionlike argument $1; assuming argumentless" 1>&2
            echo "Try: diff -u <( sed -n \$'/# BEGIN GENERATED FROM gcc_driver_optlines/,\$ p\\n/# END GENERATED FROM gcc_driver_optlines/ q' ) <( . $0 && gcc_driver_optlines ${gcc:-gcc} | optlines_to_caselines )"
            # what to do? assume it's an option with no argument
            canonopt="$1"; inc=1
            ;;
        (*)
            # this is a filename -- do something with it
            input_files_by_argposn[$realposn]="$1"
        ;;
    esac
    # We just got "canonopt" and "optarg" -- do something with them
    if [[ -n "$canonopt" ]]; then
        existing_optposns_for_this_opt="${optposns_by_opt["$canonopt"]}"
        optposns_by_opt["$canonopt"]="${existing_optposns_for_this_opt:+${existing_optposns_for_this_opt} }$realposn"
        if [[ -n "$optarg" ]]; then
            # remember arguments as a list of positions -- yes it's indirect but
            # args may have spaces in them, which would mess up a space-separated list
            existing_argposns_for_this_opt="${argposns_by_opt["$canonopt"]}"
            argposns_by_opt["$canonopt"]="${existing_argposns_for_this_opt:+${existing_argposns_for_this_opt} }$realposn"
        fi
    fi

    # increment realpos
    for n in `seq 1 $inc`; do { { shift && realposn=$(( $realposn + 1 )); } || return; }; done
    done
}

scan_gcc_cc1 () {
    local cc1="$1"
    shift
    cc1_argcount=0
    realposn=1
    while true; do
        canonopt=""; inc=1; optarg=""
        case "$1" in
# BEGIN GENERATED FROM gcc_cc1_optlines | optlines_to_caselines
(-x)  canonopt="-x"; optarg="$2"; inc=2;;
(-w)   canonopt="-w"; inc=1 ;;
(-version)   canonopt="-version"; inc=1 ;;
(-v)   canonopt="-v"; inc=1 ;;
(-undef)   canonopt="-undef"; inc=1 ;;
(-type-stats)   canonopt="-type-stats"; inc=1 ;;
(-trigraphs)   canonopt="-trigraphs"; inc=1 ;;
(-tree-stats)   canonopt="-tree-stats"; inc=1 ;;
(-traditional-cpp)   canonopt="-traditional-cpp"; inc=1 ;;
(-symbol=*) canonopt="-symbol"; optarg="$( echo "$1" | sed -E "s^-symbol=^^" )"; inc=1 ;;
(-std=*) canonopt="-std"; optarg="$( echo "$1" | sed -E "s^-std=^^" )"; inc=1 ;;
(-static-libgfortran)   canonopt="-static-libgfortran"; inc=1 ;;
(-size-sort)   canonopt="-size-sort"; inc=1 ;;
(-reverse-sort)   canonopt="-reverse-sort"; inc=1 ;;
(-remap)   canonopt="-remap"; inc=1 ;;
(-quiet)   canonopt="-quiet"; inc=1 ;;
(-print-value)   canonopt="-print-value"; inc=1 ;;
(-print-objc-runtime-info)   canonopt="-print-objc-runtime-info"; inc=1 ;;
(-pedantic-errors)   canonopt="-pedantic-errors"; inc=1 ;;
(-pedantic)   canonopt="-pedantic"; inc=1 ;;
(-p)   canonopt="-p"; inc=1 ;;
(-objects)   canonopt="-objects"; inc=1 ;;
(-o)  canonopt="-o"; optarg="$2"; inc=2;;
(-nostdlib)   canonopt="-nostdlib"; inc=1 ;;
(-nostdinc++)   canonopt="-nostdinc++"; inc=1 ;;
(-nostdinc)   canonopt="-nostdinc"; inc=1 ;;
(-nocpp)   canonopt="-nocpp"; inc=1 ;;
(-name-sort)   canonopt="-name-sort"; inc=1 ;;
(-mxsaves)   canonopt="-mxsaves"; inc=1 ;;
(-mxsaveopt)   canonopt="-mxsaveopt"; inc=1 ;;
(-mxsavec)   canonopt="-mxsavec"; inc=1 ;;
(-mxsave)   canonopt="-mxsave"; inc=1 ;;
(-mxop)   canonopt="-mxop"; inc=1 ;;
(-mx32)   canonopt="-mx32"; inc=1 ;;
(-mwbnoinvd)   canonopt="-mwbnoinvd"; inc=1 ;;
(-mwaitpkg)   canonopt="-mwaitpkg"; inc=1 ;;
(-mvzeroupper)   canonopt="-mvzeroupper"; inc=1 ;;
(-mvpclmulqdq)   canonopt="-mvpclmulqdq"; inc=1 ;;
(-mvect8-ret-in-mem)   canonopt="-mvect8-ret-in-mem"; inc=1 ;;
(-mveclibabi=*) canonopt="-mveclibabi"; optarg="$( echo "$1" | sed -E "s^-mveclibabi=^^" )"; inc=1 ;;
(-mvaes)   canonopt="-mvaes"; inc=1 ;;
(-muclibc)   canonopt="-muclibc"; inc=1 ;;
(-mtune=*) canonopt="-mtune"; optarg="$( echo "$1" | sed -E "s^-mtune=^^" )"; inc=1 ;;
(-mtune-ctrl=*) canonopt="-mtune-ctrl"; optarg="$( echo "$1" | sed -E "s^-mtune-ctrl=^^" )"; inc=1 ;;
(-mtls-direct-seg-refs)   canonopt="-mtls-direct-seg-refs"; inc=1 ;;
(-mtls-dialect=*) canonopt="-mtls-dialect"; optarg="$( echo "$1" | sed -E "s^-mtls-dialect=^^" )"; inc=1 ;;
(-mtbm)   canonopt="-mtbm"; inc=1 ;;
(-mstv)   canonopt="-mstv"; inc=1 ;;
(-mstringop-strategy=*) canonopt="-mstringop-strategy"; optarg="$( echo "$1" | sed -E "s^-mstringop-strategy=^^" )"; inc=1 ;;
(-mstackrealign)   canonopt="-mstackrealign"; inc=1 ;;
(-mstack-protector-guard=*) canonopt="-mstack-protector-guard"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard=^^" )"; inc=1 ;;
(-mstack-protector-guard-symbol=*) canonopt="-mstack-protector-guard-symbol"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard-symbol=^^" )"; inc=1 ;;
(-mstack-protector-guard-reg=*) canonopt="-mstack-protector-guard-reg"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard-reg=^^" )"; inc=1 ;;
(-mstack-protector-guard-offset=*) canonopt="-mstack-protector-guard-offset"; optarg="$( echo "$1" | sed -E "s^-mstack-protector-guard-offset=^^" )"; inc=1 ;;
(-mstack-arg-probe)   canonopt="-mstack-arg-probe"; inc=1 ;;
(-mssse3)   canonopt="-mssse3"; inc=1 ;;
(-msseregparm)   canonopt="-msseregparm"; inc=1 ;;
(-msse5)   canonopt="-msse5"; inc=1 ;;
(-msse4a)   canonopt="-msse4a"; inc=1 ;;
(-msse4.2)   canonopt="-msse4.2"; inc=1 ;;
(-msse4.1)   canonopt="-msse4.1"; inc=1 ;;
(-msse4)   canonopt="-msse4"; inc=1 ;;
(-msse3)   canonopt="-msse3"; inc=1 ;;
(-msse2avx)   canonopt="-msse2avx"; inc=1 ;;
(-msse2)   canonopt="-msse2"; inc=1 ;;
(-msse)   canonopt="-msse"; inc=1 ;;
(-msoft-float)   canonopt="-msoft-float"; inc=1 ;;
(-mskip-rax-setup)   canonopt="-mskip-rax-setup"; inc=1 ;;
(-mshstk)   canonopt="-mshstk"; inc=1 ;;
(-msha)   canonopt="-msha"; inc=1 ;;
(-msgx)   canonopt="-msgx"; inc=1 ;;
(-msahf)   canonopt="-msahf"; inc=1 ;;
(-mrtm)   canonopt="-mrtm"; inc=1 ;;
(-mrtd)   canonopt="-mrtd"; inc=1 ;;
(-mregparm=*) canonopt="-mregparm"; optarg="$( echo "$1" | sed -E "s^-mregparm=^^" )"; inc=1 ;;
(-mred-zone)   canonopt="-mred-zone"; inc=1 ;;
(-mrecord-return)   canonopt="-mrecord-return"; inc=1 ;;
(-mrecord-mcount)   canonopt="-mrecord-mcount"; inc=1 ;;
(-mrecip=*) canonopt="-mrecip"; optarg="$( echo "$1" | sed -E "s^-mrecip=^^" )"; inc=1 ;;
(-mrecip)   canonopt="-mrecip"; inc=1 ;;
(-mrdseed)   canonopt="-mrdseed"; inc=1 ;;
(-mrdrnd)   canonopt="-mrdrnd"; inc=1 ;;
(-mrdpid)   canonopt="-mrdpid"; inc=1 ;;
(-mpush-args)   canonopt="-mpush-args"; inc=1 ;;
(-mptwrite)   canonopt="-mptwrite"; inc=1 ;;
(-mprfchw)   canonopt="-mprfchw"; inc=1 ;;
(-mprefetchwt1)   canonopt="-mprefetchwt1"; inc=1 ;;
(-mpreferred-stack-boundary=*) canonopt="-mpreferred-stack-boundary"; optarg="$( echo "$1" | sed -E "s^-mpreferred-stack-boundary=^^" )"; inc=1 ;;
(-mprefer-vector-width=*) canonopt="-mprefer-vector-width"; optarg="$( echo "$1" | sed -E "s^-mprefer-vector-width=^^" )"; inc=1 ;;
(-mprefer-avx128)   canonopt="-mprefer-avx128"; inc=1 ;;
(-mpopcnt)   canonopt="-mpopcnt"; inc=1 ;;
(-mpku)   canonopt="-mpku"; inc=1 ;;
(-mpconfig)   canonopt="-mpconfig"; inc=1 ;;
(-mpcommit)   canonopt="-mpcommit"; inc=1 ;;
(-mpclmul)   canonopt="-mpclmul"; inc=1 ;;
(-mpc80)   canonopt="-mpc80"; inc=1 ;;
(-mpc64)   canonopt="-mpc64"; inc=1 ;;
(-mpc32)   canonopt="-mpc32"; inc=1 ;;
(-momit-leaf-frame-pointer)   canonopt="-momit-leaf-frame-pointer"; inc=1 ;;
(-mnop-mcount)   canonopt="-mnop-mcount"; inc=1 ;;
(-mno-sse4)   canonopt="-mno-sse4"; inc=1 ;;
(-mno-red-zone)   canonopt="-mno-red-zone"; inc=1 ;;
(-mno-push-args)   canonopt="-mno-push-args"; inc=1 ;;
(-mno-fancy-math-387)   canonopt="-mno-fancy-math-387"; inc=1 ;;
(-mno-default)   canonopt="-mno-default"; inc=1 ;;
(-mno-align-stringops)   canonopt="-mno-align-stringops"; inc=1 ;;
(-mmwaitx)   canonopt="-mmwaitx"; inc=1 ;;
(-mmusl)   canonopt="-mmusl"; inc=1 ;;
(-mms-bitfields)   canonopt="-mms-bitfields"; inc=1 ;;
(-mmpx)   canonopt="-mmpx"; inc=1 ;;
(-mmovdiri)   canonopt="-mmovdiri"; inc=1 ;;
(-mmovdir64b)   canonopt="-mmovdir64b"; inc=1 ;;
(-mmovbe)   canonopt="-mmovbe"; inc=1 ;;
(-mmmx)   canonopt="-mmmx"; inc=1 ;;
(-mmitigate-rop)   canonopt="-mmitigate-rop"; inc=1 ;;
(-mmemset-strategy=*) canonopt="-mmemset-strategy"; optarg="$( echo "$1" | sed -E "s^-mmemset-strategy=^^" )"; inc=1 ;;
(-mmemcpy-strategy=*) canonopt="-mmemcpy-strategy"; optarg="$( echo "$1" | sed -E "s^-mmemcpy-strategy=^^" )"; inc=1 ;;
(-mmanual-endbr)   canonopt="-mmanual-endbr"; inc=1 ;;
(-mlzcnt)   canonopt="-mlzcnt"; inc=1 ;;
(-mlwp)   canonopt="-mlwp"; inc=1 ;;
(-mlong-double-80)   canonopt="-mlong-double-80"; inc=1 ;;
(-mlong-double-64)   canonopt="-mlong-double-64"; inc=1 ;;
(-mlong-double-128)   canonopt="-mlong-double-128"; inc=1 ;;
(-mlarge-data-threshold=*) canonopt="-mlarge-data-threshold"; optarg="$( echo "$1" | sed -E "s^-mlarge-data-threshold=^^" )"; inc=1 ;;
(-mintel-syntax)   canonopt="-mintel-syntax"; inc=1 ;;
(-minstrument-return=*) canonopt="-minstrument-return"; optarg="$( echo "$1" | sed -E "s^-minstrument-return=^^" )"; inc=1 ;;
(-minline-stringops-dynamically)   canonopt="-minline-stringops-dynamically"; inc=1 ;;
(-minline-all-stringops)   canonopt="-minline-all-stringops"; inc=1 ;;
(-mindirect-branch=*) canonopt="-mindirect-branch"; optarg="$( echo "$1" | sed -E "s^-mindirect-branch=^^" )"; inc=1 ;;
(-mindirect-branch-register)   canonopt="-mindirect-branch-register"; inc=1 ;;
(-mincoming-stack-boundary=*) canonopt="-mincoming-stack-boundary"; optarg="$( echo "$1" | sed -E "s^-mincoming-stack-boundary=^^" )"; inc=1 ;;
(-mieee-fp)   canonopt="-mieee-fp"; inc=1 ;;
(-miamcu)   canonopt="-miamcu"; inc=1 ;;
(-mhle)   canonopt="-mhle"; inc=1 ;;
(-mhard-float)   canonopt="-mhard-float"; inc=1 ;;
(-mglibc)   canonopt="-mglibc"; inc=1 ;;
(-mgfni)   canonopt="-mgfni"; inc=1 ;;
(-mgeneral-regs-only)   canonopt="-mgeneral-regs-only"; inc=1 ;;
(-mfxsr)   canonopt="-mfxsr"; inc=1 ;;
(-mfused-madd)   canonopt="-mfused-madd"; inc=1 ;;
(-mfunction-return=*) canonopt="-mfunction-return"; optarg="$( echo "$1" | sed -E "s^-mfunction-return=^^" )"; inc=1 ;;
(-mfsgsbase)   canonopt="-mfsgsbase"; inc=1 ;;
(-mfpmath=*) canonopt="-mfpmath"; optarg="$( echo "$1" | sed -E "s^-mfpmath=^^" )"; inc=1 ;;
(-mfp-ret-in-387)   canonopt="-mfp-ret-in-387"; inc=1 ;;
(-mforce-indirect-call)   canonopt="-mforce-indirect-call"; inc=1 ;;
(-mforce-drap)   canonopt="-mforce-drap"; inc=1 ;;
(-mfma4)   canonopt="-mfma4"; inc=1 ;;
(-mfma)   canonopt="-mfma"; inc=1 ;;
(-mfentry-section=*) canonopt="-mfentry-section"; optarg="$( echo "$1" | sed -E "s^-mfentry-section=^^" )"; inc=1 ;;
(-mfentry-name=*) canonopt="-mfentry-name"; optarg="$( echo "$1" | sed -E "s^-mfentry-name=^^" )"; inc=1 ;;
(-mfentry)   canonopt="-mfentry"; inc=1 ;;
(-mfancy-math-387)   canonopt="-mfancy-math-387"; inc=1 ;;
(-mf16c)   canonopt="-mf16c"; inc=1 ;;
(-menqcmd)   canonopt="-menqcmd"; inc=1 ;;
(-mdump-tune-features)   canonopt="-mdump-tune-features"; inc=1 ;;
(-mdispatch-scheduler)   canonopt="-mdispatch-scheduler"; inc=1 ;;
(-mcx16)   canonopt="-mcx16"; inc=1 ;;
(-mcrc32)   canonopt="-mcrc32"; inc=1 ;;
(-mcpu=*) canonopt="-mcpu"; optarg="$( echo "$1" | sed -E "s^-mcpu=^^" )"; inc=1 ;;
(-mcmodel=*) canonopt="-mcmodel"; optarg="$( echo "$1" | sed -E "s^-mcmodel=^^" )"; inc=1 ;;
(-mclzero)   canonopt="-mclzero"; inc=1 ;;
(-mclwb)   canonopt="-mclwb"; inc=1 ;;
(-mclflushopt)   canonopt="-mclflushopt"; inc=1 ;;
(-mcldemote)   canonopt="-mcldemote"; inc=1 ;;
(-mcld)   canonopt="-mcld"; inc=1 ;;
(-mcet-switch)   canonopt="-mcet-switch"; inc=1 ;;
(-mcall-ms2sysv-xlogues)   canonopt="-mcall-ms2sysv-xlogues"; inc=1 ;;
(-mbranch-cost=*) canonopt="-mbranch-cost"; optarg="$( echo "$1" | sed -E "s^-mbranch-cost=^^" )"; inc=1 ;;
(-mbmi2)   canonopt="-mbmi2"; inc=1 ;;
(-mbmi)   canonopt="-mbmi"; inc=1 ;;
(-mbionic)   canonopt="-mbionic"; inc=1 ;;
(-mavx512vpopcntdq)   canonopt="-mavx512vpopcntdq"; inc=1 ;;
(-mavx512vp2intersect)   canonopt="-mavx512vp2intersect"; inc=1 ;;
(-mavx512vnni)   canonopt="-mavx512vnni"; inc=1 ;;
(-mavx512vl)   canonopt="-mavx512vl"; inc=1 ;;
(-mavx512vbmi2)   canonopt="-mavx512vbmi2"; inc=1 ;;
(-mavx512vbmi)   canonopt="-mavx512vbmi"; inc=1 ;;
(-mavx512pf)   canonopt="-mavx512pf"; inc=1 ;;
(-mavx512ifma)   canonopt="-mavx512ifma"; inc=1 ;;
(-mavx512f)   canonopt="-mavx512f"; inc=1 ;;
(-mavx512er)   canonopt="-mavx512er"; inc=1 ;;
(-mavx512dq)   canonopt="-mavx512dq"; inc=1 ;;
(-mavx512cd)   canonopt="-mavx512cd"; inc=1 ;;
(-mavx512bw)   canonopt="-mavx512bw"; inc=1 ;;
(-mavx512bitalg)   canonopt="-mavx512bitalg"; inc=1 ;;
(-mavx512bf16)   canonopt="-mavx512bf16"; inc=1 ;;
(-mavx5124vnniw)   canonopt="-mavx5124vnniw"; inc=1 ;;
(-mavx5124fmaps)   canonopt="-mavx5124fmaps"; inc=1 ;;
(-mavx256-split-unaligned-store)   canonopt="-mavx256-split-unaligned-store"; inc=1 ;;
(-mavx256-split-unaligned-load)   canonopt="-mavx256-split-unaligned-load"; inc=1 ;;
(-mavx2)   canonopt="-mavx2"; inc=1 ;;
(-mavx)   canonopt="-mavx"; inc=1 ;;
(-masm=*) canonopt="-masm"; optarg="$( echo "$1" | sed -E "s^-masm=^^" )"; inc=1 ;;
(-march=*) canonopt="-march"; optarg="$( echo "$1" | sed -E "s^-march=^^" )"; inc=1 ;;
(-mandroid)   canonopt="-mandroid"; inc=1 ;;
(-malign-stringops)   canonopt="-malign-stringops"; inc=1 ;;
(-malign-loops=*) canonopt="-malign-loops"; optarg="$( echo "$1" | sed -E "s^-malign-loops=^^" )"; inc=1 ;;
(-malign-jumps=*) canonopt="-malign-jumps"; optarg="$( echo "$1" | sed -E "s^-malign-jumps=^^" )"; inc=1 ;;
(-malign-functions=*) canonopt="-malign-functions"; optarg="$( echo "$1" | sed -E "s^-malign-functions=^^" )"; inc=1 ;;
(-malign-double)   canonopt="-malign-double"; inc=1 ;;
(-malign-data=*) canonopt="-malign-data"; optarg="$( echo "$1" | sed -E "s^-malign-data=^^" )"; inc=1 ;;
(-maes)   canonopt="-maes"; inc=1 ;;
(-madx)   canonopt="-madx"; inc=1 ;;
(-maddress-mode=*) canonopt="-maddress-mode"; optarg="$( echo "$1" | sed -E "s^-maddress-mode=^^" )"; inc=1 ;;
(-maccumulate-outgoing-args)   canonopt="-maccumulate-outgoing-args"; inc=1 ;;
(-mabm)   canonopt="-mabm"; inc=1 ;;
(-mabi=*) canonopt="-mabi"; optarg="$( echo "$1" | sed -E "s^-mabi=^^" )"; inc=1 ;;
(-m96bit-long-double)   canonopt="-m96bit-long-double"; inc=1 ;;
(-m8bit-idiv)   canonopt="-m8bit-idiv"; inc=1 ;;
(-m80387)   canonopt="-m80387"; inc=1 ;;
(-m64)   canonopt="-m64"; inc=1 ;;
(-m3dnowa)   canonopt="-m3dnowa"; inc=1 ;;
(-m3dnow)   canonopt="-m3dnow"; inc=1 ;;
(-m32)   canonopt="-m32"; inc=1 ;;
(-m16)   canonopt="-m16"; inc=1 ;;
(-m128bit-long-double)   canonopt="-m128bit-long-double"; inc=1 ;;
(-list)   canonopt="-list"; inc=1 ;;
(-lang-asm)   canonopt="-lang-asm"; inc=1 ;;
(-iwithprefixbefore)  canonopt="-iwithprefixbefore"; optarg="$2"; inc=2;;
(-iwithprefix)  canonopt="-iwithprefix"; optarg="$2"; inc=2;;
(-isystem)  canonopt="-isystem"; optarg="$2"; inc=2;;
(-isysroot)  canonopt="-isysroot"; optarg="$2"; inc=2;;
(-iquote)  canonopt="-iquote"; optarg="$2"; inc=2;;
(-iprefix)  canonopt="-iprefix"; optarg="$2"; inc=2;;
(-iplugindir=*) canonopt="-iplugindir"; optarg="$( echo "$1" | sed -E "s^-iplugindir=^^" )"; inc=1 ;;
(-include)  canonopt="-include"; optarg="$2"; inc=2;;
(-imultilib)  canonopt="-imultilib"; optarg="$2"; inc=2;;
(-imultiarch)  canonopt="-imultiarch"; optarg="$2"; inc=2;;
(-imacros)  canonopt="-imacros"; optarg="$2"; inc=2;;
(-idirafter)  canonopt="-idirafter"; optarg="$2"; inc=2;;
(-help)   canonopt="-help"; inc=1 ;;
(-gz=*) canonopt="-gz"; optarg="$( echo "$1" | sed -E "s^-gz=^^" )"; inc=1 ;;
(-gz)   canonopt="-gz"; inc=1 ;;
(-gxcoff+)   canonopt="-gxcoff+"; inc=1 ;;
(-gxcoff)   canonopt="-gxcoff"; inc=1 ;;
(-gvms)   canonopt="-gvms"; inc=1 ;;
(-gvariable-location-views=*) canonopt="-gvariable-location-views"; optarg="$( echo "$1" | sed -E "s^-gvariable-location-views=^^" )"; inc=1 ;;
(-gvariable-location-views)   canonopt="-gvariable-location-views"; inc=1 ;;
(-gtoggle)   canonopt="-gtoggle"; inc=1 ;;
(-gstrict-dwarf)   canonopt="-gstrict-dwarf"; inc=1 ;;
(-gstatement-frontiers)   canonopt="-gstatement-frontiers"; inc=1 ;;
(-gstabs+)   canonopt="-gstabs+"; inc=1 ;;
(-gstabs)   canonopt="-gstabs"; inc=1 ;;
(-gsplit-dwarf)   canonopt="-gsplit-dwarf"; inc=1 ;;
(-grecord-gcc-switches)   canonopt="-grecord-gcc-switches"; inc=1 ;;
(-gpubnames)   canonopt="-gpubnames"; inc=1 ;;
(-gno-pubnames)   canonopt="-gno-pubnames"; inc=1 ;;
(-gnatO)  canonopt="-gnatO"; optarg="$2"; inc=2;;
(-gnat*) canonopt="-gnat"; optarg="$( echo "$1" | sed -E "s^-gnat^^" )"; inc=1 ;;
(-ginternal-reset-location-views)   canonopt="-ginternal-reset-location-views"; inc=1 ;;
(-ginline-points)   canonopt="-ginline-points"; inc=1 ;;
(-gimple-stats)   canonopt="-gimple-stats"; inc=1 ;;
(-ggnu-pubnames)   canonopt="-ggnu-pubnames"; inc=1 ;;
(-ggdb)   canonopt="-ggdb"; inc=1 ;;
(-gen-decls)   canonopt="-gen-decls"; inc=1 ;;
(-gdwarf-)   canonopt="-gdwarf-"; inc=1 ;;
(-gdwarf)   canonopt="-gdwarf"; inc=1 ;;
(-gdescribe-dies)   canonopt="-gdescribe-dies"; inc=1 ;;
(-gcolumn-info)   canonopt="-gcolumn-info"; inc=1 ;;
(-gcoff3)   canonopt="-gcoff3"; inc=1 ;;
(-gcoff2)   canonopt="-gcoff2"; inc=1 ;;
(-gcoff1)   canonopt="-gcoff1"; inc=1 ;;
(-gcoff)   canonopt="-gcoff"; inc=1 ;;
(-gas-locview-support)   canonopt="-gas-locview-support"; inc=1 ;;
(-gas-loc-support)   canonopt="-gas-loc-support"; inc=1 ;;
(-gant)   canonopt="-gant"; inc=1 ;;
(-g)   canonopt="-g"; inc=1 ;;
(-fzero-link)   canonopt="-fzero-link"; inc=1 ;;
(-fzero-initialized-in-bss)   canonopt="-fzero-initialized-in-bss"; inc=1 ;;
(-fzee)   canonopt="-fzee"; inc=1 ;;
(-fxref)   canonopt="-fxref"; inc=1 ;;
(-fxcode)   canonopt="-fxcode"; inc=1 ;;
(-fwrapv-pointer)   canonopt="-fwrapv-pointer"; inc=1 ;;
(-fwrapv)   canonopt="-fwrapv"; inc=1 ;;
(-fwpa=*) canonopt="-fwpa"; optarg="$( echo "$1" | sed -E "s^-fwpa=^^" )"; inc=1 ;;
(-fwpa)   canonopt="-fwpa"; inc=1 ;;
(-fworking-directory)   canonopt="-fworking-directory"; inc=1 ;;
(-fwide-exec-charset=*) canonopt="-fwide-exec-charset"; optarg="$( echo "$1" | sed -E "s^-fwide-exec-charset=^^" )"; inc=1 ;;
(-fwholevalue)   canonopt="-fwholevalue"; inc=1 ;;
(-fwholediv)   canonopt="-fwholediv"; inc=1 ;;
(-fwhole-program)   canonopt="-fwhole-program"; inc=1 ;;
(-fwhole-file)   canonopt="-fwhole-file"; inc=1 ;;
(-fweb)   canonopt="-fweb"; inc=1 ;;
(-fweak)   canonopt="-fweak"; inc=1 ;;
(-fvtv-debug)   canonopt="-fvtv-debug"; inc=1 ;;
(-fvtv-counts)   canonopt="-fvtv-counts"; inc=1 ;;
(-fvtable-verify=*) canonopt="-fvtable-verify"; optarg="$( echo "$1" | sed -E "s^-fvtable-verify=^^" )"; inc=1 ;;
(-fvtable-thunks)   canonopt="-fvtable-thunks"; inc=1 ;;
(-fvtable-gc)   canonopt="-fvtable-gc"; inc=1 ;;
(-fvpt)   canonopt="-fvpt"; inc=1 ;;
(-fvisibility=*) canonopt="-fvisibility"; optarg="$( echo "$1" | sed -E "s^-fvisibility=^^" )"; inc=1 ;;
(-fvisibility-ms-compat)   canonopt="-fvisibility-ms-compat"; inc=1 ;;
(-fvisibility-inlines-hidden)   canonopt="-fvisibility-inlines-hidden"; inc=1 ;;
(-fversion=*) canonopt="-fversion"; optarg="$( echo "$1" | sed -E "s^-fversion=^^" )"; inc=1 ;;
(-fversion-loops-for-strides)   canonopt="-fversion-loops-for-strides"; inc=1 ;;
(-fversion)   canonopt="-fversion"; inc=1 ;;
(-fverbose-asm)   canonopt="-fverbose-asm"; inc=1 ;;
(-fvect-cost-model=*) canonopt="-fvect-cost-model"; optarg="$( echo "$1" | sed -E "s^-fvect-cost-model=^^" )"; inc=1 ;;
(-fvect-cost-model)   canonopt="-fvect-cost-model"; inc=1 ;;
(-fvariable-expansion-in-unroller)   canonopt="-fvariable-expansion-in-unroller"; inc=1 ;;
(-fvar-tracking-uninit)   canonopt="-fvar-tracking-uninit"; inc=1 ;;
(-fvar-tracking-assignments-toggle)   canonopt="-fvar-tracking-assignments-toggle"; inc=1 ;;
(-fvar-tracking-assignments)   canonopt="-fvar-tracking-assignments"; inc=1 ;;
(-fvar-tracking)   canonopt="-fvar-tracking"; inc=1 ;;
(-fuselist)   canonopt="-fuselist"; inc=1 ;;
(-fuse-linker-plugin)   canonopt="-fuse-linker-plugin"; inc=1 ;;
(-fuse-ld=*) canonopt="-fuse-ld"; optarg="$( echo "$1" | sed -E "s^-fuse-ld=^^" )"; inc=1 ;;
(-fuse-cxa-get-exception-ptr)   canonopt="-fuse-cxa-get-exception-ptr"; inc=1 ;;
(-fuse-cxa-atexit)   canonopt="-fuse-cxa-atexit"; inc=1 ;;
(-funwind-tables)   canonopt="-funwind-tables"; inc=1 ;;
(-funswitch-loops)   canonopt="-funswitch-loops"; inc=1 ;;
(-funsigned-char)   canonopt="-funsigned-char"; inc=1 ;;
(-funsigned-bitfields)   canonopt="-funsigned-bitfields"; inc=1 ;;
(-funsafe-math-optimizations)   canonopt="-funsafe-math-optimizations"; inc=1 ;;
(-funsafe-loop-optimizations)   canonopt="-funsafe-loop-optimizations"; inc=1 ;;
(-funroll-loops)   canonopt="-funroll-loops"; inc=1 ;;
(-funroll-completely-grow-size)   canonopt="-funroll-completely-grow-size"; inc=1 ;;
(-funroll-all-loops)   canonopt="-funroll-all-loops"; inc=1 ;;
(-funittest)   canonopt="-funittest"; inc=1 ;;
(-funit-at-a-time)   canonopt="-funit-at-a-time"; inc=1 ;;
(-funderscoring)   canonopt="-funderscoring"; inc=1 ;;
(-funconstrained-commons)   canonopt="-funconstrained-commons"; inc=1 ;;
(-funbounded-by-reference)   canonopt="-funbounded-by-reference"; inc=1 ;;
(-ftree-vrp)   canonopt="-ftree-vrp"; inc=1 ;;
(-ftree-vectorizer-verbose=*) canonopt="-ftree-vectorizer-verbose"; optarg="$( echo "$1" | sed -E "s^-ftree-vectorizer-verbose=^^" )"; inc=1 ;;
(-ftree-vectorize)   canonopt="-ftree-vectorize"; inc=1 ;;
(-ftree-vect-loop-version)   canonopt="-ftree-vect-loop-version"; inc=1 ;;
(-ftree-ter)   canonopt="-ftree-ter"; inc=1 ;;
(-ftree-tail-merge)   canonopt="-ftree-tail-merge"; inc=1 ;;
(-ftree-switch-conversion)   canonopt="-ftree-switch-conversion"; inc=1 ;;
(-ftree-store-copy-prop)   canonopt="-ftree-store-copy-prop"; inc=1 ;;
(-ftree-store-ccp)   canonopt="-ftree-store-ccp"; inc=1 ;;
(-ftree-sra)   canonopt="-ftree-sra"; inc=1 ;;
(-ftree-slsr)   canonopt="-ftree-slsr"; inc=1 ;;
(-ftree-slp-vectorize)   canonopt="-ftree-slp-vectorize"; inc=1 ;;
(-ftree-sink)   canonopt="-ftree-sink"; inc=1 ;;
(-ftree-scev-cprop)   canonopt="-ftree-scev-cprop"; inc=1 ;;
(-ftree-salias)   canonopt="-ftree-salias"; inc=1 ;;
(-ftree-reassoc)   canonopt="-ftree-reassoc"; inc=1 ;;
(-ftree-pta)   canonopt="-ftree-pta"; inc=1 ;;
(-ftree-pre)   canonopt="-ftree-pre"; inc=1 ;;
(-ftree-phiprop)   canonopt="-ftree-phiprop"; inc=1 ;;
(-ftree-partial-pre)   canonopt="-ftree-partial-pre"; inc=1 ;;
(-ftree-parallelize-loops=*) canonopt="-ftree-parallelize-loops"; optarg="$( echo "$1" | sed -E "s^-ftree-parallelize-loops=^^" )"; inc=1 ;;
(-ftree-lrs)   canonopt="-ftree-lrs"; inc=1 ;;
(-ftree-loop-vectorize)   canonopt="-ftree-loop-vectorize"; inc=1 ;;
(-ftree-loop-optimize)   canonopt="-ftree-loop-optimize"; inc=1 ;;
(-ftree-loop-linear)   canonopt="-ftree-loop-linear"; inc=1 ;;
(-ftree-loop-ivcanon)   canonopt="-ftree-loop-ivcanon"; inc=1 ;;
(-ftree-loop-im)   canonopt="-ftree-loop-im"; inc=1 ;;
(-ftree-loop-if-convert-stores)   canonopt="-ftree-loop-if-convert-stores"; inc=1 ;;
(-ftree-loop-if-convert)   canonopt="-ftree-loop-if-convert"; inc=1 ;;
(-ftree-loop-distribution)   canonopt="-ftree-loop-distribution"; inc=1 ;;
(-ftree-loop-distribute-patterns)   canonopt="-ftree-loop-distribute-patterns"; inc=1 ;;
(-ftree-fre)   canonopt="-ftree-fre"; inc=1 ;;
(-ftree-forwprop)   canonopt="-ftree-forwprop"; inc=1 ;;
(-ftree-dse)   canonopt="-ftree-dse"; inc=1 ;;
(-ftree-dominator-opts)   canonopt="-ftree-dominator-opts"; inc=1 ;;
(-ftree-dce)   canonopt="-ftree-dce"; inc=1 ;;
(-ftree-cselim)   canonopt="-ftree-cselim"; inc=1 ;;
(-ftree-copyrename)   canonopt="-ftree-copyrename"; inc=1 ;;
(-ftree-copy-prop)   canonopt="-ftree-copy-prop"; inc=1 ;;
(-ftree-coalesce-vars)   canonopt="-ftree-coalesce-vars"; inc=1 ;;
(-ftree-coalesce-inlined-vars)   canonopt="-ftree-coalesce-inlined-vars"; inc=1 ;;
(-ftree-ch)   canonopt="-ftree-ch"; inc=1 ;;
(-ftree-ccp)   canonopt="-ftree-ccp"; inc=1 ;;
(-ftree-builtin-call-dce)   canonopt="-ftree-builtin-call-dce"; inc=1 ;;
(-ftree-bit-ccp)   canonopt="-ftree-bit-ccp"; inc=1 ;;
(-ftrapv)   canonopt="-ftrapv"; inc=1 ;;
(-ftrapping-math)   canonopt="-ftrapping-math"; inc=1 ;;
(-ftransition=*) canonopt="-ftransition"; optarg="$( echo "$1" | sed -E "s^-ftransition=^^" )"; inc=1 ;;
(-ftrampolines)   canonopt="-ftrampolines"; inc=1 ;;
(-ftrack-macro-expansion=*) canonopt="-ftrack-macro-expansion"; optarg="$( echo "$1" | sed -E "s^-ftrack-macro-expansion=^^" )"; inc=1 ;;
(-ftrack-macro-expansion)   canonopt="-ftrack-macro-expansion"; inc=1 ;;
(-ftracer)   canonopt="-ftracer"; inc=1 ;;
(-ftoplevel-reorder)   canonopt="-ftoplevel-reorder"; inc=1 ;;
(-ftls-model=*) canonopt="-ftls-model"; optarg="$( echo "$1" | sed -E "s^-ftls-model=^^" )"; inc=1 ;;
(-ftime-report-details)   canonopt="-ftime-report-details"; inc=1 ;;
(-ftime-report)   canonopt="-ftime-report"; inc=1 ;;
(-fthread-jumps)   canonopt="-fthread-jumps"; inc=1 ;;
(-fthis-is-variable)   canonopt="-fthis-is-variable"; inc=1 ;;
(-ftest-forall-temp)   canonopt="-ftest-forall-temp"; inc=1 ;;
(-ftest-coverage)   canonopt="-ftest-coverage"; inc=1 ;;
(-ftemplate-depth=*) canonopt="-ftemplate-depth"; optarg="$( echo "$1" | sed -E "s^-ftemplate-depth=^^" )"; inc=1 ;;
(-ftemplate-depth-)   canonopt="-ftemplate-depth-"; inc=1 ;;
(-ftemplate-backtrace-limit=*) canonopt="-ftemplate-backtrace-limit"; optarg="$( echo "$1" | sed -E "s^-ftemplate-backtrace-limit=^^" )"; inc=1 ;;
(-ftarget-ranlib=*) canonopt="-ftarget-ranlib"; optarg="$( echo "$1" | sed -E "s^-ftarget-ranlib=^^" )"; inc=1 ;;
(-ftarget-help)   canonopt="-ftarget-help"; inc=1 ;;
(-ftarget-ar=*) canonopt="-ftarget-ar"; optarg="$( echo "$1" | sed -E "s^-ftarget-ar=^^" )"; inc=1 ;;
(-ftail-call-workaround=*) canonopt="-ftail-call-workaround"; optarg="$( echo "$1" | sed -E "s^-ftail-call-workaround=^^" )"; inc=1 ;;
(-ftail-call-workaround)   canonopt="-ftail-call-workaround"; inc=1 ;;
(-ftabstop=*) canonopt="-ftabstop"; optarg="$( echo "$1" | sed -E "s^-ftabstop=^^" )"; inc=1 ;;
(-fsyntax-only)   canonopt="-fsyntax-only"; inc=1 ;;
(-fsync-libcalls)   canonopt="-fsync-libcalls"; inc=1 ;;
(-fswitch-errors)   canonopt="-fswitch-errors"; inc=1 ;;
(-fswig)   canonopt="-fswig"; inc=1 ;;
(-fstrong-eval-order=*) canonopt="-fstrong-eval-order"; optarg="$( echo "$1" | sed -E "s^-fstrong-eval-order=^^" )"; inc=1 ;;
(-fstrong-eval-order)   canonopt="-fstrong-eval-order"; inc=1 ;;
(-fstrict-volatile-bitfields)   canonopt="-fstrict-volatile-bitfields"; inc=1 ;;
(-fstrict-prototype)   canonopt="-fstrict-prototype"; inc=1 ;;
(-fstrict-overflow)   canonopt="-fstrict-overflow"; inc=1 ;;
(-fstrict-enums)   canonopt="-fstrict-enums"; inc=1 ;;
(-fstrict-aliasing)   canonopt="-fstrict-aliasing"; inc=1 ;;
(-fstrength-reduce)   canonopt="-fstrength-reduce"; inc=1 ;;
(-fstore-merging)   canonopt="-fstore-merging"; inc=1 ;;
(-fstdarg-opt)   canonopt="-fstdarg-opt"; inc=1 ;;
(-fstats)   canonopt="-fstats"; inc=1 ;;
(-fstack-usage)   canonopt="-fstack-usage"; inc=1 ;;
(-fstack-reuse=*) canonopt="-fstack-reuse"; optarg="$( echo "$1" | sed -E "s^-fstack-reuse=^^" )"; inc=1 ;;
(-fstack-protector-strong)   canonopt="-fstack-protector-strong"; inc=1 ;;
(-fstack-protector-explicit)   canonopt="-fstack-protector-explicit"; inc=1 ;;
(-fstack-protector-all)   canonopt="-fstack-protector-all"; inc=1 ;;
(-fstack-protector)   canonopt="-fstack-protector"; inc=1 ;;
(-fstack-limit-symbol=*) canonopt="-fstack-limit-symbol"; optarg="$( echo "$1" | sed -E "s^-fstack-limit-symbol=^^" )"; inc=1 ;;
(-fstack-limit-register=*) canonopt="-fstack-limit-register"; optarg="$( echo "$1" | sed -E "s^-fstack-limit-register=^^" )"; inc=1 ;;
(-fstack-limit)   canonopt="-fstack-limit"; inc=1 ;;
(-fstack-clash-protection)   canonopt="-fstack-clash-protection"; inc=1 ;;
(-fstack-check=*) canonopt="-fstack-check"; optarg="$( echo "$1" | sed -E "s^-fstack-check=^^" )"; inc=1 ;;
(-fstack-check)   canonopt="-fstack-check"; inc=1 ;;
(-fstack-arrays)   canonopt="-fstack-arrays"; inc=1 ;;
(-fsso-struct=*) canonopt="-fsso-struct"; optarg="$( echo "$1" | sed -E "s^-fsso-struct=^^" )"; inc=1 ;;
(-fssa-phiopt)   canonopt="-fssa-phiopt"; inc=1 ;;
(-fssa-backprop)   canonopt="-fssa-backprop"; inc=1 ;;
(-fsquangle)   canonopt="-fsquangle"; inc=1 ;;
(-fsplit-wide-types-early)   canonopt="-fsplit-wide-types-early"; inc=1 ;;
(-fsplit-wide-types)   canonopt="-fsplit-wide-types"; inc=1 ;;
(-fsplit-stack)   canonopt="-fsplit-stack"; inc=1 ;;
(-fsplit-paths)   canonopt="-fsplit-paths"; inc=1 ;;
(-fsplit-loops)   canonopt="-fsplit-loops"; inc=1 ;;
(-fsplit-ivs-in-unroller)   canonopt="-fsplit-ivs-in-unroller"; inc=1 ;;
(-fsources)   canonopt="-fsources"; inc=1 ;;
(-fsoft-check-all)   canonopt="-fsoft-check-all"; inc=1 ;;
(-fsized-deallocation)   canonopt="-fsized-deallocation"; inc=1 ;;
(-fsingle-precision-constant)   canonopt="-fsingle-precision-constant"; inc=1 ;;
(-fsimd-cost-model=*) canonopt="-fsimd-cost-model"; optarg="$( echo "$1" | sed -E "s^-fsimd-cost-model=^^" )"; inc=1 ;;
(-fsigned-zeros)   canonopt="-fsigned-zeros"; inc=1 ;;
(-fsigned-char)   canonopt="-fsigned-char"; inc=1 ;;
(-fsigned-bitfields)   canonopt="-fsigned-bitfields"; inc=1 ;;
(-fsignaling-nans)   canonopt="-fsignaling-nans"; inc=1 ;;
(-fsign-zero)   canonopt="-fsign-zero"; inc=1 ;;
(-fshrink-wrap-separate)   canonopt="-fshrink-wrap-separate"; inc=1 ;;
(-fshrink-wrap)   canonopt="-fshrink-wrap"; inc=1 ;;
(-fshow-column)   canonopt="-fshow-column"; inc=1 ;;
(-fshort-wchar)   canonopt="-fshort-wchar"; inc=1 ;;
(-fshort-enums)   canonopt="-fshort-enums"; inc=1 ;;
(-fshared)   canonopt="-fshared"; inc=1 ;;
(-fsemantic-interposition)   canonopt="-fsemantic-interposition"; inc=1 ;;
(-fself-test=*) canonopt="-fself-test"; optarg="$( echo "$1" | sed -E "s^-fself-test=^^" )"; inc=1 ;;
(-fselective-scheduling2)   canonopt="-fselective-scheduling2"; inc=1 ;;
(-fselective-scheduling)   canonopt="-fselective-scheduling"; inc=1 ;;
(-fsel-sched-reschedule-pipelined)   canonopt="-fsel-sched-reschedule-pipelined"; inc=1 ;;
(-fsel-sched-pipelining-outer-loops)   canonopt="-fsel-sched-pipelining-outer-loops"; inc=1 ;;
(-fsel-sched-pipelining)   canonopt="-fsel-sched-pipelining"; inc=1 ;;
(-fsee)   canonopt="-fsee"; inc=1 ;;
(-fsection-anchors)   canonopt="-fsection-anchors"; inc=1 ;;
(-fsecond-underscore)   canonopt="-fsecond-underscore"; inc=1 ;;
(-fschedule-insns2)   canonopt="-fschedule-insns2"; inc=1 ;;
(-fschedule-insns)   canonopt="-fschedule-insns"; inc=1 ;;
(-fschedule-fusion)   canonopt="-fschedule-fusion"; inc=1 ;;
(-fsched2-use-traces)   canonopt="-fsched2-use-traces"; inc=1 ;;
(-fsched2-use-superblocks)   canonopt="-fsched2-use-superblocks"; inc=1 ;;
(-fsched-verbose=*) canonopt="-fsched-verbose"; optarg="$( echo "$1" | sed -E "s^-fsched-verbose=^^" )"; inc=1 ;;
(-fsched-stalled-insns=*) canonopt="-fsched-stalled-insns"; optarg="$( echo "$1" | sed -E "s^-fsched-stalled-insns=^^" )"; inc=1 ;;
(-fsched-stalled-insns-dep=*) canonopt="-fsched-stalled-insns-dep"; optarg="$( echo "$1" | sed -E "s^-fsched-stalled-insns-dep=^^" )"; inc=1 ;;
(-fsched-stalled-insns-dep)   canonopt="-fsched-stalled-insns-dep"; inc=1 ;;
(-fsched-stalled-insns)   canonopt="-fsched-stalled-insns"; inc=1 ;;
(-fsched-spec-load-dangerous)   canonopt="-fsched-spec-load-dangerous"; inc=1 ;;
(-fsched-spec-load)   canonopt="-fsched-spec-load"; inc=1 ;;
(-fsched-spec-insn-heuristic)   canonopt="-fsched-spec-insn-heuristic"; inc=1 ;;
(-fsched-spec)   canonopt="-fsched-spec"; inc=1 ;;
(-fsched-rank-heuristic)   canonopt="-fsched-rank-heuristic"; inc=1 ;;
(-fsched-pressure)   canonopt="-fsched-pressure"; inc=1 ;;
(-fsched-last-insn-heuristic)   canonopt="-fsched-last-insn-heuristic"; inc=1 ;;
(-fsched-interblock)   canonopt="-fsched-interblock"; inc=1 ;;
(-fsched-group-heuristic)   canonopt="-fsched-group-heuristic"; inc=1 ;;
(-fsched-dep-count-heuristic)   canonopt="-fsched-dep-count-heuristic"; inc=1 ;;
(-fsched-critical-path-heuristic)   canonopt="-fsched-critical-path-heuristic"; inc=1 ;;
(-fsave-optimization-record)   canonopt="-fsave-optimization-record"; inc=1 ;;
(-fsanitize=*) canonopt="-fsanitize"; optarg="$( echo "$1" | sed -E "s^-fsanitize=^^" )"; inc=1 ;;
(-fsanitize-undefined-trap-on-error)   canonopt="-fsanitize-undefined-trap-on-error"; inc=1 ;;
(-fsanitize-sections=*) canonopt="-fsanitize-sections"; optarg="$( echo "$1" | sed -E "s^-fsanitize-sections=^^" )"; inc=1 ;;
(-fsanitize-recover=*) canonopt="-fsanitize-recover"; optarg="$( echo "$1" | sed -E "s^-fsanitize-recover=^^" )"; inc=1 ;;
(-fsanitize-recover)   canonopt="-fsanitize-recover"; inc=1 ;;
(-fsanitize-coverage=*) canonopt="-fsanitize-coverage"; optarg="$( echo "$1" | sed -E "s^-fsanitize-coverage=^^" )"; inc=1 ;;
(-fsanitize-address-use-after-scope)   canonopt="-fsanitize-address-use-after-scope"; inc=1 ;;
(-fruntime-modules=*) canonopt="-fruntime-modules"; optarg="$( echo "$1" | sed -E "s^-fruntime-modules=^^" )"; inc=1 ;;
(-frtti)   canonopt="-frtti"; inc=1 ;;
(-frounding-math)   canonopt="-frounding-math"; inc=1 ;;
(-freturn)   canonopt="-freturn"; inc=1 ;;
(-fresolution=*) canonopt="-fresolution"; optarg="$( echo "$1" | sed -E "s^-fresolution=^^" )"; inc=1 ;;
(-freschedule-modulo-scheduled-loops)   canonopt="-freschedule-modulo-scheduled-loops"; inc=1 ;;
(-frerun-loop-opt)   canonopt="-frerun-loop-opt"; inc=1 ;;
(-frerun-cse-after-loop)   canonopt="-frerun-cse-after-loop"; inc=1 ;;
(-frequire-return-statement)   canonopt="-frequire-return-statement"; inc=1 ;;
(-freport-bug)   canonopt="-freport-bug"; inc=1 ;;
(-frepo)   canonopt="-frepo"; inc=1 ;;
(-freplace-objc-classes)   canonopt="-freplace-objc-classes"; inc=1 ;;
(-frepack-arrays)   canonopt="-frepack-arrays"; inc=1 ;;
(-freorder-functions)   canonopt="-freorder-functions"; inc=1 ;;
(-freorder-blocks-and-partition)   canonopt="-freorder-blocks-and-partition"; inc=1 ;;
(-freorder-blocks-algorithm=*) canonopt="-freorder-blocks-algorithm"; optarg="$( echo "$1" | sed -E "s^-freorder-blocks-algorithm=^^" )"; inc=1 ;;
(-freorder-blocks)   canonopt="-freorder-blocks"; inc=1 ;;
(-frename-registers)   canonopt="-frename-registers"; inc=1 ;;
(-frelease)   canonopt="-frelease"; inc=1 ;;
(-fregmove)   canonopt="-fregmove"; inc=1 ;;
(-freg-struct-return)   canonopt="-freg-struct-return"; inc=1 ;;
(-free)   canonopt="-free"; inc=1 ;;
(-frecursive)   canonopt="-frecursive"; inc=1 ;;
(-frecord-marker=*) canonopt="-frecord-marker"; optarg="$( echo "$1" | sed -E "s^-frecord-marker=^^" )"; inc=1 ;;
(-frecord-gcc-switches)   canonopt="-frecord-gcc-switches"; inc=1 ;;
(-freciprocal-math)   canonopt="-freciprocal-math"; inc=1 ;;
(-frealloc-lhs)   canonopt="-frealloc-lhs"; inc=1 ;;
(-freal-8-real-4)   canonopt="-freal-8-real-4"; inc=1 ;;
(-freal-8-real-16)   canonopt="-freal-8-real-16"; inc=1 ;;
(-freal-8-real-10)   canonopt="-freal-8-real-10"; inc=1 ;;
(-freal-4-real-8)   canonopt="-freal-4-real-8"; inc=1 ;;
(-freal-4-real-16)   canonopt="-freal-4-real-16"; inc=1 ;;
(-freal-4-real-10)   canonopt="-freal-4-real-10"; inc=1 ;;
(-frange-check)   canonopt="-frange-check"; inc=1 ;;
(-frange)   canonopt="-frange"; inc=1 ;;
(-frandom-seed=*) canonopt="-frandom-seed"; optarg="$( echo "$1" | sed -E "s^-frandom-seed=^^" )"; inc=1 ;;
(-frandom-seed)   canonopt="-frandom-seed"; inc=1 ;;
(-fq)   canonopt="-fq"; inc=1 ;;
(-fprotect-parens)   canonopt="-fprotect-parens"; inc=1 ;;
(-fprofile-values)   canonopt="-fprofile-values"; inc=1 ;;
(-fprofile-use=*) canonopt="-fprofile-use"; optarg="$( echo "$1" | sed -E "s^-fprofile-use=^^" )"; inc=1 ;;
(-fprofile-use)   canonopt="-fprofile-use"; inc=1 ;;
(-fprofile-update=*) canonopt="-fprofile-update"; optarg="$( echo "$1" | sed -E "s^-fprofile-update=^^" )"; inc=1 ;;
(-fprofile-reproducible=*) canonopt="-fprofile-reproducible"; optarg="$( echo "$1" | sed -E "s^-fprofile-reproducible=^^" )"; inc=1 ;;
(-fprofile-report)   canonopt="-fprofile-report"; inc=1 ;;
(-fprofile-reorder-functions)   canonopt="-fprofile-reorder-functions"; inc=1 ;;
(-fprofile-prefix-path=*) canonopt="-fprofile-prefix-path"; optarg="$( echo "$1" | sed -E "s^-fprofile-prefix-path=^^" )"; inc=1 ;;
(-fprofile-partial-training)   canonopt="-fprofile-partial-training"; inc=1 ;;
(-fprofile-note=*) canonopt="-fprofile-note"; optarg="$( echo "$1" | sed -E "s^-fprofile-note=^^" )"; inc=1 ;;
(-fprofile-generate=*) canonopt="-fprofile-generate"; optarg="$( echo "$1" | sed -E "s^-fprofile-generate=^^" )"; inc=1 ;;
(-fprofile-generate)   canonopt="-fprofile-generate"; inc=1 ;;
(-fprofile-filter-files=*) canonopt="-fprofile-filter-files"; optarg="$( echo "$1" | sed -E "s^-fprofile-filter-files=^^" )"; inc=1 ;;
(-fprofile-exclude-files=*) canonopt="-fprofile-exclude-files"; optarg="$( echo "$1" | sed -E "s^-fprofile-exclude-files=^^" )"; inc=1 ;;
(-fprofile-dir=*) canonopt="-fprofile-dir"; optarg="$( echo "$1" | sed -E "s^-fprofile-dir=^^" )"; inc=1 ;;
(-fprofile-correction)   canonopt="-fprofile-correction"; inc=1 ;;
(-fprofile-arcs)   canonopt="-fprofile-arcs"; inc=1 ;;
(-fprofile-abs-path)   canonopt="-fprofile-abs-path"; inc=1 ;;
(-fprofile)   canonopt="-fprofile"; inc=1 ;;
(-fprintf-return-value)   canonopt="-fprintf-return-value"; inc=1 ;;
(-fpretty-templates)   canonopt="-fpretty-templates"; inc=1 ;;
(-fpreprocessed)   canonopt="-fpreprocessed"; inc=1 ;;
(-fprefetch-loop-arrays)   canonopt="-fprefetch-loop-arrays"; inc=1 ;;
(-fpredictive-commoning)   canonopt="-fpredictive-commoning"; inc=1 ;;
(-fpreconditions)   canonopt="-fpreconditions"; inc=1 ;;
(-fpre-ipa-mem-report)   canonopt="-fpre-ipa-mem-report"; inc=1 ;;
(-fpre-include=*) canonopt="-fpre-include"; optarg="$( echo "$1" | sed -E "s^-fpre-include=^^" )"; inc=1 ;;
(-fpostconditions)   canonopt="-fpostconditions"; inc=1 ;;
(-fpost-ipa-mem-report)   canonopt="-fpost-ipa-mem-report"; inc=1 ;;
(-fpositive-mod-floor-div)   canonopt="-fpositive-mod-floor-div"; inc=1 ;;
(-fplugin=*) canonopt="-fplugin"; optarg="$( echo "$1" | sed -E "s^-fplugin=^^" )"; inc=1 ;;
(-fplugin-arg-*) canonopt="-fplugin-arg-"; optarg="$( echo "$1" | sed -E "s^-fplugin-arg-^^" )"; inc=1 ;;
(-fplt)   canonopt="-fplt"; inc=1 ;;
(-fplan9-extensions)   canonopt="-fplan9-extensions"; inc=1 ;;
(-fpim4)   canonopt="-fpim4"; inc=1 ;;
(-fpim3)   canonopt="-fpim3"; inc=1 ;;
(-fpim2)   canonopt="-fpim2"; inc=1 ;;
(-fpim)   canonopt="-fpim"; inc=1 ;;
(-fpie)   canonopt="-fpie"; inc=1 ;;
(-fpic)   canonopt="-fpic"; inc=1 ;;
(-fpermitted-flt-eval-methods=*) canonopt="-fpermitted-flt-eval-methods"; optarg="$( echo "$1" | sed -E "s^-fpermitted-flt-eval-methods=^^" )"; inc=1 ;;
(-fpermissive)   canonopt="-fpermissive"; inc=1 ;;
(-fpeephole2)   canonopt="-fpeephole2"; inc=1 ;;
(-fpeephole)   canonopt="-fpeephole"; inc=1 ;;
(-fpeel-loops)   canonopt="-fpeel-loops"; inc=1 ;;
(-fpch-preprocess)   canonopt="-fpch-preprocess"; inc=1 ;;
(-fpch-deps)   canonopt="-fpch-deps"; inc=1 ;;
(-fpcc-struct-return)   canonopt="-fpcc-struct-return"; inc=1 ;;
(-fpatchable-function-entry=*) canonopt="-fpatchable-function-entry"; optarg="$( echo "$1" | sed -E "s^-fpatchable-function-entry=^^" )"; inc=1 ;;
(-fpartial-inlining)   canonopt="-fpartial-inlining"; inc=1 ;;
(-fpad-source)   canonopt="-fpad-source"; inc=1 ;;
(-fpack-struct=*) canonopt="-fpack-struct"; optarg="$( echo "$1" | sed -E "s^-fpack-struct=^^" )"; inc=1 ;;
(-fpack-struct)   canonopt="-fpack-struct"; inc=1 ;;
(-fpack-derived)   canonopt="-fpack-derived"; inc=1 ;;
(-foptional-diags)   canonopt="-foptional-diags"; inc=1 ;;
(-foptimize-strlen)   canonopt="-foptimize-strlen"; inc=1 ;;
(-foptimize-sibling-calls)   canonopt="-foptimize-sibling-calls"; inc=1 ;;
(-foptimize-register-move)   canonopt="-foptimize-register-move"; inc=1 ;;
(-fopt-info-*) canonopt="-fopt-info-"; optarg="$( echo "$1" | sed -E "s^-fopt-info-^^" )"; inc=1 ;;
(-fopt-info)   canonopt="-fopt-info"; inc=1 ;;
(-foperator-names)   canonopt="-foperator-names"; inc=1 ;;
(-fopenmp-simd)   canonopt="-fopenmp-simd"; inc=1 ;;
(-fopenmp)   canonopt="-fopenmp"; inc=1 ;;
(-fopenacc-dim=*) canonopt="-fopenacc-dim"; optarg="$( echo "$1" | sed -E "s^-fopenacc-dim=^^" )"; inc=1 ;;
(-fopenacc)   canonopt="-fopenacc"; inc=1 ;;
(-fonlylink)   canonopt="-fonlylink"; inc=1 ;;
(-fonly=*) canonopt="-fonly"; optarg="$( echo "$1" | sed -E "s^-fonly=^^" )"; inc=1 ;;
(-fomit-frame-pointer)   canonopt="-fomit-frame-pointer"; inc=1 ;;
(-foffload=*) canonopt="-foffload"; optarg="$( echo "$1" | sed -E "s^-foffload=^^" )"; inc=1 ;;
(-foffload-abi=*) canonopt="-foffload-abi"; optarg="$( echo "$1" | sed -E "s^-foffload-abi=^^" )"; inc=1 ;;
(-fobject-path=*) canonopt="-fobject-path"; optarg="$( echo "$1" | sed -E "s^-fobject-path=^^" )"; inc=1 ;;
(-fobjc-std=*) canonopt="-fobjc-std"; optarg="$( echo "$1" | sed -E "s^-fobjc-std=^^" )"; inc=1 ;;
(-fobjc-sjlj-exceptions)   canonopt="-fobjc-sjlj-exceptions"; inc=1 ;;
(-fobjc-nilcheck)   canonopt="-fobjc-nilcheck"; inc=1 ;;
(-fobjc-gc)   canonopt="-fobjc-gc"; inc=1 ;;
(-fobjc-exceptions)   canonopt="-fobjc-exceptions"; inc=1 ;;
(-fobjc-direct-dispatch)   canonopt="-fobjc-direct-dispatch"; inc=1 ;;
(-fobjc-call-cxx-cdtors)   canonopt="-fobjc-call-cxx-cdtors"; inc=1 ;;
(-fobjc-abi-version=*) canonopt="-fobjc-abi-version"; optarg="$( echo "$1" | sed -E "s^-fobjc-abi-version=^^" )"; inc=1 ;;
(-fnothrow-opt)   canonopt="-fnothrow-opt"; inc=1 ;;
(-fnonnull-objects)   canonopt="-fnonnull-objects"; inc=1 ;;
(-fnonansi-builtins)   canonopt="-fnonansi-builtins"; inc=1 ;;
(-fnon-call-exceptions)   canonopt="-fnon-call-exceptions"; inc=1 ;;
(-fno-threadsafe-statics)   canonopt="-fno-threadsafe-statics"; inc=1 ;;
(-fno-pthread)   canonopt="-fno-pthread"; inc=1 ;;
(-fno-m2-plugin)   canonopt="-fno-m2-plugin"; inc=1 ;;
(-fnil-receivers)   canonopt="-fnil-receivers"; inc=1 ;;
(-fnil)   canonopt="-fnil"; inc=1 ;;
(-fnext-runtime)   canonopt="-fnext-runtime"; inc=1 ;;
(-fnew-ttp-matching)   canonopt="-fnew-ttp-matching"; inc=1 ;;
(-fnew-inheriting-ctors)   canonopt="-fnew-inheriting-ctors"; inc=1 ;;
(-fnew-abi)   canonopt="-fnew-abi"; inc=1 ;;
(-fname-mangling-version-)   canonopt="-fname-mangling-version-"; inc=1 ;;
(-fmudflapth)   canonopt="-fmudflapth"; inc=1 ;;
(-fmudflapir)   canonopt="-fmudflapir"; inc=1 ;;
(-fmudflap)   canonopt="-fmudflap"; inc=1 ;;
(-fms-extensions)   canonopt="-fms-extensions"; inc=1 ;;
(-fmove-loop-invariants)   canonopt="-fmove-loop-invariants"; inc=1 ;;
(-fmodulo-sched-allow-regmoves)   canonopt="-fmodulo-sched-allow-regmoves"; inc=1 ;;
(-fmodulo-sched)   canonopt="-fmodulo-sched"; inc=1 ;;
(-fmodules)   canonopt="-fmodules"; inc=1 ;;
(-fmoduleinfo)   canonopt="-fmoduleinfo"; inc=1 ;;
(-fmodule-private)   canonopt="-fmodule-private"; inc=1 ;;
(-fmodule-file=*) canonopt="-fmodule-file"; optarg="$( echo "$1" | sed -E "s^-fmodule-file=^^" )"; inc=1 ;;
(-fmod=*) canonopt="-fmod"; optarg="$( echo "$1" | sed -E "s^-fmod=^^" )"; inc=1 ;;
(-fmessage-length=*) canonopt="-fmessage-length"; optarg="$( echo "$1" | sed -E "s^-fmessage-length=^^" )"; inc=1 ;;
(-fmerge-debug-strings)   canonopt="-fmerge-debug-strings"; inc=1 ;;
(-fmerge-constants)   canonopt="-fmerge-constants"; inc=1 ;;
(-fmerge-all-constants)   canonopt="-fmerge-all-constants"; inc=1 ;;
(-fmem-report-wpa)   canonopt="-fmem-report-wpa"; inc=1 ;;
(-fmem-report)   canonopt="-fmem-report"; inc=1 ;;
(-fmax-subrecord-length=*) canonopt="-fmax-subrecord-length"; optarg="$( echo "$1" | sed -E "s^-fmax-subrecord-length=^^" )"; inc=1 ;;
(-fmax-stack-var-size=*) canonopt="-fmax-stack-var-size"; optarg="$( echo "$1" | sed -E "s^-fmax-stack-var-size=^^" )"; inc=1 ;;
(-fmax-include-depth=*) canonopt="-fmax-include-depth"; optarg="$( echo "$1" | sed -E "s^-fmax-include-depth=^^" )"; inc=1 ;;
(-fmax-identifier-length=*) canonopt="-fmax-identifier-length"; optarg="$( echo "$1" | sed -E "s^-fmax-identifier-length=^^" )"; inc=1 ;;
(-fmax-errors=*) canonopt="-fmax-errors"; optarg="$( echo "$1" | sed -E "s^-fmax-errors=^^" )"; inc=1 ;;
(-fmax-array-constructor=*) canonopt="-fmax-array-constructor"; optarg="$( echo "$1" | sed -E "s^-fmax-array-constructor=^^" )"; inc=1 ;;
(-fmath-errno)   canonopt="-fmath-errno"; inc=1 ;;
(-fmakelist)   canonopt="-fmakelist"; inc=1 ;;
(-fmakeinit)   canonopt="-fmakeinit"; inc=1 ;;
(-fmain)   canonopt="-fmain"; inc=1 ;;
(-fmacro-prefix-map=*) canonopt="-fmacro-prefix-map"; optarg="$( echo "$1" | sed -E "s^-fmacro-prefix-map=^^" )"; inc=1 ;;
(-fm2-whole-program)   canonopt="-fm2-whole-program"; inc=1 ;;
(-fm2-version)   canonopt="-fm2-version"; inc=1 ;;
(-fm2-strict-type)   canonopt="-fm2-strict-type"; inc=1 ;;
(-fm2-statistics)   canonopt="-fm2-statistics"; inc=1 ;;
(-fm2-plugin)   canonopt="-fm2-plugin"; inc=1 ;;
(-fm2-lower-case)   canonopt="-fm2-lower-case"; inc=1 ;;
(-fm2-g)   canonopt="-fm2-g"; inc=1 ;;
(-fltrans-output-list=*) canonopt="-fltrans-output-list"; optarg="$( echo "$1" | sed -E "s^-fltrans-output-list=^^" )"; inc=1 ;;
(-fltrans)   canonopt="-fltrans"; inc=1 ;;
(-flto=*) canonopt="-flto"; optarg="$( echo "$1" | sed -E "s^-flto=^^" )"; inc=1 ;;
(-flto-report-wpa)   canonopt="-flto-report-wpa"; inc=1 ;;
(-flto-report)   canonopt="-flto-report"; inc=1 ;;
(-flto-partition=*) canonopt="-flto-partition"; optarg="$( echo "$1" | sed -E "s^-flto-partition=^^" )"; inc=1 ;;
(-flto-odr-type-merging)   canonopt="-flto-odr-type-merging"; inc=1 ;;
(-flto-compression-level=*) canonopt="-flto-compression-level"; optarg="$( echo "$1" | sed -E "s^-flto-compression-level=^^" )"; inc=1 ;;
(-flto)   canonopt="-flto"; inc=1 ;;
(-flra-remat)   canonopt="-flra-remat"; inc=1 ;;
(-floop-unroll-and-jam)   canonopt="-floop-unroll-and-jam"; inc=1 ;;
(-floop-strip-mine)   canonopt="-floop-strip-mine"; inc=1 ;;
(-floop-parallelize-all)   canonopt="-floop-parallelize-all"; inc=1 ;;
(-floop-optimize)   canonopt="-floop-optimize"; inc=1 ;;
(-floop-nest-optimize)   canonopt="-floop-nest-optimize"; inc=1 ;;
(-floop-interchange)   canonopt="-floop-interchange"; inc=1 ;;
(-floop-flatten)   canonopt="-floop-flatten"; inc=1 ;;
(-floop-block)   canonopt="-floop-block"; inc=1 ;;
(-flocation=*) canonopt="-flocation"; optarg="$( echo "$1" | sed -E "s^-flocation=^^" )"; inc=1 ;;
(-flocal-ivars)   canonopt="-flocal-ivars"; inc=1 ;;
(-flive-range-shrinkage)   canonopt="-flive-range-shrinkage"; inc=1 ;;
(-flive-patching=*) canonopt="-flive-patching"; optarg="$( echo "$1" | sed -E "s^-flive-patching=^^" )"; inc=1 ;;
(-flive-patching)   canonopt="-flive-patching"; inc=1 ;;
(-flinker-output=*) canonopt="-flinker-output"; optarg="$( echo "$1" | sed -E "s^-flinker-output=^^" )"; inc=1 ;;
(-flimit-function-alignment)   canonopt="-flimit-function-alignment"; inc=1 ;;
(-flifetime-dse=*) canonopt="-flifetime-dse"; optarg="$( echo "$1" | sed -E "s^-flifetime-dse=^^" )"; inc=1 ;;
(-flifetime-dse)   canonopt="-flifetime-dse"; inc=1 ;;
(-flibs=*) canonopt="-flibs"; optarg="$( echo "$1" | sed -E "s^-flibs=^^" )"; inc=1 ;;
(-fleading-underscore)   canonopt="-fleading-underscore"; inc=1 ;;
(-flax-vector-conversions)   canonopt="-flax-vector-conversions"; inc=1 ;;
(-flabels-ok)   canonopt="-flabels-ok"; inc=1 ;;
(-fkeep-static-functions)   canonopt="-fkeep-static-functions"; inc=1 ;;
(-fkeep-static-consts)   canonopt="-fkeep-static-consts"; inc=1 ;;
(-fkeep-inline-functions)   canonopt="-fkeep-inline-functions"; inc=1 ;;
(-fkeep-gc-roots-live)   canonopt="-fkeep-gc-roots-live"; inc=1 ;;
(-fjump-tables)   canonopt="-fjump-tables"; inc=1 ;;
(-fivopts)   canonopt="-fivopts"; inc=1 ;;
(-fisolate-erroneous-paths-dereference)   canonopt="-fisolate-erroneous-paths-dereference"; inc=1 ;;
(-fisolate-erroneous-paths-attribute)   canonopt="-fisolate-erroneous-paths-attribute"; inc=1 ;;
(-fiso)   canonopt="-fiso"; inc=1 ;;
(-fira-verbose=*) canonopt="-fira-verbose"; optarg="$( echo "$1" | sed -E "s^-fira-verbose=^^" )"; inc=1 ;;
(-fira-share-spill-slots)   canonopt="-fira-share-spill-slots"; inc=1 ;;
(-fira-share-save-slots)   canonopt="-fira-share-save-slots"; inc=1 ;;
(-fira-region=*) canonopt="-fira-region"; optarg="$( echo "$1" | sed -E "s^-fira-region=^^" )"; inc=1 ;;
(-fira-loop-pressure)   canonopt="-fira-loop-pressure"; inc=1 ;;
(-fira-hoist-pressure)   canonopt="-fira-hoist-pressure"; inc=1 ;;
(-fira-algorithm=*) canonopt="-fira-algorithm"; optarg="$( echo "$1" | sed -E "s^-fira-algorithm=^^" )"; inc=1 ;;
(-fipa-vrp)   canonopt="-fipa-vrp"; inc=1 ;;
(-fipa-struct-reorg)   canonopt="-fipa-struct-reorg"; inc=1 ;;
(-fipa-stack-alignment)   canonopt="-fipa-stack-alignment"; inc=1 ;;
(-fipa-sra)   canonopt="-fipa-sra"; inc=1 ;;
(-fipa-reference-addressable)   canonopt="-fipa-reference-addressable"; inc=1 ;;
(-fipa-reference)   canonopt="-fipa-reference"; inc=1 ;;
(-fipa-ra)   canonopt="-fipa-ra"; inc=1 ;;
(-fipa-pure-const)   canonopt="-fipa-pure-const"; inc=1 ;;
(-fipa-pta)   canonopt="-fipa-pta"; inc=1 ;;
(-fipa-profile)   canonopt="-fipa-profile"; inc=1 ;;
(-fipa-matrix-reorg)   canonopt="-fipa-matrix-reorg"; inc=1 ;;
(-fipa-icf-variables)   canonopt="-fipa-icf-variables"; inc=1 ;;
(-fipa-icf-functions)   canonopt="-fipa-icf-functions"; inc=1 ;;
(-fipa-icf)   canonopt="-fipa-icf"; inc=1 ;;
(-fipa-cp-clone)   canonopt="-fipa-cp-clone"; inc=1 ;;
(-fipa-cp-alignment)   canonopt="-fipa-cp-alignment"; inc=1 ;;
(-fipa-cp)   canonopt="-fipa-cp"; inc=1 ;;
(-fipa-bit-cp)   canonopt="-fipa-bit-cp"; inc=1 ;;
(-finvariants)   canonopt="-finvariants"; inc=1 ;;
(-fintrinsic-modules-path)  canonopt="-fintrinsic-modules-path"; optarg="$2"; inc=2;;
(-fintrinsic-modules-path=*) canonopt="-fintrinsic-modules-path"; optarg="$( echo "$1" | sed -E "s^-fintrinsic-modules-path=^^" )"; inc=1 ;;
(-finteger-4-integer-8)   canonopt="-finteger-4-integer-8"; inc=1 ;;
(-finstrument-functions-exclude-function-list=*) canonopt="-finstrument-functions-exclude-function-list"; optarg="$( echo "$1" | sed -E "s^-finstrument-functions-exclude-function-list=^^" )"; inc=1 ;;
(-finstrument-functions-exclude-file-list=*) canonopt="-finstrument-functions-exclude-file-list"; optarg="$( echo "$1" | sed -E "s^-finstrument-functions-exclude-file-list=^^" )"; inc=1 ;;
(-finstrument-functions)   canonopt="-finstrument-functions"; inc=1 ;;
(-finput-charset=*) canonopt="-finput-charset"; optarg="$( echo "$1" | sed -E "s^-finput-charset=^^" )"; inc=1 ;;
(-finline-small-functions)   canonopt="-finline-small-functions"; inc=1 ;;
(-finline-matmul-limit=*) canonopt="-finline-matmul-limit"; optarg="$( echo "$1" | sed -E "s^-finline-matmul-limit=^^" )"; inc=1 ;;
(-finline-limit=*) canonopt="-finline-limit"; optarg="$( echo "$1" | sed -E "s^-finline-limit=^^" )"; inc=1 ;;
(-finline-limit-)   canonopt="-finline-limit-"; inc=1 ;;
(-finline-functions-called-once)   canonopt="-finline-functions-called-once"; inc=1 ;;
(-finline-functions)   canonopt="-finline-functions"; inc=1 ;;
(-finline-atomics)   canonopt="-finline-atomics"; inc=1 ;;
(-finline-arg-packing)   canonopt="-finline-arg-packing"; inc=1 ;;
(-finline)   canonopt="-finline"; inc=1 ;;
(-finit-real=*) canonopt="-finit-real"; optarg="$( echo "$1" | sed -E "s^-finit-real=^^" )"; inc=1 ;;
(-finit-logical=*) canonopt="-finit-logical"; optarg="$( echo "$1" | sed -E "s^-finit-logical=^^" )"; inc=1 ;;
(-finit-local-zero)   canonopt="-finit-local-zero"; inc=1 ;;
(-finit-integer=*) canonopt="-finit-integer"; optarg="$( echo "$1" | sed -E "s^-finit-integer=^^" )"; inc=1 ;;
(-finit-derived)   canonopt="-finit-derived"; inc=1 ;;
(-finit-character=*) canonopt="-finit-character"; optarg="$( echo "$1" | sed -E "s^-finit-character=^^" )"; inc=1 ;;
(-finhibit-size-directive)   canonopt="-finhibit-size-directive"; inc=1 ;;
(-findirect-inlining)   canonopt="-findirect-inlining"; inc=1 ;;
(-findex)   canonopt="-findex"; inc=1 ;;
(-fimplicit-templates)   canonopt="-fimplicit-templates"; inc=1 ;;
(-fimplicit-none)   canonopt="-fimplicit-none"; inc=1 ;;
(-fimplicit-inline-templates)   canonopt="-fimplicit-inline-templates"; inc=1 ;;
(-fimplement-inlines)   canonopt="-fimplement-inlines"; inc=1 ;;
(-fignore-unknown-pragmas)   canonopt="-fignore-unknown-pragmas"; inc=1 ;;
(-fif-conversion2)   canonopt="-fif-conversion2"; inc=1 ;;
(-fif-conversion)   canonopt="-fif-conversion"; inc=1 ;;
(-fident)   canonopt="-fident"; inc=1 ;;
(-fhuge-objects)   canonopt="-fhuge-objects"; inc=1 ;;
(-fhosted)   canonopt="-fhosted"; inc=1 ;;
(-fhonor-std)   canonopt="-fhonor-std"; inc=1 ;;
(-fhoist-adjacent-loads)   canonopt="-fhoist-adjacent-loads"; inc=1 ;;
(-fhelp=*) canonopt="-fhelp"; optarg="$( echo "$1" | sed -E "s^-fhelp=^^" )"; inc=1 ;;
(-fhelp)   canonopt="-fhelp"; inc=1 ;;
(-fhandle-exceptions)   canonopt="-fhandle-exceptions"; inc=1 ;;
(-fguiding-decls)   canonopt="-fguiding-decls"; inc=1 ;;
(-fguess-branch-probability)   canonopt="-fguess-branch-probability"; inc=1 ;;
(-fgraphite-identity)   canonopt="-fgraphite-identity"; inc=1 ;;
(-fgraphite)   canonopt="-fgraphite"; inc=1 ;;
(-fgo-relative-import-path=*) canonopt="-fgo-relative-import-path"; optarg="$( echo "$1" | sed -E "s^-fgo-relative-import-path=^^" )"; inc=1 ;;
(-fgo-prefix=*) canonopt="-fgo-prefix"; optarg="$( echo "$1" | sed -E "s^-fgo-prefix=^^" )"; inc=1 ;;
(-fgo-pkgpath=*) canonopt="-fgo-pkgpath"; optarg="$( echo "$1" | sed -E "s^-fgo-pkgpath=^^" )"; inc=1 ;;
(-fgo-optimize-*) canonopt="-fgo-optimize-"; optarg="$( echo "$1" | sed -E "s^-fgo-optimize-^^" )"; inc=1 ;;
(-fgo-dump-*) canonopt="-fgo-dump-"; optarg="$( echo "$1" | sed -E "s^-fgo-dump-^^" )"; inc=1 ;;
(-fgo-debug-optimization)   canonopt="-fgo-debug-optimization"; inc=1 ;;
(-fgo-debug-escape-hash=*) canonopt="-fgo-debug-escape-hash"; optarg="$( echo "$1" | sed -E "s^-fgo-debug-escape-hash=^^" )"; inc=1 ;;
(-fgo-debug-escape)   canonopt="-fgo-debug-escape"; inc=1 ;;
(-fgo-compiling-runtime)   canonopt="-fgo-compiling-runtime"; inc=1 ;;
(-fgo-check-divide-zero)   canonopt="-fgo-check-divide-zero"; inc=1 ;;
(-fgo-check-divide-overflow)   canonopt="-fgo-check-divide-overflow"; inc=1 ;;
(-fgo-c-header=*) canonopt="-fgo-c-header"; optarg="$( echo "$1" | sed -E "s^-fgo-c-header=^^" )"; inc=1 ;;
(-fgnu89-inline)   canonopt="-fgnu89-inline"; inc=1 ;;
(-fgnu-unique)   canonopt="-fgnu-unique"; inc=1 ;;
(-fgnu-tm)   canonopt="-fgnu-tm"; inc=1 ;;
(-fgnu-runtime)   canonopt="-fgnu-runtime"; inc=1 ;;
(-fgnu-keywords)   canonopt="-fgnu-keywords"; inc=1 ;;
(-fgnat-encodings=*) canonopt="-fgnat-encodings"; optarg="$( echo "$1" | sed -E "s^-fgnat-encodings=^^" )"; inc=1 ;;
(-fgimple)   canonopt="-fgimple"; inc=1 ;;
(-fgcse-sm)   canonopt="-fgcse-sm"; inc=1 ;;
(-fgcse-lm)   canonopt="-fgcse-lm"; inc=1 ;;
(-fgcse-las)   canonopt="-fgcse-las"; inc=1 ;;
(-fgcse-after-reload)   canonopt="-fgcse-after-reload"; inc=1 ;;
(-fgcse)   canonopt="-fgcse"; inc=1 ;;
(-ffunction-sections)   canonopt="-ffunction-sections"; inc=1 ;;
(-ffunction-cse)   canonopt="-ffunction-cse"; inc=1 ;;
(-ffrontend-optimize)   canonopt="-ffrontend-optimize"; inc=1 ;;
(-ffrontend-loop-interchange)   canonopt="-ffrontend-loop-interchange"; inc=1 ;;
(-ffriend-injection)   canonopt="-ffriend-injection"; inc=1 ;;
(-ffreestanding)   canonopt="-ffreestanding"; inc=1 ;;
(-ffree-line-length-none)   canonopt="-ffree-line-length-none"; inc=1 ;;
(-ffree-line-length-*) canonopt="-ffree-line-length-"; optarg="$( echo "$1" | sed -E "s^-ffree-line-length-^^" )"; inc=1 ;;
(-ffree-form)   canonopt="-ffree-form"; inc=1 ;;
(-ffpe-trap=*) canonopt="-ffpe-trap"; optarg="$( echo "$1" | sed -E "s^-ffpe-trap=^^" )"; inc=1 ;;
(-ffpe-summary=*) canonopt="-ffpe-summary"; optarg="$( echo "$1" | sed -E "s^-ffpe-summary=^^" )"; inc=1 ;;
(-ffp-int-builtin-inexact)   canonopt="-ffp-int-builtin-inexact"; inc=1 ;;
(-ffp-contract=*) canonopt="-ffp-contract"; optarg="$( echo "$1" | sed -E "s^-ffp-contract=^^" )"; inc=1 ;;
(-fforward-propagate)   canonopt="-fforward-propagate"; inc=1 ;;
(-fforce-addr)   canonopt="-fforce-addr"; inc=1 ;;
(-ffor-scope)   canonopt="-ffor-scope"; inc=1 ;;
(-ffloatvalue)   canonopt="-ffloatvalue"; inc=1 ;;
(-ffloat-store)   canonopt="-ffloat-store"; inc=1 ;;
(-ffixed-line-length-none)   canonopt="-ffixed-line-length-none"; inc=1 ;;
(-ffixed-line-length-*) canonopt="-ffixed-line-length-"; optarg="$( echo "$1" | sed -E "s^-ffixed-line-length-^^" )"; inc=1 ;;
(-ffixed-form)   canonopt="-ffixed-form"; inc=1 ;;
(-ffixed-*) canonopt="-ffixed-"; optarg="$( echo "$1" | sed -E "s^-ffixed-^^" )"; inc=1 ;;
(-ffinite-math-only)   canonopt="-ffinite-math-only"; inc=1 ;;
(-ffinite-loops)   canonopt="-ffinite-loops"; inc=1 ;;
(-ffile-prefix-map=*) canonopt="-ffile-prefix-map"; optarg="$( echo "$1" | sed -E "s^-ffile-prefix-map=^^" )"; inc=1 ;;
(-ffat-lto-objects)   canonopt="-ffat-lto-objects"; inc=1 ;;
(-ffast-math)   canonopt="-ffast-math"; inc=1 ;;
(-ff2c)   canonopt="-ff2c"; inc=1 ;;
(-fexternal-templates)   canonopt="-fexternal-templates"; inc=1 ;;
(-fexternal-blas)   canonopt="-fexternal-blas"; inc=1 ;;
(-fextern-tls-init)   canonopt="-fextern-tls-init"; inc=1 ;;
(-fextended-opaque)   canonopt="-fextended-opaque"; inc=1 ;;
(-fextended-identifiers)   canonopt="-fextended-identifiers"; inc=1 ;;
(-fext-numeric-literals)   canonopt="-fext-numeric-literals"; inc=1 ;;
(-fexpensive-optimizations)   canonopt="-fexpensive-optimizations"; inc=1 ;;
(-fexec-charset=*) canonopt="-fexec-charset"; optarg="$( echo "$1" | sed -E "s^-fexec-charset=^^" )"; inc=1 ;;
(-fexcess-precision=*) canonopt="-fexcess-precision"; optarg="$( echo "$1" | sed -E "s^-fexcess-precision=^^" )"; inc=1 ;;
(-fexceptions)   canonopt="-fexceptions"; inc=1 ;;
(-fenum-int-equiv)   canonopt="-fenum-int-equiv"; inc=1 ;;
(-fenforce-eh-specs)   canonopt="-fenforce-eh-specs"; inc=1 ;;
(-fenable-*) canonopt="-fenable-"; optarg="$( echo "$1" | sed -E "s^-fenable-^^" )"; inc=1 ;;
(-femit-struct-debug-reduced)   canonopt="-femit-struct-debug-reduced"; inc=1 ;;
(-femit-struct-debug-detailed=*) canonopt="-femit-struct-debug-detailed"; optarg="$( echo "$1" | sed -E "s^-femit-struct-debug-detailed=^^" )"; inc=1 ;;
(-femit-struct-debug-baseonly)   canonopt="-femit-struct-debug-baseonly"; inc=1 ;;
(-femit-class-debug-always)   canonopt="-femit-class-debug-always"; inc=1 ;;
(-feliminate-unused-debug-types)   canonopt="-feliminate-unused-debug-types"; inc=1 ;;
(-feliminate-unused-debug-symbols)   canonopt="-feliminate-unused-debug-symbols"; inc=1 ;;
(-feliminate-dwarf2-dups)   canonopt="-feliminate-dwarf2-dups"; inc=1 ;;
(-felide-type)   canonopt="-felide-type"; inc=1 ;;
(-felide-constructors)   canonopt="-felide-constructors"; inc=1 ;;
(-fearly-inlining)   canonopt="-fearly-inlining"; inc=1 ;;
(-fdwarf2-cfi-asm)   canonopt="-fdwarf2-cfi-asm"; inc=1 ;;
(-fdump-unnumbered-links)   canonopt="-fdump-unnumbered-links"; inc=1 ;;
(-fdump-unnumbered)   canonopt="-fdump-unnumbered"; inc=1 ;;
(-fdump-system-exports)   canonopt="-fdump-system-exports"; inc=1 ;;
(-fdump-passes)   canonopt="-fdump-passes"; inc=1 ;;
(-fdump-parse-tree)   canonopt="-fdump-parse-tree"; inc=1 ;;
(-fdump-noaddr)   canonopt="-fdump-noaddr"; inc=1 ;;
(-fdump-internal-locations)   canonopt="-fdump-internal-locations"; inc=1 ;;
(-fdump-go-spec=*) canonopt="-fdump-go-spec"; optarg="$( echo "$1" | sed -E "s^-fdump-go-spec=^^" )"; inc=1 ;;
(-fdump-fortran-original)   canonopt="-fdump-fortran-original"; inc=1 ;;
(-fdump-fortran-optimized)   canonopt="-fdump-fortran-optimized"; inc=1 ;;
(-fdump-fortran-global)   canonopt="-fdump-fortran-global"; inc=1 ;;
(-fdump-final-insns=*) canonopt="-fdump-final-insns"; optarg="$( echo "$1" | sed -E "s^-fdump-final-insns=^^" )"; inc=1 ;;
(-fdump-d-original)   canonopt="-fdump-d-original"; inc=1 ;;
(-fdump-core)   canonopt="-fdump-core"; inc=1 ;;
(-fdump-analyzer-supergraph)   canonopt="-fdump-analyzer-supergraph"; inc=1 ;;
(-fdump-analyzer-stderr)   canonopt="-fdump-analyzer-stderr"; inc=1 ;;
(-fdump-analyzer-state-purge)   canonopt="-fdump-analyzer-state-purge"; inc=1 ;;
(-fdump-analyzer-exploded-nodes-3)   canonopt="-fdump-analyzer-exploded-nodes-3"; inc=1 ;;
(-fdump-analyzer-exploded-nodes-2)   canonopt="-fdump-analyzer-exploded-nodes-2"; inc=1 ;;
(-fdump-analyzer-exploded-nodes)   canonopt="-fdump-analyzer-exploded-nodes"; inc=1 ;;
(-fdump-analyzer-exploded-graph)   canonopt="-fdump-analyzer-exploded-graph"; inc=1 ;;
(-fdump-analyzer-callgraph)   canonopt="-fdump-analyzer-callgraph"; inc=1 ;;
(-fdump-analyzer)   canonopt="-fdump-analyzer"; inc=1 ;;
(-fdump-ada-spec-slim)   canonopt="-fdump-ada-spec-slim"; inc=1 ;;
(-fdump-ada-spec)   canonopt="-fdump-ada-spec"; inc=1 ;;
(-fdump-*) canonopt="-fdump-"; optarg="$( echo "$1" | sed -E "s^-fdump-^^" )"; inc=1 ;;
(-fdse)   canonopt="-fdse"; inc=1 ;;
(-fdruntime)   canonopt="-fdruntime"; inc=1 ;;
(-fdollars-in-identifiers)   canonopt="-fdollars-in-identifiers"; inc=1 ;;
(-fdollar-ok)   canonopt="-fdollar-ok"; inc=1 ;;
(-fdoc-inc=*) canonopt="-fdoc-inc"; optarg="$( echo "$1" | sed -E "s^-fdoc-inc=^^" )"; inc=1 ;;
(-fdoc-file=*) canonopt="-fdoc-file"; optarg="$( echo "$1" | sed -E "s^-fdoc-file=^^" )"; inc=1 ;;
(-fdoc-dir=*) canonopt="-fdoc-dir"; optarg="$( echo "$1" | sed -E "s^-fdoc-dir=^^" )"; inc=1 ;;
(-fdoc)   canonopt="-fdoc"; inc=1 ;;
(-fdisable-*) canonopt="-fdisable-"; optarg="$( echo "$1" | sed -E "s^-fdisable-^^" )"; inc=1 ;;
(-fdirectives-only)   canonopt="-fdirectives-only"; inc=1 ;;
(-fdiagnostics-urls=*) canonopt="-fdiagnostics-urls"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-urls=^^" )"; inc=1 ;;
(-fdiagnostics-show-template-tree)   canonopt="-fdiagnostics-show-template-tree"; inc=1 ;;
(-fdiagnostics-show-path-depths)   canonopt="-fdiagnostics-show-path-depths"; inc=1 ;;
(-fdiagnostics-show-option)   canonopt="-fdiagnostics-show-option"; inc=1 ;;
(-fdiagnostics-show-location=*) canonopt="-fdiagnostics-show-location"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-show-location=^^" )"; inc=1 ;;
(-fdiagnostics-show-line-numbers)   canonopt="-fdiagnostics-show-line-numbers"; inc=1 ;;
(-fdiagnostics-show-labels)   canonopt="-fdiagnostics-show-labels"; inc=1 ;;
(-fdiagnostics-show-cwe)   canonopt="-fdiagnostics-show-cwe"; inc=1 ;;
(-fdiagnostics-show-caret)   canonopt="-fdiagnostics-show-caret"; inc=1 ;;
(-fdiagnostics-path-format=*) canonopt="-fdiagnostics-path-format"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-path-format=^^" )"; inc=1 ;;
(-fdiagnostics-parseable-fixits)   canonopt="-fdiagnostics-parseable-fixits"; inc=1 ;;
(-fdiagnostics-minimum-margin-width=*) canonopt="-fdiagnostics-minimum-margin-width"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-minimum-margin-width=^^" )"; inc=1 ;;
(-fdiagnostics-generate-patch)   canonopt="-fdiagnostics-generate-patch"; inc=1 ;;
(-fdiagnostics-format=*) canonopt="-fdiagnostics-format"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-format=^^" )"; inc=1 ;;
(-fdiagnostics-color=*) canonopt="-fdiagnostics-color"; optarg="$( echo "$1" | sed -E "s^-fdiagnostics-color=^^" )"; inc=1 ;;
(-fdiagnostics-color)   canonopt="-fdiagnostics-color"; inc=1 ;;
(-fdevirtualize-speculatively)   canonopt="-fdevirtualize-speculatively"; inc=1 ;;
(-fdevirtualize-at-ltrans)   canonopt="-fdevirtualize-at-ltrans"; inc=1 ;;
(-fdevirtualize)   canonopt="-fdevirtualize"; inc=1 ;;
(-fdelete-null-pointer-checks)   canonopt="-fdelete-null-pointer-checks"; inc=1 ;;
(-fdelete-dead-exceptions)   canonopt="-fdelete-dead-exceptions"; inc=1 ;;
(-fdelayed-branch)   canonopt="-fdelayed-branch"; inc=1 ;;
(-fdefer-pop)   canonopt="-fdefer-pop"; inc=1 ;;
(-fdefault-real-8)   canonopt="-fdefault-real-8"; inc=1 ;;
(-fdefault-real-16)   canonopt="-fdefault-real-16"; inc=1 ;;
(-fdefault-real-10)   canonopt="-fdefault-real-10"; inc=1 ;;
(-fdefault-integer-8)   canonopt="-fdefault-integer-8"; inc=1 ;;
(-fdefault-inline)   canonopt="-fdefault-inline"; inc=1 ;;
(-fdefault-double-8)   canonopt="-fdefault-double-8"; inc=1 ;;
(-fdef=*) canonopt="-fdef"; optarg="$( echo "$1" | sed -E "s^-fdef=^^" )"; inc=1 ;;
(-fdeduce-init-list)   canonopt="-fdeduce-init-list"; inc=1 ;;
(-fdeclone-ctor-dtor)   canonopt="-fdeclone-ctor-dtor"; inc=1 ;;
(-fdec-structure)   canonopt="-fdec-structure"; inc=1 ;;
(-fdec-static)   canonopt="-fdec-static"; inc=1 ;;
(-fdec-math)   canonopt="-fdec-math"; inc=1 ;;
(-fdec-intrinsic-ints)   canonopt="-fdec-intrinsic-ints"; inc=1 ;;
(-fdec-include)   canonopt="-fdec-include"; inc=1 ;;
(-fdec-format-defaults)   canonopt="-fdec-format-defaults"; inc=1 ;;
(-fdec-char-conversions)   canonopt="-fdec-char-conversions"; inc=1 ;;
(-fdec-blank-format-item)   canonopt="-fdec-blank-format-item"; inc=1 ;;
(-fdec)   canonopt="-fdec"; inc=1 ;;
(-fdebug=*) canonopt="-fdebug"; optarg="$( echo "$1" | sed -E "s^-fdebug=^^" )"; inc=1 ;;
(-fdebug-types-section)   canonopt="-fdebug-types-section"; inc=1 ;;
(-fdebug-trace-quad)   canonopt="-fdebug-trace-quad"; inc=1 ;;
(-fdebug-trace-api)   canonopt="-fdebug-trace-api"; inc=1 ;;
(-fdebug-prefix-map=*) canonopt="-fdebug-prefix-map"; optarg="$( echo "$1" | sed -E "s^-fdebug-prefix-map=^^" )"; inc=1 ;;
(-fdebug-function-line-numbers)   canonopt="-fdebug-function-line-numbers"; inc=1 ;;
(-fdebug-cpp)   canonopt="-fdebug-cpp"; inc=1 ;;
(-fdebug-builtins)   canonopt="-fdebug-builtins"; inc=1 ;;
(-fdebug)   canonopt="-fdebug"; inc=1 ;;
(-fdce)   canonopt="-fdce"; inc=1 ;;
(-fdbg-cnt=*) canonopt="-fdbg-cnt"; optarg="$( echo "$1" | sed -E "s^-fdbg-cnt=^^" )"; inc=1 ;;
(-fdbg-cnt-list)   canonopt="-fdbg-cnt-list"; inc=1 ;;
(-fdata-sections)   canonopt="-fdata-sections"; inc=1 ;;
(-fd-lines-as-comments)   canonopt="-fd-lines-as-comments"; inc=1 ;;
(-fd-lines-as-code)   canonopt="-fd-lines-as-code"; inc=1 ;;
(-fd)   canonopt="-fd"; inc=1 ;;
(-fcx-limited-range)   canonopt="-fcx-limited-range"; inc=1 ;;
(-fcx-fortran-rules)   canonopt="-fcx-fortran-rules"; inc=1 ;;
(-fcse-skip-blocks)   canonopt="-fcse-skip-blocks"; inc=1 ;;
(-fcse-follow-jumps)   canonopt="-fcse-follow-jumps"; inc=1 ;;
(-fcrossjumping)   canonopt="-fcrossjumping"; inc=1 ;;
(-fcray-pointer)   canonopt="-fcray-pointer"; inc=1 ;;
(-fcprop-registers)   canonopt="-fcprop-registers"; inc=1 ;;
(-fcppprog=*) canonopt="-fcppprog"; optarg="$( echo "$1" | sed -E "s^-fcppprog=^^" )"; inc=1 ;;
(-fcppend)   canonopt="-fcppend"; inc=1 ;;
(-fcppbegin)   canonopt="-fcppbegin"; inc=1 ;;
(-fcpp)   canonopt="-fcpp"; inc=1 ;;
(-fcoroutines)   canonopt="-fcoroutines"; inc=1 ;;
(-fconvert=*) canonopt="-fconvert"; optarg="$( echo "$1" | sed -E "s^-fconvert=^^" )"; inc=1 ;;
(-fconstexpr-ops-limit=*) canonopt="-fconstexpr-ops-limit"; optarg="$( echo "$1" | sed -E "s^-fconstexpr-ops-limit=^^" )"; inc=1 ;;
(-fconstexpr-loop-limit=*) canonopt="-fconstexpr-loop-limit"; optarg="$( echo "$1" | sed -E "s^-fconstexpr-loop-limit=^^" )"; inc=1 ;;
(-fconstexpr-depth=*) canonopt="-fconstexpr-depth"; optarg="$( echo "$1" | sed -E "s^-fconstexpr-depth=^^" )"; inc=1 ;;
(-fconstexpr-cache-depth=*) canonopt="-fconstexpr-cache-depth"; optarg="$( echo "$1" | sed -E "s^-fconstexpr-cache-depth=^^" )"; inc=1 ;;
(-fconst-string-class=*) canonopt="-fconst-string-class"; optarg="$( echo "$1" | sed -E "s^-fconst-string-class=^^" )"; inc=1 ;;
(-fconserve-stack)   canonopt="-fconserve-stack"; inc=1 ;;
(-fconserve-space)   canonopt="-fconserve-space"; inc=1 ;;
(-fcond-mismatch)   canonopt="-fcond-mismatch"; inc=1 ;;
(-fconcepts-ts)   canonopt="-fconcepts-ts"; inc=1 ;;
(-fconcepts-diagnostics-depth=*) canonopt="-fconcepts-diagnostics-depth"; optarg="$( echo "$1" | sed -E "s^-fconcepts-diagnostics-depth=^^" )"; inc=1 ;;
(-fconcepts)   canonopt="-fconcepts"; inc=1 ;;
(-fcompare-elim)   canonopt="-fcompare-elim"; inc=1 ;;
(-fcompare-debug[=*) canonopt="-fcompare-debug["; optarg="$( echo "$1" | sed -E "s^-fcompare-debug[=^^" )"; inc=1 ;;
(-fcompare-debug-second)   canonopt="-fcompare-debug-second"; inc=1 ;;
(-fcommon)   canonopt="-fcommon"; inc=1 ;;
(-fcombine-stack-adjustments)   canonopt="-fcombine-stack-adjustments"; inc=1 ;;
(-fcode-hoisting)   canonopt="-fcode-hoisting"; inc=1 ;;
(-fcoarray=*) canonopt="-fcoarray"; optarg="$( echo "$1" | sed -E "s^-fcoarray=^^" )"; inc=1 ;;
(-fcilkplus)   canonopt="-fcilkplus"; inc=1 ;;
(-fchkp-zero-input-bounds-for-main)   canonopt="-fchkp-zero-input-bounds-for-main"; inc=1 ;;
(-fchkp-use-wrappers)   canonopt="-fchkp-use-wrappers"; inc=1 ;;
(-fchkp-use-static-const-bounds)   canonopt="-fchkp-use-static-const-bounds"; inc=1 ;;
(-fchkp-use-static-bounds)   canonopt="-fchkp-use-static-bounds"; inc=1 ;;
(-fchkp-use-nochk-string-functions)   canonopt="-fchkp-use-nochk-string-functions"; inc=1 ;;
(-fchkp-use-fast-string-functions)   canonopt="-fchkp-use-fast-string-functions"; inc=1 ;;
(-fchkp-treat-zero-dynamic-size-as-infinite)   canonopt="-fchkp-treat-zero-dynamic-size-as-infinite"; inc=1 ;;
(-fchkp-store-bounds)   canonopt="-fchkp-store-bounds"; inc=1 ;;
(-fchkp-optimize)   canonopt="-fchkp-optimize"; inc=1 ;;
(-fchkp-narrow-to-innermost-array)   canonopt="-fchkp-narrow-to-innermost-array"; inc=1 ;;
(-fchkp-narrow-bounds)   canonopt="-fchkp-narrow-bounds"; inc=1 ;;
(-fchkp-instrument-marked-only)   canonopt="-fchkp-instrument-marked-only"; inc=1 ;;
(-fchkp-instrument-calls)   canonopt="-fchkp-instrument-calls"; inc=1 ;;
(-fchkp-flexible-struct-trailing-arrays)   canonopt="-fchkp-flexible-struct-trailing-arrays"; inc=1 ;;
(-fchkp-first-field-has-own-bounds)   canonopt="-fchkp-first-field-has-own-bounds"; inc=1 ;;
(-fchkp-check-write)   canonopt="-fchkp-check-write"; inc=1 ;;
(-fchkp-check-read)   canonopt="-fchkp-check-read"; inc=1 ;;
(-fchkp-check-incomplete-type)   canonopt="-fchkp-check-incomplete-type"; inc=1 ;;
(-fchecking=*) canonopt="-fchecking"; optarg="$( echo "$1" | sed -E "s^-fchecking=^^" )"; inc=1 ;;
(-fchecking)   canonopt="-fchecking"; inc=1 ;;
(-fcheck=*) canonopt="-fcheck"; optarg="$( echo "$1" | sed -E "s^-fcheck=^^" )"; inc=1 ;;
(-fcheck-pointer-bounds)   canonopt="-fcheck-pointer-bounds"; inc=1 ;;
(-fcheck-new)   canonopt="-fcheck-new"; inc=1 ;;
(-fcheck-data-deps)   canonopt="-fcheck-data-deps"; inc=1 ;;
(-fcheck-array-temporaries)   canonopt="-fcheck-array-temporaries"; inc=1 ;;
(-fchar8_t)   canonopt="-fchar8_t"; inc=1 ;;
(-fcf-protection=*) canonopt="-fcf-protection"; optarg="$( echo "$1" | sed -E "s^-fcf-protection=^^" )"; inc=1 ;;
(-fcf-protection)   canonopt="-fcf-protection"; inc=1 ;;
(-fcase)   canonopt="-fcase"; inc=1 ;;
(-fcanonical-system-headers)   canonopt="-fcanonical-system-headers"; inc=1 ;;
(-fcallgraph-info=*) canonopt="-fcallgraph-info"; optarg="$( echo "$1" | sed -E "s^-fcallgraph-info=^^" )"; inc=1 ;;
(-fcallgraph-info)   canonopt="-fcallgraph-info"; inc=1 ;;
(-fcaller-saves)   canonopt="-fcaller-saves"; inc=1 ;;
(-fcall-used-*) canonopt="-fcall-used-"; optarg="$( echo "$1" | sed -E "s^-fcall-used-^^" )"; inc=1 ;;
(-fcall-saved-*) canonopt="-fcall-saved-"; optarg="$( echo "$1" | sed -E "s^-fcall-saved-^^" )"; inc=1 ;;
(-fc-prototypes-external)   canonopt="-fc-prototypes-external"; inc=1 ;;
(-fc-prototypes)   canonopt="-fc-prototypes"; inc=1 ;;
(-fbuiltin-)   canonopt="-fbuiltin-"; inc=1 ;;
(-fbuiltin)   canonopt="-fbuiltin"; inc=1 ;;
(-fbuilding-libphobos-tests)   canonopt="-fbuilding-libphobos-tests"; inc=1 ;;
(-fbuilding-libgcc)   canonopt="-fbuilding-libgcc"; inc=1 ;;
(-fbtr-bb-exclusive)   canonopt="-fbtr-bb-exclusive"; inc=1 ;;
(-fbranch-target-load-optimize2)   canonopt="-fbranch-target-load-optimize2"; inc=1 ;;
(-fbranch-target-load-optimize)   canonopt="-fbranch-target-load-optimize"; inc=1 ;;
(-fbranch-probabilities)   canonopt="-fbranch-probabilities"; inc=1 ;;
(-fbranch-count-reg)   canonopt="-fbranch-count-reg"; inc=1 ;;
(-fbounds-check=*) canonopt="-fbounds-check"; optarg="$( echo "$1" | sed -E "s^-fbounds-check=^^" )"; inc=1 ;;
(-fbounds-check)   canonopt="-fbounds-check"; inc=1 ;;
(-fbounds)   canonopt="-fbounds"; inc=1 ;;
(-fblas-matmul-limit=*) canonopt="-fblas-matmul-limit"; optarg="$( echo "$1" | sed -E "s^-fblas-matmul-limit=^^" )"; inc=1 ;;
(-fbacktrace)   canonopt="-fbacktrace"; inc=1 ;;
(-fbackslash)   canonopt="-fbackslash"; inc=1 ;;
(-fautomatic)   canonopt="-fautomatic"; inc=1 ;;
(-fauto-profile=*) canonopt="-fauto-profile"; optarg="$( echo "$1" | sed -E "s^-fauto-profile=^^" )"; inc=1 ;;
(-fauto-profile)   canonopt="-fauto-profile"; inc=1 ;;
(-fauto-init)   canonopt="-fauto-init"; inc=1 ;;
(-fauto-inc-dec)   canonopt="-fauto-inc-dec"; inc=1 ;;
(-fasynchronous-unwind-tables)   canonopt="-fasynchronous-unwind-tables"; inc=1 ;;
(-fassociative-math)   canonopt="-fassociative-math"; inc=1 ;;
(-fassert)   canonopt="-fassert"; inc=1 ;;
(-fasm)   canonopt="-fasm"; inc=1 ;;
(-fasan-shadow-offset=*) canonopt="-fasan-shadow-offset"; optarg="$( echo "$1" | sed -E "s^-fasan-shadow-offset=^^" )"; inc=1 ;;
(-fargument-noalias-global)   canonopt="-fargument-noalias-global"; inc=1 ;;
(-fargument-noalias-anything)   canonopt="-fargument-noalias-anything"; inc=1 ;;
(-fargument-noalias)   canonopt="-fargument-noalias"; inc=1 ;;
(-fargument-alias)   canonopt="-fargument-alias"; inc=1 ;;
(-fanalyzer-verbosity=*) canonopt="-fanalyzer-verbosity"; optarg="$( echo "$1" | sed -E "s^-fanalyzer-verbosity=^^" )"; inc=1 ;;
(-fanalyzer-verbose-state-changes)   canonopt="-fanalyzer-verbose-state-changes"; inc=1 ;;
(-fanalyzer-verbose-edges)   canonopt="-fanalyzer-verbose-edges"; inc=1 ;;
(-fanalyzer-transitivity)   canonopt="-fanalyzer-transitivity"; inc=1 ;;
(-fanalyzer-state-purge)   canonopt="-fanalyzer-state-purge"; inc=1 ;;
(-fanalyzer-state-merge)   canonopt="-fanalyzer-state-merge"; inc=1 ;;
(-fanalyzer-show-duplicate-count)   canonopt="-fanalyzer-show-duplicate-count"; inc=1 ;;
(-fanalyzer-fine-grained)   canonopt="-fanalyzer-fine-grained"; inc=1 ;;
(-fanalyzer-checker=*) canonopt="-fanalyzer-checker"; optarg="$( echo "$1" | sed -E "s^-fanalyzer-checker=^^" )"; inc=1 ;;
(-fanalyzer-call-summaries)   canonopt="-fanalyzer-call-summaries"; inc=1 ;;
(-fanalyzer)   canonopt="-fanalyzer"; inc=1 ;;
(-falt-external-templates)   canonopt="-falt-external-templates"; inc=1 ;;
(-fallow-store-data-races)   canonopt="-fallow-store-data-races"; inc=1 ;;
(-fallow-parameterless-variadic-functions)   canonopt="-fallow-parameterless-variadic-functions"; inc=1 ;;
(-fallow-leading-underscore)   canonopt="-fallow-leading-underscore"; inc=1 ;;
(-fallow-invalid-boz)   canonopt="-fallow-invalid-boz"; inc=1 ;;
(-fallow-argument-mismatch)   canonopt="-fallow-argument-mismatch"; inc=1 ;;
(-fallocation-dce)   canonopt="-fallocation-dce"; inc=1 ;;
(-fall-virtual)   canonopt="-fall-virtual"; inc=1 ;;
(-fall-intrinsics)   canonopt="-fall-intrinsics"; inc=1 ;;
(-fall-instantiations)   canonopt="-fall-instantiations"; inc=1 ;;
(-faligned-new=*) canonopt="-faligned-new"; optarg="$( echo "$1" | sed -E "s^-faligned-new=^^" )"; inc=1 ;;
(-faligned-new)   canonopt="-faligned-new"; inc=1 ;;
(-falign-loops=*) canonopt="-falign-loops"; optarg="$( echo "$1" | sed -E "s^-falign-loops=^^" )"; inc=1 ;;
(-falign-loops)   canonopt="-falign-loops"; inc=1 ;;
(-falign-labels=*) canonopt="-falign-labels"; optarg="$( echo "$1" | sed -E "s^-falign-labels=^^" )"; inc=1 ;;
(-falign-labels)   canonopt="-falign-labels"; inc=1 ;;
(-falign-jumps=*) canonopt="-falign-jumps"; optarg="$( echo "$1" | sed -E "s^-falign-jumps=^^" )"; inc=1 ;;
(-falign-jumps)   canonopt="-falign-jumps"; inc=1 ;;
(-falign-functions=*) canonopt="-falign-functions"; optarg="$( echo "$1" | sed -E "s^-falign-functions=^^" )"; inc=1 ;;
(-falign-functions)   canonopt="-falign-functions"; inc=1 ;;
(-falign-commons)   canonopt="-falign-commons"; inc=1 ;;
(-faggressive-loop-optimizations)   canonopt="-faggressive-loop-optimizations"; inc=1 ;;
(-faggressive-function-elimination)   canonopt="-faggressive-function-elimination"; inc=1 ;;
(-fada-spec-parent=*) canonopt="-fada-spec-parent"; optarg="$( echo "$1" | sed -E "s^-fada-spec-parent=^^" )"; inc=1 ;;
(-faccess-control)   canonopt="-faccess-control"; inc=1 ;;
(-fabi-version=*) canonopt="-fabi-version"; optarg="$( echo "$1" | sed -E "s^-fabi-version=^^" )"; inc=1 ;;
(-fabi-compat-version=*) canonopt="-fabi-compat-version"; optarg="$( echo "$1" | sed -E "s^-fabi-compat-version=^^" )"; inc=1 ;;
(-fRTS=*) canonopt="-fRTS"; optarg="$( echo "$1" | sed -E "s^-fRTS=^^" )"; inc=1 ;;
(-fPIE)   canonopt="-fPIE"; inc=1 ;;
(-fPIC)   canonopt="-fPIC"; inc=1 ;;
(-dumpdir)  canonopt="-dumpdir"; optarg="$2"; inc=2;;
(-dumpbase)  canonopt="-dumpbase"; optarg="$2"; inc=2;;
(-dump-level=*) canonopt="-dump-level"; optarg="$( echo "$1" | sed -E "s^-dump-level=^^" )"; inc=1 ;;
(-dump-body=*) canonopt="-dump-body"; optarg="$( echo "$1" | sed -E "s^-dump-body=^^" )"; inc=1 ;;
(-demangle)   canonopt="-demangle"; inc=1 ;;
(-defined-only)   canonopt="-defined-only"; inc=1 ;;
(-d)  canonopt="-d"; optarg="$2"; inc=2;;
(-d*) canonopt="-d"; optarg="$( echo "$1" | sed -E "s^-d^^" )"; inc=1 ;;
(-cpp=*) canonopt="-cpp"; optarg="$( echo "$1" | sed -E "s^-cpp=^^" )"; inc=1 ;;
(-cpp)   canonopt="-cpp"; inc=1 ;;
(-callgraph)   canonopt="-callgraph"; inc=1 ;;
(-auxbase)  canonopt="-auxbase"; optarg="$2"; inc=2;;
(-auxbase-strip)  canonopt="-auxbase-strip"; optarg="$2"; inc=2;;
(-aux-info)  canonopt="-aux-info"; optarg="$2"; inc=2;;
(-aux-info=*) canonopt="-aux-info"; optarg="$( echo "$1" | sed -E "s^-aux-info=^^" )"; inc=1 ;;
(-ansi)   canonopt="-ansi"; inc=1 ;;
(-Xf)  canonopt="-Xf"; optarg="$2"; inc=2;;
(-X)   canonopt="-X"; inc=1 ;;
(-Wzerotrip)   canonopt="-Wzerotrip"; inc=1 ;;
(-Wzero-length-bounds)   canonopt="-Wzero-length-bounds"; inc=1 ;;
(-Wzero-as-null-pointer-constant)   canonopt="-Wzero-as-null-pointer-constant"; inc=1 ;;
(-Wwrite-strings)   canonopt="-Wwrite-strings"; inc=1 ;;
(-Wvolatile-register-var)   canonopt="-Wvolatile-register-var"; inc=1 ;;
(-Wvolatile)   canonopt="-Wvolatile"; inc=1 ;;
(-Wvla-larger-than=*) canonopt="-Wvla-larger-than"; optarg="$( echo "$1" | sed -E "s^-Wvla-larger-than=^^" )"; inc=1 ;;
(-Wvla)   canonopt="-Wvla"; inc=1 ;;
(-Wvirtual-move-assign)   canonopt="-Wvirtual-move-assign"; inc=1 ;;
(-Wvirtual-inheritance)   canonopt="-Wvirtual-inheritance"; inc=1 ;;
(-Wverbose-unbounded)   canonopt="-Wverbose-unbounded"; inc=1 ;;
(-Wvector-operation-performance)   canonopt="-Wvector-operation-performance"; inc=1 ;;
(-Wvariadic-macros)   canonopt="-Wvariadic-macros"; inc=1 ;;
(-Wvarargs)   canonopt="-Wvarargs"; inc=1 ;;
(-Wuseless-cast)   canonopt="-Wuseless-cast"; inc=1 ;;
(-Wuse-without-only)   canonopt="-Wuse-without-only"; inc=1 ;;
(-Wunused-variable)   canonopt="-Wunused-variable"; inc=1 ;;
(-Wunused-value)   canonopt="-Wunused-value"; inc=1 ;;
(-Wunused-result)   canonopt="-Wunused-result"; inc=1 ;;
(-Wunused-parameter)   canonopt="-Wunused-parameter"; inc=1 ;;
(-Wunused-macros)   canonopt="-Wunused-macros"; inc=1 ;;
(-Wunused-local-typedefs)   canonopt="-Wunused-local-typedefs"; inc=1 ;;
(-Wunused-label)   canonopt="-Wunused-label"; inc=1 ;;
(-Wunused-function)   canonopt="-Wunused-function"; inc=1 ;;
(-Wunused-dummy-argument)   canonopt="-Wunused-dummy-argument"; inc=1 ;;
(-Wunused-const-variable=*) canonopt="-Wunused-const-variable"; optarg="$( echo "$1" | sed -E "s^-Wunused-const-variable=^^" )"; inc=1 ;;
(-Wunused-const-variable)   canonopt="-Wunused-const-variable"; inc=1 ;;
(-Wunused-but-set-variable)   canonopt="-Wunused-but-set-variable"; inc=1 ;;
(-Wunused-but-set-parameter)   canonopt="-Wunused-but-set-parameter"; inc=1 ;;
(-Wunused)   canonopt="-Wunused"; inc=1 ;;
(-Wunsuffixed-float-constants)   canonopt="-Wunsuffixed-float-constants"; inc=1 ;;
(-Wunsafe-loop-optimizations)   canonopt="-Wunsafe-loop-optimizations"; inc=1 ;;
(-Wunreachable-code)   canonopt="-Wunreachable-code"; inc=1 ;;
(-Wunknown-pragmas)   canonopt="-Wunknown-pragmas"; inc=1 ;;
(-Wuninitialized)   canonopt="-Wuninitialized"; inc=1 ;;
(-Wunderflow)   canonopt="-Wunderflow"; inc=1 ;;
(-Wundefined-do-loop)   canonopt="-Wundefined-do-loop"; inc=1 ;;
(-Wundef)   canonopt="-Wundef"; inc=1 ;;
(-Wundeclared-selector)   canonopt="-Wundeclared-selector"; inc=1 ;;
(-Wtype-limits)   canonopt="-Wtype-limits"; inc=1 ;;
(-Wtrigraphs)   canonopt="-Wtrigraphs"; inc=1 ;;
(-Wtrampolines)   canonopt="-Wtrampolines"; inc=1 ;;
(-Wtraditional-conversion)   canonopt="-Wtraditional-conversion"; inc=1 ;;
(-Wtraditional)   canonopt="-Wtraditional"; inc=1 ;;
(-Wterminate)   canonopt="-Wterminate"; inc=1 ;;
(-Wtemplates)   canonopt="-Wtemplates"; inc=1 ;;
(-Wtautological-compare)   canonopt="-Wtautological-compare"; inc=1 ;;
(-Wtarget-lifetime)   canonopt="-Wtarget-lifetime"; inc=1 ;;
(-Wtabs)   canonopt="-Wtabs"; inc=1 ;;
(-Wsystem-headers)   canonopt="-Wsystem-headers"; inc=1 ;;
(-Wsynth)   canonopt="-Wsynth"; inc=1 ;;
(-Wsync-nand)   canonopt="-Wsync-nand"; inc=1 ;;
(-Wswitch-unreachable)   canonopt="-Wswitch-unreachable"; inc=1 ;;
(-Wswitch-outside-range)   canonopt="-Wswitch-outside-range"; inc=1 ;;
(-Wswitch-enum)   canonopt="-Wswitch-enum"; inc=1 ;;
(-Wswitch-default)   canonopt="-Wswitch-default"; inc=1 ;;
(-Wswitch-bool)   canonopt="-Wswitch-bool"; inc=1 ;;
(-Wswitch)   canonopt="-Wswitch"; inc=1 ;;
(-Wsurprising)   canonopt="-Wsurprising"; inc=1 ;;
(-Wsuggest-override)   canonopt="-Wsuggest-override"; inc=1 ;;
(-Wsuggest-final-types)   canonopt="-Wsuggest-final-types"; inc=1 ;;
(-Wsuggest-final-methods)   canonopt="-Wsuggest-final-methods"; inc=1 ;;
(-Wsuggest-attribute=*) canonopt="-Wsuggest-attribute"; optarg="$( echo "$1" | sed -E "s^-Wsuggest-attribute=^^" )"; inc=1 ;;
(-Wsubobject-linkage)   canonopt="-Wsubobject-linkage"; inc=1 ;;
(-Wstudents)   canonopt="-Wstudents"; inc=1 ;;
(-Wstringop-truncation)   canonopt="-Wstringop-truncation"; inc=1 ;;
(-Wstringop-overflow=*) canonopt="-Wstringop-overflow"; optarg="$( echo "$1" | sed -E "s^-Wstringop-overflow=^^" )"; inc=1 ;;
(-Wstringop-overflow)   canonopt="-Wstringop-overflow"; inc=1 ;;
(-Wstring-compare)   canonopt="-Wstring-compare"; inc=1 ;;
(-Wstrict-selector-match)   canonopt="-Wstrict-selector-match"; inc=1 ;;
(-Wstrict-prototypes)   canonopt="-Wstrict-prototypes"; inc=1 ;;
(-Wstrict-overflow=*) canonopt="-Wstrict-overflow"; optarg="$( echo "$1" | sed -E "s^-Wstrict-overflow=^^" )"; inc=1 ;;
(-Wstrict-overflow)   canonopt="-Wstrict-overflow"; inc=1 ;;
(-Wstrict-null-sentinel)   canonopt="-Wstrict-null-sentinel"; inc=1 ;;
(-Wstrict-aliasing=*) canonopt="-Wstrict-aliasing"; optarg="$( echo "$1" | sed -E "s^-Wstrict-aliasing=^^" )"; inc=1 ;;
(-Wstrict-aliasing)   canonopt="-Wstrict-aliasing"; inc=1 ;;
(-Wstack-usage=*) canonopt="-Wstack-usage"; optarg="$( echo "$1" | sed -E "s^-Wstack-usage=^^" )"; inc=1 ;;
(-Wstack-protector)   canonopt="-Wstack-protector"; inc=1 ;;
(-Wspeculative)   canonopt="-Wspeculative"; inc=1 ;;
(-Wsizeof-pointer-memaccess)   canonopt="-Wsizeof-pointer-memaccess"; inc=1 ;;
(-Wsizeof-pointer-div)   canonopt="-Wsizeof-pointer-div"; inc=1 ;;
(-Wsizeof-array-argument)   canonopt="-Wsizeof-array-argument"; inc=1 ;;
(-Wsized-deallocation)   canonopt="-Wsized-deallocation"; inc=1 ;;
(-Wsign-promo)   canonopt="-Wsign-promo"; inc=1 ;;
(-Wsign-conversion)   canonopt="-Wsign-conversion"; inc=1 ;;
(-Wsign-compare)   canonopt="-Wsign-compare"; inc=1 ;;
(-Wshift-overflow=*) canonopt="-Wshift-overflow"; optarg="$( echo "$1" | sed -E "s^-Wshift-overflow=^^" )"; inc=1 ;;
(-Wshift-overflow)   canonopt="-Wshift-overflow"; inc=1 ;;
(-Wshift-negative-value)   canonopt="-Wshift-negative-value"; inc=1 ;;
(-Wshift-count-overflow)   canonopt="-Wshift-count-overflow"; inc=1 ;;
(-Wshift-count-negative)   canonopt="-Wshift-count-negative"; inc=1 ;;
(-Wshadow=*) canonopt="-Wshadow"; optarg="$( echo "$1" | sed -E "s^-Wshadow=^^" )"; inc=1 ;;
(-Wshadow-local)   canonopt="-Wshadow-local"; inc=1 ;;
(-Wshadow-ivar)   canonopt="-Wshadow-ivar"; inc=1 ;;
(-Wshadow-compatible-local)   canonopt="-Wshadow-compatible-local"; inc=1 ;;
(-Wshadow)   canonopt="-Wshadow"; inc=1 ;;
(-Wsequence-point)   canonopt="-Wsequence-point"; inc=1 ;;
(-Wselector)   canonopt="-Wselector"; inc=1 ;;
(-Wscalar-storage-order)   canonopt="-Wscalar-storage-order"; inc=1 ;;
(-Wreturn-type)   canonopt="-Wreturn-type"; inc=1 ;;
(-Wreturn-local-addr)   canonopt="-Wreturn-local-addr"; inc=1 ;;
(-Wrestrict)   canonopt="-Wrestrict"; inc=1 ;;
(-Wreorder)   canonopt="-Wreorder"; inc=1 ;;
(-Wregister)   canonopt="-Wregister"; inc=1 ;;
(-Wredundant-tags)   canonopt="-Wredundant-tags"; inc=1 ;;
(-Wredundant-move)   canonopt="-Wredundant-move"; inc=1 ;;
(-Wredundant-decls)   canonopt="-Wredundant-decls"; inc=1 ;;
(-Wrealloc-lhs-all)   canonopt="-Wrealloc-lhs-all"; inc=1 ;;
(-Wrealloc-lhs)   canonopt="-Wrealloc-lhs"; inc=1 ;;
(-Wreal-q-constant)   canonopt="-Wreal-q-constant"; inc=1 ;;
(-Wpsabi)   canonopt="-Wpsabi"; inc=1 ;;
(-Wprotocol)   canonopt="-Wprotocol"; inc=1 ;;
(-Wproperty-assign-default)   canonopt="-Wproperty-assign-default"; inc=1 ;;
(-Wprio-ctor-dtor)   canonopt="-Wprio-ctor-dtor"; inc=1 ;;
(-Wpragmas)   canonopt="-Wpragmas"; inc=1 ;;
(-Wpointer-to-int-cast)   canonopt="-Wpointer-to-int-cast"; inc=1 ;;
(-Wpointer-sign)   canonopt="-Wpointer-sign"; inc=1 ;;
(-Wpointer-compare)   canonopt="-Wpointer-compare"; inc=1 ;;
(-Wpointer-arith)   canonopt="-Wpointer-arith"; inc=1 ;;
(-Wpmf-conversions)   canonopt="-Wpmf-conversions"; inc=1 ;;
(-Wplacement-new=*) canonopt="-Wplacement-new"; optarg="$( echo "$1" | sed -E "s^-Wplacement-new=^^" )"; inc=1 ;;
(-Wplacement-new)   canonopt="-Wplacement-new"; inc=1 ;;
(-Wpessimizing-move)   canonopt="-Wpessimizing-move"; inc=1 ;;
(-Wpedantic-param-names)   canonopt="-Wpedantic-param-names"; inc=1 ;;
(-Wpedantic-cast)   canonopt="-Wpedantic-cast"; inc=1 ;;
(-Wpedantic)   canonopt="-Wpedantic"; inc=1 ;;
(-Wparentheses)   canonopt="-Wparentheses"; inc=1 ;;
(-Wpadded)   canonopt="-Wpadded"; inc=1 ;;
(-Wpacked-not-aligned)   canonopt="-Wpacked-not-aligned"; inc=1 ;;
(-Wpacked-bitfield-compat)   canonopt="-Wpacked-bitfield-compat"; inc=1 ;;
(-Wpacked)   canonopt="-Wpacked"; inc=1 ;;
(-Woverwrite-recursive)   canonopt="-Woverwrite-recursive"; inc=1 ;;
(-Woverride-init-side-effects)   canonopt="-Woverride-init-side-effects"; inc=1 ;;
(-Woverride-init)   canonopt="-Woverride-init"; inc=1 ;;
(-Woverloaded-virtual)   canonopt="-Woverloaded-virtual"; inc=1 ;;
(-Woverlength-strings)   canonopt="-Woverlength-strings"; inc=1 ;;
(-Woverflow)   canonopt="-Woverflow"; inc=1 ;;
(-Wopenmp-simd)   canonopt="-Wopenmp-simd"; inc=1 ;;
(-Wold-style-definition)   canonopt="-Wold-style-definition"; inc=1 ;;
(-Wold-style-declaration)   canonopt="-Wold-style-declaration"; inc=1 ;;
(-Wold-style-cast)   canonopt="-Wold-style-cast"; inc=1 ;;
(-Wodr)   canonopt="-Wodr"; inc=1 ;;
(-Wnull-dereference)   canonopt="-Wnull-dereference"; inc=1 ;;
(-Wnormalized=*) canonopt="-Wnormalized"; optarg="$( echo "$1" | sed -E "s^-Wnormalized=^^" )"; inc=1 ;;
(-Wnormalized)   canonopt="-Wnormalized"; inc=1 ;;
(-Wnonnull-compare)   canonopt="-Wnonnull-compare"; inc=1 ;;
(-Wnonnull)   canonopt="-Wnonnull"; inc=1 ;;
(-Wnon-virtual-dtor)   canonopt="-Wnon-virtual-dtor"; inc=1 ;;
(-Wnon-template-friend)   canonopt="-Wnon-template-friend"; inc=1 ;;
(-Wnoexcept-type)   canonopt="-Wnoexcept-type"; inc=1 ;;
(-Wnoexcept)   canonopt="-Wnoexcept"; inc=1 ;;
(-Wno-vla-larger-than)   canonopt="-Wno-vla-larger-than"; inc=1 ;;
(-Wno-stack-usage)   canonopt="-Wno-stack-usage"; inc=1 ;;
(-Wno-larger-than)   canonopt="-Wno-larger-than"; inc=1 ;;
(-Wno-frame-larger-than)   canonopt="-Wno-frame-larger-than"; inc=1 ;;
(-Wno-alloca-larger-than)   canonopt="-Wno-alloca-larger-than"; inc=1 ;;
(-Wno-alloc-size-larger-than)   canonopt="-Wno-alloc-size-larger-than"; inc=1 ;;
(-Wnested-externs)   canonopt="-Wnested-externs"; inc=1 ;;
(-Wnarrowing)   canonopt="-Wnarrowing"; inc=1 ;;
(-Wnamespaces)   canonopt="-Wnamespaces"; inc=1 ;;
(-Wmultistatement-macros)   canonopt="-Wmultistatement-macros"; inc=1 ;;
(-Wmultiple-inheritance)   canonopt="-Wmultiple-inheritance"; inc=1 ;;
(-Wmultichar)   canonopt="-Wmultichar"; inc=1 ;;
(-Wmudflap)   canonopt="-Wmudflap"; inc=1 ;;
(-Wmissing-prototypes)   canonopt="-Wmissing-prototypes"; inc=1 ;;
(-Wmissing-profile)   canonopt="-Wmissing-profile"; inc=1 ;;
(-Wmissing-parameter-type)   canonopt="-Wmissing-parameter-type"; inc=1 ;;
(-Wmissing-noreturn)   canonopt="-Wmissing-noreturn"; inc=1 ;;
(-Wmissing-include-dirs)   canonopt="-Wmissing-include-dirs"; inc=1 ;;
(-Wmissing-format-attribute)   canonopt="-Wmissing-format-attribute"; inc=1 ;;
(-Wmissing-field-initializers)   canonopt="-Wmissing-field-initializers"; inc=1 ;;
(-Wmissing-declarations)   canonopt="-Wmissing-declarations"; inc=1 ;;
(-Wmissing-braces)   canonopt="-Wmissing-braces"; inc=1 ;;
(-Wmissing-attributes)   canonopt="-Wmissing-attributes"; inc=1 ;;
(-Wmismatched-tags)   canonopt="-Wmismatched-tags"; inc=1 ;;
(-Wmisleading-indentation)   canonopt="-Wmisleading-indentation"; inc=1 ;;
(-Wmemset-transposed-args)   canonopt="-Wmemset-transposed-args"; inc=1 ;;
(-Wmemset-elt-size)   canonopt="-Wmemset-elt-size"; inc=1 ;;
(-Wmaybe-uninitialized)   canonopt="-Wmaybe-uninitialized"; inc=1 ;;
(-Wmain)   canonopt="-Wmain"; inc=1 ;;
(-Wlto-type-mismatch)   canonopt="-Wlto-type-mismatch"; inc=1 ;;
(-Wlong-long)   canonopt="-Wlong-long"; inc=1 ;;
(-Wlogical-op)   canonopt="-Wlogical-op"; inc=1 ;;
(-Wlogical-not-parentheses)   canonopt="-Wlogical-not-parentheses"; inc=1 ;;
(-Wliteral-suffix)   canonopt="-Wliteral-suffix"; inc=1 ;;
(-Wline-truncation)   canonopt="-Wline-truncation"; inc=1 ;;
(-Wlarger-than=*) canonopt="-Wlarger-than"; optarg="$( echo "$1" | sed -E "s^-Wlarger-than=^^" )"; inc=1 ;;
(-Wlarger-than-)   canonopt="-Wlarger-than-"; inc=1 ;;
(-Wjump-misses-init)   canonopt="-Wjump-misses-init"; inc=1 ;;
(-Winvalid-pch)   canonopt="-Winvalid-pch"; inc=1 ;;
(-Winvalid-offsetof)   canonopt="-Winvalid-offsetof"; inc=1 ;;
(-Winvalid-memory-model)   canonopt="-Winvalid-memory-model"; inc=1 ;;
(-Wintrinsics-std)   canonopt="-Wintrinsics-std"; inc=1 ;;
(-Wintrinsic-shadow)   canonopt="-Wintrinsic-shadow"; inc=1 ;;
(-Winteger-division)   canonopt="-Winteger-division"; inc=1 ;;
(-Wint-to-pointer-cast)   canonopt="-Wint-to-pointer-cast"; inc=1 ;;
(-Wint-in-bool-context)   canonopt="-Wint-in-bool-context"; inc=1 ;;
(-Wint-conversion)   canonopt="-Wint-conversion"; inc=1 ;;
(-Winline)   canonopt="-Winline"; inc=1 ;;
(-Winit-self)   canonopt="-Winit-self"; inc=1 ;;
(-Winit-list-lifetime)   canonopt="-Winit-list-lifetime"; inc=1 ;;
(-Winherited-variadic-ctor)   canonopt="-Winherited-variadic-ctor"; inc=1 ;;
(-Wincompatible-pointer-types)   canonopt="-Wincompatible-pointer-types"; inc=1 ;;
(-Winaccessible-base)   canonopt="-Winaccessible-base"; inc=1 ;;
(-Wimport)   canonopt="-Wimport"; inc=1 ;;
(-Wimplicit-procedure)   canonopt="-Wimplicit-procedure"; inc=1 ;;
(-Wimplicit-interface)   canonopt="-Wimplicit-interface"; inc=1 ;;
(-Wimplicit-int)   canonopt="-Wimplicit-int"; inc=1 ;;
(-Wimplicit-function-declaration)   canonopt="-Wimplicit-function-declaration"; inc=1 ;;
(-Wimplicit-fallthrough=*) canonopt="-Wimplicit-fallthrough"; optarg="$( echo "$1" | sed -E "s^-Wimplicit-fallthrough=^^" )"; inc=1 ;;
(-Wimplicit-fallthrough)   canonopt="-Wimplicit-fallthrough"; inc=1 ;;
(-Wimplicit)   canonopt="-Wimplicit"; inc=1 ;;
(-Wignored-qualifiers)   canonopt="-Wignored-qualifiers"; inc=1 ;;
(-Wignored-attributes)   canonopt="-Wignored-attributes"; inc=1 ;;
(-Wif-not-aligned)   canonopt="-Wif-not-aligned"; inc=1 ;;
(-Whsa)   canonopt="-Whsa"; inc=1 ;;
(-Wfunction-elimination)   canonopt="-Wfunction-elimination"; inc=1 ;;
(-Wfrontend-loop-interchange)   canonopt="-Wfrontend-loop-interchange"; inc=1 ;;
(-Wfree-nonheap-object)   canonopt="-Wfree-nonheap-object"; inc=1 ;;
(-Wframe-larger-than=*) canonopt="-Wframe-larger-than"; optarg="$( echo "$1" | sed -E "s^-Wframe-larger-than=^^" )"; inc=1 ;;
(-Wframe-address)   canonopt="-Wframe-address"; inc=1 ;;
(-Wformat=*) canonopt="-Wformat"; optarg="$( echo "$1" | sed -E "s^-Wformat=^^" )"; inc=1 ;;
(-Wformat-zero-length)   canonopt="-Wformat-zero-length"; inc=1 ;;
(-Wformat-y2k)   canonopt="-Wformat-y2k"; inc=1 ;;
(-Wformat-truncation=*) canonopt="-Wformat-truncation"; optarg="$( echo "$1" | sed -E "s^-Wformat-truncation=^^" )"; inc=1 ;;
(-Wformat-truncation)   canonopt="-Wformat-truncation"; inc=1 ;;
(-Wformat-signedness)   canonopt="-Wformat-signedness"; inc=1 ;;
(-Wformat-security)   canonopt="-Wformat-security"; inc=1 ;;
(-Wformat-overflow*) canonopt="-Wformat-overflow"; optarg="$( echo "$1" | sed -E "s^-Wformat-overflow^^" )"; inc=1 ;;
(-Wformat-overflow=*) canonopt="-Wformat-overflow"; optarg="$( echo "$1" | sed -E "s^-Wformat-overflow=^^" )"; inc=1 ;;
(-Wformat-nonliteral)   canonopt="-Wformat-nonliteral"; inc=1 ;;
(-Wformat-extra-args)   canonopt="-Wformat-extra-args"; inc=1 ;;
(-Wformat-diag)   canonopt="-Wformat-diag"; inc=1 ;;
(-Wformat-contains-nul)   canonopt="-Wformat-contains-nul"; inc=1 ;;
(-Wformat)   canonopt="-Wformat"; inc=1 ;;
(-Wfloat-equal)   canonopt="-Wfloat-equal"; inc=1 ;;
(-Wfloat-conversion)   canonopt="-Wfloat-conversion"; inc=1 ;;
(-Wfatal-errors)   canonopt="-Wfatal-errors"; inc=1 ;;
(-Wextra-semi)   canonopt="-Wextra-semi"; inc=1 ;;
(-Wextra)   canonopt="-Wextra"; inc=1 ;;
(-Wexpansion-to-defined)   canonopt="-Wexpansion-to-defined"; inc=1 ;;
(-Werror=*) canonopt="-Werror"; optarg="$( echo "$1" | sed -E "s^-Werror=^^" )"; inc=1 ;;
(-Werror-implicit-function-declaration)   canonopt="-Werror-implicit-function-declaration"; inc=1 ;;
(-Werror)   canonopt="-Werror"; inc=1 ;;
(-Wenum-conversion)   canonopt="-Wenum-conversion"; inc=1 ;;
(-Wenum-compare)   canonopt="-Wenum-compare"; inc=1 ;;
(-Wendif-labels)   canonopt="-Wendif-labels"; inc=1 ;;
(-Wempty-body)   canonopt="-Wempty-body"; inc=1 ;;
(-Weffc++)   canonopt="-Weffc++"; inc=1 ;;
(-Wduplicated-cond)   canonopt="-Wduplicated-cond"; inc=1 ;;
(-Wduplicated-branches)   canonopt="-Wduplicated-branches"; inc=1 ;;
(-Wduplicate-decl-specifier)   canonopt="-Wduplicate-decl-specifier"; inc=1 ;;
(-Wdouble-promotion)   canonopt="-Wdouble-promotion"; inc=1 ;;
(-Wdo-subscript)   canonopt="-Wdo-subscript"; inc=1 ;;
(-Wdiv-by-zero)   canonopt="-Wdiv-by-zero"; inc=1 ;;
(-Wdiscarded-qualifiers)   canonopt="-Wdiscarded-qualifiers"; inc=1 ;;
(-Wdiscarded-array-qualifiers)   canonopt="-Wdiscarded-array-qualifiers"; inc=1 ;;
(-Wdisabled-optimization)   canonopt="-Wdisabled-optimization"; inc=1 ;;
(-Wdesignated-init)   canonopt="-Wdesignated-init"; inc=1 ;;
(-Wdeprecated-declarations)   canonopt="-Wdeprecated-declarations"; inc=1 ;;
(-Wdeprecated-copy-dtor)   canonopt="-Wdeprecated-copy-dtor"; inc=1 ;;
(-Wdeprecated-copy)   canonopt="-Wdeprecated-copy"; inc=1 ;;
(-Wdeprecated)   canonopt="-Wdeprecated"; inc=1 ;;
(-Wdelete-non-virtual-dtor)   canonopt="-Wdelete-non-virtual-dtor"; inc=1 ;;
(-Wdelete-incomplete)   canonopt="-Wdelete-incomplete"; inc=1 ;;
(-Wdeclaration-after-statement)   canonopt="-Wdeclaration-after-statement"; inc=1 ;;
(-Wdate-time)   canonopt="-Wdate-time"; inc=1 ;;
(-Wdangling-else)   canonopt="-Wdangling-else"; inc=1 ;;
(-Wctor-dtor-privacy)   canonopt="-Wctor-dtor-privacy"; inc=1 ;;
(-Wcpp)   canonopt="-Wcpp"; inc=1 ;;
(-Wcoverage-mismatch)   canonopt="-Wcoverage-mismatch"; inc=1 ;;
(-Wconversion-null)   canonopt="-Wconversion-null"; inc=1 ;;
(-Wconversion-extra)   canonopt="-Wconversion-extra"; inc=1 ;;
(-Wconversion)   canonopt="-Wconversion"; inc=1 ;;
(-Wconditionally-supported)   canonopt="-Wconditionally-supported"; inc=1 ;;
(-Wcompare-reals)   canonopt="-Wcompare-reals"; inc=1 ;;
(-Wcomments)   canonopt="-Wcomments"; inc=1 ;;
(-Wcomment)   canonopt="-Wcomment"; inc=1 ;;
(-Wcomma-subscript)   canonopt="-Wcomma-subscript"; inc=1 ;;
(-Wclobbered)   canonopt="-Wclobbered"; inc=1 ;;
(-Wclass-memaccess)   canonopt="-Wclass-memaccess"; inc=1 ;;
(-Wclass-conversion)   canonopt="-Wclass-conversion"; inc=1 ;;
(-Wchkp)   canonopt="-Wchkp"; inc=1 ;;
(-Wcharacter-truncation)   canonopt="-Wcharacter-truncation"; inc=1 ;;
(-Wchar-subscripts)   canonopt="-Wchar-subscripts"; inc=1 ;;
(-Wcatch-value=*) canonopt="-Wcatch-value"; optarg="$( echo "$1" | sed -E "s^-Wcatch-value=^^" )"; inc=1 ;;
(-Wcatch-value)   canonopt="-Wcatch-value"; inc=1 ;;
(-Wcast-result)   canonopt="-Wcast-result"; inc=1 ;;
(-Wcast-qual)   canonopt="-Wcast-qual"; inc=1 ;;
(-Wcast-function-type)   canonopt="-Wcast-function-type"; inc=1 ;;
(-Wcast-align=*) canonopt="-Wcast-align"; optarg="$( echo "$1" | sed -E "s^-Wcast-align=^^" )"; inc=1 ;;
(-Wcast-align)   canonopt="-Wcast-align"; inc=1 ;;
(-Wcannot-profile)   canonopt="-Wcannot-profile"; inc=1 ;;
(-Wc99-c11-compat)   canonopt="-Wc99-c11-compat"; inc=1 ;;
(-Wc90-c99-compat)   canonopt="-Wc90-c99-compat"; inc=1 ;;
(-Wc11-c2x-compat)   canonopt="-Wc11-c2x-compat"; inc=1 ;;
(-Wc-binding-type)   canonopt="-Wc-binding-type"; inc=1 ;;
(-Wc++2a-compat)   canonopt="-Wc++2a-compat"; inc=1 ;;
(-Wc++20-compat)   canonopt="-Wc++20-compat"; inc=1 ;;
(-Wc++1z-compat)   canonopt="-Wc++1z-compat"; inc=1 ;;
(-Wc++17-compat)   canonopt="-Wc++17-compat"; inc=1 ;;
(-Wc++14-compat)   canonopt="-Wc++14-compat"; inc=1 ;;
(-Wc++11-compat)   canonopt="-Wc++11-compat"; inc=1 ;;
(-Wc++0x-compat)   canonopt="-Wc++0x-compat"; inc=1 ;;
(-Wc++-compat)   canonopt="-Wc++-compat"; inc=1 ;;
(-Wbuiltin-macro-redefined)   canonopt="-Wbuiltin-macro-redefined"; inc=1 ;;
(-Wbuiltin-declaration-mismatch)   canonopt="-Wbuiltin-declaration-mismatch"; inc=1 ;;
(-Wbool-operation)   canonopt="-Wbool-operation"; inc=1 ;;
(-Wbool-compare)   canonopt="-Wbool-compare"; inc=1 ;;
(-Wbad-function-cast)   canonopt="-Wbad-function-cast"; inc=1 ;;
(-Wattributes)   canonopt="-Wattributes"; inc=1 ;;
(-Wattribute-warning)   canonopt="-Wattribute-warning"; inc=1 ;;
(-Wattribute-alias=*) canonopt="-Wattribute-alias"; optarg="$( echo "$1" | sed -E "s^-Wattribute-alias=^^" )"; inc=1 ;;
(-Wattribute-alias)   canonopt="-Wattribute-alias"; inc=1 ;;
(-Wassign-intercept)   canonopt="-Wassign-intercept"; inc=1 ;;
(-Warray-temporaries)   canonopt="-Warray-temporaries"; inc=1 ;;
(-Warray-bounds=*) canonopt="-Warray-bounds"; optarg="$( echo "$1" | sed -E "s^-Warray-bounds=^^" )"; inc=1 ;;
(-Warray-bounds)   canonopt="-Warray-bounds"; inc=1 ;;
(-Warith-conversion)   canonopt="-Warith-conversion"; inc=1 ;;
(-Wargument-mismatch)   canonopt="-Wargument-mismatch"; inc=1 ;;
(-Wanalyzer-use-of-pointer-in-stale-stack-frame)   canonopt="-Wanalyzer-use-of-pointer-in-stale-stack-frame"; inc=1 ;;
(-Wanalyzer-use-after-free)   canonopt="-Wanalyzer-use-after-free"; inc=1 ;;
(-Wanalyzer-unsafe-call-within-signal-handler)   canonopt="-Wanalyzer-unsafe-call-within-signal-handler"; inc=1 ;;
(-Wanalyzer-too-complex)   canonopt="-Wanalyzer-too-complex"; inc=1 ;;
(-Wanalyzer-tainted-array-index)   canonopt="-Wanalyzer-tainted-array-index"; inc=1 ;;
(-Wanalyzer-stale-setjmp-buffer)   canonopt="-Wanalyzer-stale-setjmp-buffer"; inc=1 ;;
(-Wanalyzer-possible-null-dereference)   canonopt="-Wanalyzer-possible-null-dereference"; inc=1 ;;
(-Wanalyzer-possible-null-argument)   canonopt="-Wanalyzer-possible-null-argument"; inc=1 ;;
(-Wanalyzer-null-dereference)   canonopt="-Wanalyzer-null-dereference"; inc=1 ;;
(-Wanalyzer-null-argument)   canonopt="-Wanalyzer-null-argument"; inc=1 ;;
(-Wanalyzer-malloc-leak)   canonopt="-Wanalyzer-malloc-leak"; inc=1 ;;
(-Wanalyzer-free-of-non-heap)   canonopt="-Wanalyzer-free-of-non-heap"; inc=1 ;;
(-Wanalyzer-file-leak)   canonopt="-Wanalyzer-file-leak"; inc=1 ;;
(-Wanalyzer-exposure-through-output-file)   canonopt="-Wanalyzer-exposure-through-output-file"; inc=1 ;;
(-Wanalyzer-double-free)   canonopt="-Wanalyzer-double-free"; inc=1 ;;
(-Wanalyzer-double-fclose)   canonopt="-Wanalyzer-double-fclose"; inc=1 ;;
(-Wampersand)   canonopt="-Wampersand"; inc=1 ;;
(-Walloca-larger-than=*) canonopt="-Walloca-larger-than"; optarg="$( echo "$1" | sed -E "s^-Walloca-larger-than=^^" )"; inc=1 ;;
(-Walloca)   canonopt="-Walloca"; inc=1 ;;
(-Walloc-zero)   canonopt="-Walloc-zero"; inc=1 ;;
(-Walloc-size-larger-than=*) canonopt="-Walloc-size-larger-than"; optarg="$( echo "$1" | sed -E "s^-Walloc-size-larger-than=^^" )"; inc=1 ;;
(-Wall)   canonopt="-Wall"; inc=1 ;;
(-Waligned-new=*) canonopt="-Waligned-new"; optarg="$( echo "$1" | sed -E "s^-Waligned-new=^^" )"; inc=1 ;;
(-Waligned-new)   canonopt="-Waligned-new"; inc=1 ;;
(-Walign-commons)   canonopt="-Walign-commons"; inc=1 ;;
(-Waliasing)   canonopt="-Waliasing"; inc=1 ;;
(-Waggressive-loop-optimizations)   canonopt="-Waggressive-loop-optimizations"; inc=1 ;;
(-Waggregate-return)   canonopt="-Waggregate-return"; inc=1 ;;
(-Waddress-of-packed-member)   canonopt="-Waddress-of-packed-member"; inc=1 ;;
(-Waddress)   canonopt="-Waddress"; inc=1 ;;
(-Wabsolute-value)   canonopt="-Wabsolute-value"; inc=1 ;;
(-Wabi=*) canonopt="-Wabi"; optarg="$( echo "$1" | sed -E "s^-Wabi=^^" )"; inc=1 ;;
(-Wabi-tag)   canonopt="-Wabi-tag"; inc=1 ;;
(-Wabi)   canonopt="-Wabi"; inc=1 ;;
(-W)   canonopt="-W"; inc=1 ;;
(-U)  canonopt="-U"; optarg="$2"; inc=2;;
(-U*) canonopt="-U"; optarg="$( echo "$1" | sed -E "s^-U^^" )"; inc=1 ;;
(-P)   canonopt="-P"; inc=1 ;;
(-Os)   canonopt="-Os"; inc=1 ;;
(-Og)   canonopt="-Og"; inc=1 ;;
(-Ofast)   canonopt="-Ofast"; inc=1 ;;
(-O*) canonopt="-O"; optarg="$( echo "$1" | sed -E "s^-O^^" )"; inc=1 ;;
(-MT)  canonopt="-MT"; optarg="$2"; inc=2;;
(-MQ)  canonopt="-MQ"; optarg="$2"; inc=2;;
(-MP)   canonopt="-MP"; inc=1 ;;
(-MMD)  canonopt="-MMD"; optarg="$2"; inc=2;;
(-MM)   canonopt="-MM"; inc=1 ;;
(-MG)   canonopt="-MG"; inc=1 ;;
(-MF)  canonopt="-MF"; optarg="$2"; inc=2;;
(-MD)  canonopt="-MD"; optarg="$2"; inc=2;;
(-M)   canonopt="-M"; inc=1 ;;
(-L)  canonopt="-L"; optarg="$2"; inc=2;;
(-J)  canonopt="-J"; optarg="$2"; inc=2;;
(-J*) canonopt="-J"; optarg="$( echo "$1" | sed -E "s^-J^^" )"; inc=1 ;;
(-I)  canonopt="-I"; optarg="$2"; inc=2;;
(-Hf)  canonopt="-Hf"; optarg="$2"; inc=2;;
(-Hd)  canonopt="-Hd"; optarg="$2"; inc=2;;
(-H)   canonopt="-H"; inc=1 ;;
(-F)  canonopt="-F"; optarg="$2"; inc=2;;
(-E)   canonopt="-E"; inc=1 ;;
(-D)  canonopt="-D"; optarg="$2"; inc=2;;
(-D*) canonopt="-D"; optarg="$( echo "$1" | sed -E "s^-D^^" )"; inc=1 ;;
(-CC)   canonopt="-CC"; inc=1 ;;
(-C)   canonopt="-C"; inc=1 ;;
(-A)  canonopt="-A"; optarg="$2"; inc=2;;
(-A*) canonopt="-A"; optarg="$( echo "$1" | sed -E "s^-A^^" )"; inc=1 ;;
(--write-user-dependencies)  canonopt="--write-user-dependencies"; optarg="$2"; inc=2;;
(--write-dependencies)  canonopt="--write-dependencies"; optarg="$2"; inc=2;;
(--version)   canonopt="--version"; inc=1 ;;
(--verbose)   canonopt="--verbose"; inc=1 ;;
(--user-dependencies)   canonopt="--user-dependencies"; inc=1 ;;
(--undefine-macro)  canonopt="--undefine-macro"; optarg="$2"; inc=2;;
(--undefine-macro=*) canonopt="--undefine-macro"; optarg="$( echo "$1" | sed -E "s^--undefine-macro=^^" )"; inc=1 ;;
(--trigraphs)   canonopt="--trigraphs"; inc=1 ;;
(--traditional-cpp)   canonopt="--traditional-cpp"; inc=1 ;;
(--trace-includes)   canonopt="--trace-includes"; inc=1 ;;
(--target-help)   canonopt="--target-help"; inc=1 ;;
(--profile)   canonopt="--profile"; inc=1 ;;
(--print-missing-file-dependencies)   canonopt="--print-missing-file-dependencies"; inc=1 ;;
(--preprocess)   canonopt="--preprocess"; inc=1 ;;
(--pedantic-errors)   canonopt="--pedantic-errors"; inc=1 ;;
(--pedantic)   canonopt="--pedantic"; inc=1 ;;
(--param=*) canonopt="--param"; optarg="$( echo "$1" | sed -E "s^--param=^^" )"; inc=1 ;;
(--output)  canonopt="--output"; optarg="$2"; inc=2;;
(--output=*) canonopt="--output"; optarg="$( echo "$1" | sed -E "s^--output=^^" )"; inc=1 ;;
(--output-pch)  canonopt="--output-pch"; optarg="$2"; inc=2;;
(--output-pch=*) canonopt="--output-pch"; optarg="$( echo "$1" | sed -E "s^--output-pch=^^" )"; inc=1 ;;
(--optimize)   canonopt="--optimize"; inc=1 ;;
(--no-warnings)   canonopt="--no-warnings"; inc=1 ;;
(--no-standard-libraries)   canonopt="--no-standard-libraries"; inc=1 ;;
(--no-standard-includes)   canonopt="--no-standard-includes"; inc=1 ;;
(--no-line-commands)   canonopt="--no-line-commands"; inc=1 ;;
(--include)  canonopt="--include"; optarg="$2"; inc=2;;
(--include=*) canonopt="--include"; optarg="$( echo "$1" | sed -E "s^--include=^^" )"; inc=1 ;;
(--include-with-prefix)  canonopt="--include-with-prefix"; optarg="$2"; inc=2;;
(--include-with-prefix=*) canonopt="--include-with-prefix"; optarg="$( echo "$1" | sed -E "s^--include-with-prefix=^^" )"; inc=1 ;;
(--include-with-prefix-before)  canonopt="--include-with-prefix-before"; optarg="$2"; inc=2;;
(--include-with-prefix-before=*) canonopt="--include-with-prefix-before"; optarg="$( echo "$1" | sed -E "s^--include-with-prefix-before=^^" )"; inc=1 ;;
(--include-with-prefix-after)  canonopt="--include-with-prefix-after"; optarg="$2"; inc=2;;
(--include-with-prefix-after=*) canonopt="--include-with-prefix-after"; optarg="$( echo "$1" | sed -E "s^--include-with-prefix-after=^^" )"; inc=1 ;;
(--include-prefix)  canonopt="--include-prefix"; optarg="$2"; inc=2;;
(--include-prefix=*) canonopt="--include-prefix"; optarg="$( echo "$1" | sed -E "s^--include-prefix=^^" )"; inc=1 ;;
(--include-directory)  canonopt="--include-directory"; optarg="$2"; inc=2;;
(--include-directory=*) canonopt="--include-directory"; optarg="$( echo "$1" | sed -E "s^--include-directory=^^" )"; inc=1 ;;
(--include-directory-after)  canonopt="--include-directory-after"; optarg="$2"; inc=2;;
(--include-directory-after=*) canonopt="--include-directory-after"; optarg="$( echo "$1" | sed -E "s^--include-directory-after=^^" )"; inc=1 ;;
(--include-barrier)   canonopt="--include-barrier"; inc=1 ;;
(--imacros)  canonopt="--imacros"; optarg="$2"; inc=2;;
(--imacros=*) canonopt="--imacros"; optarg="$( echo "$1" | sed -E "s^--imacros=^^" )"; inc=1 ;;
(--help=*) canonopt="--help"; optarg="$( echo "$1" | sed -E "s^--help=^^" )"; inc=1 ;;
(--help)   canonopt="--help"; inc=1 ;;
(--extra-warnings)   canonopt="--extra-warnings"; inc=1 ;;
(--dumpdir)  canonopt="--dumpdir"; optarg="$2"; inc=2;;
(--dumpbase)  canonopt="--dumpbase"; optarg="$2"; inc=2;;
(--dump)  canonopt="--dump"; optarg="$2"; inc=2;;
(--dump=*) canonopt="--dump"; optarg="$( echo "$1" | sed -E "s^--dump=^^" )"; inc=1 ;;
(--dependencies)   canonopt="--dependencies"; inc=1 ;;
(--define-macro)  canonopt="--define-macro"; optarg="$2"; inc=2;;
(--define-macro=*) canonopt="--define-macro"; optarg="$( echo "$1" | sed -E "s^--define-macro=^^" )"; inc=1 ;;
(--debug)   canonopt="--debug"; inc=1 ;;
(--completion=*) canonopt="--completion"; optarg="$( echo "$1" | sed -E "s^--completion=^^" )"; inc=1 ;;
(--comments-in-macros)   canonopt="--comments-in-macros"; inc=1 ;;
(--comments)   canonopt="--comments"; inc=1 ;;
(--assert)  canonopt="--assert"; optarg="$2"; inc=2;;
(--assert=*) canonopt="--assert"; optarg="$( echo "$1" | sed -E "s^--assert=^^" )"; inc=1 ;;
(--ansi)   canonopt="--ansi"; inc=1 ;;
(--all-warnings)   canonopt="--all-warnings"; inc=1 ;;
# END GENERATED FROM gcc_cc1_optlines | optlines_to_caselines
        (-) # stdin/stdout
            # this is a filename -- do something with it
            input_files_by_argposn[$realposn]="$1"
        ;;
        (-*)    # unrecognised option
            echo "WARNING: unrecognised optionlike argument $1; assuming argumentless" 1>&2
            echo "Try: diff -u <( sed -n \$'/# BEGIN GENERATED FROM gcc_cc1_optlines/,\$ p\\n/# END GENERATED FROM gcc_cc1_optlines/ q' "$0" ) <( . "$0" && gcc_cc1_optlines ${cc1} | optlines_to_caselines )"
            # what to do? assume it's an option with no argument
            canonopt="$1"; inc=1
        ;;
        (*)
            # this is a filename -- do something with it
            input_files_by_argposn[$realposn]="$1"
        ;;
    esac
    # We just got "canonopt" and "optarg" -- do something with them.
    # We are keeping:
    # input_files_by_argposn  sparse array, one entry for each arg that is an input file
    # canonopts_by_argposn    sparse array, one entry for each arg that is an option
    # inc_by_argposn          sparse array, one entry for whenever there is an 'inc' > 1
    # optposns_by_opt         associative array, one entry (space-sep list of indices) per canonopt seen
    # argposns_by_opt         associative array, one entry (space-sep list of indices) per canonopt seen
    #    ^-- is this really useful? for a JARG it gives us the whole opt, not the isolated optarg
    #    Maybe we should just use the inc and keep optargs_by_argposn? YES
    # optargs_by_argposn      sparse array, one entry (the optarg) for each arg that embodies an optarg
    # incs_by_argposn         how many to increment argpos by to get to the next input file or opt
    # REMEMBER: be consistent about "posn" versus "pos"
    # We need to remember 'increments' on a per-argposn basis.
    # We extend this to capture the optarg also.
    # At any position, there may be an optarg... e.g. for -foo=bar, "bar" is at
    # whatever position "-foo" is at, but for "-foo bar", "bar" is at the next position.
    if [[ $inc -gt 1 ]]; then incs_by_argposn[$realposn]="$inc"; fi
    if [[ -n "$canonopt" ]]; then
        canonopts_by_argposn[$realposn]="$canonopt"
        existing_optposns_for_this_opt="${optposns_by_opt["$canonopt"]}"
        optposns_by_opt["$canonopt"]="${existing_optposns_for_this_opt:+${existing_optposns_for_this_opt} } $realposn"
        if [[ -n "$optarg" ]]; then
            # # remember arguments as a list of positions -- yes it's indirect but
            # # args may have spaces in them, which would mess up a space-separated list
            # existing_argposns_for_this_opt="${argposns_by_opt["$canonopt"]}"
            # argposns_by_opt["$canonopt"]="${existing_argposns_for_this_opt:+${existing_argposns_for_this_opt} } $realposn"

            # We have an arg and a canonopt, but since some optargs are JARGS,
            # the optarg may or may not be isolated in the argument list;
            # If it is, it is at the next argposn and inc is 2. Otherwise it is
            # jammed into the string at the current argposn and inc is 1.
            # (One day we may want to capture multiple args, in forms like
            # -foptimize-blah=foo, where both "blah" and "foo" are arguments.
            # That will make all the above 'case' statment more interesting but
            # it should still basically fit the model.
            optargs_by_argposn[$(( $realposn + $inc - 1))]="$optarg"
            # Also remember arguments as a list of positions -- yes it's indirect but
            # args may have spaces in them, which would mess up a space-separated list
            existing_argposns_for_this_opt="${argposns_by_opt["$canonopt"]}"
            argposns_by_opt["$canonopt"]="${existing_argposns_for_this_opt:+${existing_argposns_for_this_opt} } $realposn"
        fi
    fi

    # snarf the unmodified arg and increment realpos
    for n in `seq 1 $inc`; do
         { cc1_args[$realposn]="$1"
           shift && \
           realposn=$(( $realposn + 1 )) && \
           cc1_argcount=$(( $cc1_argcount + 1 ))
         } || return
    done
    
    # end of our top-level 'while' loop: if we're out of args, we returned above
    done
}

case "$0" in
    (*cflags|*cppflags|*cxxflags)
        /bin/echo -no-integrated-cpp -wrapper "$(readlink -f "$(dirname "$0")")"/wrapper
        exit 0
    ;;
    (*ldflags)
        /bin/echo -wrapper "$(readlink -f "$(dirname "$0")")"/wrapper
        exit 0
    ;;
    (*wrapper) # silently continue, i.e. actually act as a "-wrapper wrapper" command
        # If we're run via -wrapper, we can guess the driver from the parent process.
        # This screws with testing, e.g. a workflow where the human uses -### and then
        # tries to run the wrapper commands directly. In that case, the human must
        # set CC_DRIVER and this function will never be called. We have a failsafe
        # against being run from a shell, just in case. But guessing a plausible
        # driver command is hard, because something as simple as "cc file.c" is a
        # valid driver command.
        #driver="$( ps -p $PPID -o comm= )"
        if [[ -z "$CC_DRIVER" ]]; then
            driver_fullcmd="$( ps -p $PPID -o cmd= )"
            if looks_like_driver_command $driver_fullcmd ; then
                read driver rest<<<"$driver_fullcmd"
                debug_print 1 "driver binary might be $driver" 1>&2
                CC_DRIVER="$driver"
                CC_DRIVER_ARGS="$( quote_args "$rest" )"
            else
                # What's a sanity check we can do on the parent process? For now just rule out the stupids...
                # another approach might be to look at the whole parent command line and
                # test whether it's a plausible compiler command, and insist on CC_DRIVER if
                # we don't think it is plausible.
                # One test would be whether it has "-wrapper" in it!
                echo "Bailing as could not guess driver (parent command: $driver_fullcmd)" 1>&2
                exit 1
            fi
        fi
        export CC_DRIVER
        export CC_DRIVER_ARGS
        if [[ -z "$CC_DRIVER_ARGS" ]]; then
            echo "Warning: without CC_DRIVER_ARGS, cannot rewrite e.g. cpp-specific option -foo to -Wp,-foo (for driver)" 1>&2
        fi
        # FIXME: scrape 'as' and 'ld' from $@, if they look like as/ld commands?
    ;;
    (*wrap) # assume the next argument is a driver command, and use -### to interrogate it,
            # i.e. act as a "ccwrap" commad in "ccwrap cc ..." ...
            # To do this we call ourselves as a wrapper
        CC_DRIVER="$1"
        export CC_DRIVER
        declare -a real_args
        ctr=0
        just_output=0
        while shift; do
            case "$1" in
                ('') ;;
                ('-###') just_output=1 ;;&
                (*)
                    real_args[$ctr]="$1"
                ;;
            esac
            ctr=$(( $ctr + 1 ))
        done
        CC_DRIVER_ARGS="$( quote_args "${real_args[@]}" )"
        export CC_DRIVER_ARGS
        # Now we need to implement "-wrapper" ourselves, in effect, given a driver $driver
        # that does not support "-wrapper" but does support "-###".
        # What we do next depends on whether "-###" appears in the command already.
        # If it does, we output the command we *would* run.
        # If it doesn't, we actually run them.
        output_stderr="$( ${CC_DRIVER} -\#\#\# "${real_args[@]}" 2>&1 1>&2 )"
        status=$?
        # Every legit command should begin with a space and contain a double quote
        # or a single quote or '-o'
        cmdline_filter="^ .*\([\"']\|-o\)"
        echo "Got -### status $status and output: $output_stderr" 1>&2
        # Did our command actually trigger the "-###" behaviour?
        # If so, we should get at least one line matching "$cmdline_filter"
        # and also a 'Target:' and a 'Thread model:' line. If we don't get these,
        # we assume the compiler did nothing but print some informative output, so
        # we echo that and repeat its return status.
        { grep "$cmdline_filter" <<<"$output_stderr" >/dev/null && \
           grep "^Target:" <<<"$output_stderr" >/dev/null && \
           grep "^Thread model:" <<<"$output_stderr" >/dev/null; } || \
           { echo "Wrapper-degenerated $0" 1>&2; echo "$output_stderr" 1>&2; exit $status; }
        # What if we got that output because the -### was already in the command line?
        # Then we still need to wrap -- we need to output the wrapped command.
        # What's our "wrapper" self? Look for an alias of ourselves, in the
        # containing directory, whose name matches "*wrapper"
        our_realpath="$(readlink -f "$0")" #"
        ourselves_as_wrapper="$( ls "$(dirname "$our_realpath")"/*wrapper | while read cand; do
            if [[ "$(realpath "$cand")" == "$our_realpath" ]]; then
                echo "$cand"; break
            fi
        done )"
        if [[ -z "$ourselves_as_wrapper" ]]; then
            echo "Could not identify wrapper alias for $0" 1>&2
            exit 1
        else
            echo "Identified ourselves as wrapper: $ourselves_as_wrapper" 1>&2
        fi
        status=0
        while read cmdline; do
            if [[ $just_output -eq 1 ]]; then
                echo "$ourselves_as_wrapper" $cmdline 1>&2
                status=0
            else
                debug_print 1 "REALLY DOING (driver: $CC_DRIVER): " "$ourselves_as_wrapper" \
                   "$cmdline" 1>&2  
                "$ourselves_as_wrapper" $( eval echo $cmdline ) # cmdline is quoted
                status=$?
                debug_print 1 "Got status $status"
            fi
            if ! [[ $status -eq 0 ]]; then exit $status; fi
        done <<<"$( echo "$output_stderr" | grep "$cmdline_filter" )"
        exit $status
    ;;
    (real-ld)
        # A neat trick for wrapping ld within collect2... see below.
        ${LD:-ld} "$@"
        status=$?
        exit $status
    ;;
    (*) # we're being run as another command -- just being sourced?
        return >/dev/null 2>&1 || { echo "Did not understand our own name: $0" 1>&2; exit 1; }
    ;;
esac

# we want it to be possible to write wrappers
# as shell functions, not just commands.
do_exec () {
    debug_print 1 "Doing: $@"
#    exec "$@"
    "$@"
    status=$?
    exit $status
}

# We want to allow a "drop-in cpp replacement" when in fact, when
# compiling C code, even with -no-integrated-cpp, cpp /per se/ is never run.
# Rather, a separate cc1 invocation is done... but the details of its command
# line are rather compiler-specific. We try to turn these into cpp options.
#
# In this and subsequent functions we take a full command, i.e. with "$1" being
# the command name, even though we only really care about the options. This is
# to allow us to write "while shift || break ...", which is handy since bash
# lacks a do--while loop. The alternative "while true" has the downside that a
# "continue" will make it loop infinitely.

set_cc1_options () {
    declare -a cc1_options
    declare -a cc1_option_argcounts
    # At first I wanted to use an associative array, cc1_options_with_args
    # s.t. indexing it with [k] will give the argument to option k.
    # However, this doesn't work if there any repeated-with-different-args options,
    # and duh, obviously, there are: -I is one.
    # Instead we can track the argcount at each position.
    # Then if you want to walk by chunk, you can just do ctr=$(( $ctr + 1 + ${argcount[$ctr]} ))

    # Perhaps a single walk_cc1_args function can be enough.
    # What do we do with the driver args? Do we walk those too?
    # What about the "privileged" options that a subcommand can assume come first?
    #
    # Our core task is turning cc1 options back into driver options
    # (we don't do this for 'as' or 'ld' -- we just call them).
    # However, in order to do this we need to test for presence of "-opt" in
    # the driver option (or more likely, "-Wp,-opt", or "-opt" preceded by "-Xpreprocessor", etc.)
    #
    # I think we should build a third array, cc1_option_positions
    # that is actually associative
    # and
    # whose entries are things like "1 2 3" if we do "cc -Iblah -Ifoo -Ibaz"
    # and so on.
    
    # TODO:
    # basic version supporting -Wp,-blah and -Xpreprocessor blah correctly
    # support gcc  -v --help correctly (can we wrap such an invocation with ccwrap? with wrapper, if gcc even runs the wrapper in such cases?)
    # test against the output of -v --help somehow -- maybe just test our option parser function in isolation?
    #        ... that it can roundtrip a synthetic command line consisting of every option (with a synthetic argument as needed)?
    #        ... similar test for cc1 as for cc
    # remember that -Wl,...,... can have many comma-separated arguments,
    # and these get translated into distinct arguments! So we don't have to check just for
    # -Wp,-blah, but rather, for any -Wp, we need to look for -blah to the right of a comma
    # (and followed by a comma or end-of -string)
    # (AND then cross-check context s.t. we only flag if the surrounding args match the rest
    # of the -Wp,... sequence?)
    # Hmm.
    # Is there a way to scrape a source file from gcc that defines all these
    # and then interpret that?
    # We could possibly parse the output of gcc -v --help,
    # just focusing on the driver and cc1 parts.
    #
    # NOTE interestingly:
    # "Options starting with -g, -f, -m, -O, -W, or --param are automatically
    # passed on to the various sub-processes invoked by gcc.  In order to pass
    # other options on to these processes the -W<letter> options must be used.
    #
    # ... in other words, *anything* matching -g*, -f*, -m*, -O* and --param*
    #       (usually "--param=*" is the form)
    # is accepted by the driver and passed to cc1? It appears not: if I try -fblah,
    # it is 'gcc' not 'cc1' that reports the error, unlike with '-Xpreprocessor -blah'.
    # I think we should scrape "-v --help" only for testing purposes,
    # and open-code some globs.
    # However, our open-coded glob cases might be generated from some script over -v --help.
    # We  could even embed that scripts
}

# Lifting is harder than scanning. E.g. lifting -blah to -Wp,-blah
# And remember we can have sequences
# of arguments separated by ',' so we need to match sequences of lowered arguments.
# And remember that we have all the normalization stuff to add,
# and the fact that -MD is different in cc1 (it takes an arg) vs driver/cpp (it doesn't).
# So we can't just merge all the options together, at least not before normalizing these away.

write_cpp_options_from_cc1_command () {
    declare -a norm_cc1_command
    write_norm_cc1_options_from_cc1_command "$@"
    # the normalized options lack the initial command, so add it back
    do_write_cpp_options_from_normalized_cc1_command "$1" "${norm_cc1_options[@]}"
}
# take a cc1 command with normalized options, write cpp options
do_write_cpp_options_from_normalized_cc1_command () {
    ctr=0
    while shift || break; do
        debug_print 2 "\$# is $#, \$1 is '$1'" 1>&2
        if [[ $# -eq 0 ]]; then break; fi
        case "$1" in
            # we are running our own cpp-alike -- filter out non-cpp args # FIXME: not good just to drop these
            (-imultiarch|-iremap*|-auxbase|-auxbase-strip) shift || break ;; # skip arg too
            (-quiet|-fhonour-copts) ;; # skip just it
            (*)
                debug_print 2 "Write-cpp: snarfing $1" 1>&2
                cpp_options[$ctr]="$1"
                ctr=$(( $ctr + 1 ))
            ;;
        esac
    done
    # Finally, if we were called with CPP="/path/to/cpp -some_arg -another_arg"
    # (say by an automake-generated Makefile)
    # we may want to deduplicate arguments between that cpp and us.
    # We assume that no argument added to CPP has duplicate-sensitive or
    # position-sensitive meaning.
    # PROBLEM: this doesn't work if normalization changed a word syntactically,
    # which it does with -D et al. Need to act earlier
    if [[ -n "$CPP" ]]; then
        declare -a norm_cpp_command
        word_is_present () {
            for w in "${cpp_options[@]}"; do
                debug_print 2 "Comparing $w against $1" 1>&2
                if [[ "$w" == "$1" ]]; then
                    return 0
                else
                    true
                fi
            done
            return 1
        }
        ctr=0
        for word in $CPP; do
            if word_is_present "$word"; then
                debug_print 1 "Dropping $w from CPP" 1>&2
            else
                norm_cpp_command[$ctr]="$word"
                ctr=$(( $ctr + 1))
            fi
        done
        CPP=""
        for w in "${norm_cpp_command[@]}"; do
            CPP="${CPP:+$CPP }$w"
        done
    fi
}

write_cc_options_from_cc1_command () {
    declare -a norm_cc1_options
    write_norm_cc1_options_from_cc1_command "$@"
    # the normalized options lack the initial command, so add it back
    do_write_cc_options_from_normalized_cc1_command "$1" "${norm_cc1_options[@]}"
}
# given command, write options
do_write_cc_options_from_normalized_cc1_command () {
    debug_print 1 "writing cc options for $@" 1>&2
    ctr=0
    while shift || break; do
        debug_print 2 "\$# is $#, \$1 is '$1'" 1>&2
        if [[ $# -eq 0 ]]; then break; fi
        case "$1" in
            # we are running our own .i-to-.s pass -- filter out cpp-only args # FIXME: not good just to drop these
            (-imultiarch|-iremap*|-auxbase|-auxbase-strip) shift || break ;; # skip arg too
            (-quiet|-fhonour-copts) ;; # skip just it
            (-MD|-MMD) # NASTY: with cc1, -MD has an argument! it's the filename, like with -MF.
                # with cc or cpp, we have to use -MM?D -MF
                cc_options[$ctr]="$1"
                ctr=$(( $ctr + 1 ))
                shift # now $1 is the filename argument
                cc_options[$ctr]="-MF"
                ctr=$(( $ctr + 1 ))
                cc_options[$ctr]="$1"
                ctr=$(( $ctr + 1 ))
            ;;
            (*)
                # FIXME: lift back -Wp,_   and re-insert -Xpreprocessor
                debug_print 2 "Write-cc: snarfing $1" 1>&2
                cc_options[$ctr]="$1"
                ctr=$(( $ctr + 1 ))
            ;;
        esac
    done
}

declare -a infiles
# We run a normalizing pass on a cc1 command, to remove some awkward forms from it.
# NOTE: normalizing cc1 options does not remove the nasty "-MD <argument>" form.
#
# What does it do?
# It tries to enumerate input files, but is very imprecise at present.
# It identifies the output file, pulling out "-o" and then re-adding it (pointlessly).
#
# The main purpose is to rewrite cases where a single cc1 invocation works, but
# splitting into separate preprocessing and compilation invocations doesn't.
# The main thing currently is to futz with options to avoid a breaking interaction
# between -Werror, -D_FORTIFY_SOURCE and -Os.
write_norm_cc1_options_from_cc1_command () {
    prev_arg=""
    inctr=0
    ctr=0
    outfile=""
    saw_E=""
    saw_Os=""
    saw_Werror=""
    saw_D_FORTIFY_SOURCE=""
    while shift || break; do
        if [[ $# -eq 0 ]]; then break; fi
        debug_print 2 "\$# is $#, \$1 is '$1'" 1>&2
        not_infile=""
        case "$1" in
            (-o)
                outfile="$2"
                shift
            ;; # don't keep matching; we've shifted
            (-E) saw_E=1;
                ;;& # then keep matching... want to hit "-*" below
            (-Os) saw_Os=1
                ;;& # then keep matching
            (-Werror) saw_Werror=1
                ;;& # then keep matching
            (-D_FORTIFY_SOURCE|-D_FORTIFY_SOURCE=*) saw_D_FORTIFY_SOURCE=1; pos_D_FORTIFY_SOURCE=$ctr
                ;;& # then keep matching
            (_FORTIFY_SOURCE|_FORTIFY_SOURCE=*)
                if [[ "$prev_arg" == "-D" ]]; then
                    saw_D_FORTIFY_SOURCE=1; pos_D_FORTIFY_SOURCE=$(( $ctr - 1 ))
                fi
                ;;& # then keep matching
            (-) # it denotes stdin, so is an infile
                # (the case of a stdout outfile was handled above)
                infiles[$inctr]="$1"
                inctr=$(( $inctr + 1 ))
            ;;& # then keep matching
            (-*) # looks like an option, so assume it's NOT an infile
                 # though FIXME: that could be wrong if we've seen '--'? Does gcc accept this?
                 # NO. It does not. "gcc: error: unrecognized command-line option '--'"
            ;;&
            ([^-]*)
                # FIXME: this is super-imprecise.
                # A useful regex for scraping the gcc man page for opts-with-args:
                # -[-a-z0-9]+ [^-[:blank:]]
                case "$prev_arg" in
                    (-D|-U|-x|-aux-info|-dumpbase|-auxbase|-I|-i[a-z]*|-X*|-u|-T|--param|-G|-MF|-MD|-MMD)
                    ;; # it's the opt's arg
                    (*)
                        # it may be an input file
                        infiles[$inctr]="$1"
                        inctr=$(( $inctr + 1 ))
                    ;;
                esac
            ;;&
            (*)
                debug_print 2 "Normalize: snarfing $1" 1>&2
                norm_cc1_options[$ctr]="$1"
                ctr=$(( $ctr + 1))
            ;;
        esac
        prev_arg="$1"
    done
    # re-add -o
    if [[ -n "$outfile" ]]; then
        norm_cc1_options[$ctr]="-o"
        ctr=$(( $ctr + 1))
        norm_cc1_options[$ctr]="$outfile"
        ctr=$(( $ctr + 1))
    fi
    # if we saw -Os and -Werror and -D_FORTIFY_SOURCE, then we have a problem:
    # -Os adds a builtin #define of _FORTIFY_SOURCE which triggers a multiple
    # definition warning, hence error. The integrated cpp avoids this, presumably
    # by detecting the already-present -D_FORTIFY_SOURCE. Arguably the client
    # is at fault, although it's not documented that -Os implies -D_FORTIFY_SOURCE.
    # HACK: if we saw all three, change -D_FORTIFY_SOURCE to -U_...
    if [[ -n "$saw_Os" ]] && [[ -n "$saw_Werror" ]] & [[ -n "$saw_D_FORTIFY_SOURCE" ]]; then
        # another HACK: to handle separate "-D" and "_FORTIFY_SOURCE", we only assume that
        # the pos records where the "-D" is
        case "${norm_cc1_options[$pos_D_FORTIFY_SOURCE]}" in
            (-D) # rewrite the next one too
                norm_cc1_options[$pos_D_FORTIFY_SOURCE]="-U"
                norm_cc1_options[$(( $pos_D_FORTIFY_SOURCE + 1 ))]="$( echo "${norm_cc1_options[$(( $pos_D_FORTIFY_SOURCE + 1 ))]}" | sed 's/=.*//' )"
            ;;
            (-D_FORTIFY_SOURCE*)
                norm_cc1_options[$pos_D_FORTIFY_SOURCE]="$( echo "${norm_cc1_options[$pos_D_FORTIFY_SOURCE]}" | sed 's/-D/-U/' | sed 's/=.*//' )"
            ;;
        esac
    fi
}

# utility for as-wrappers
parse_assembler_command () {
    debug_print 1 "My as: $@" 1>&2
    as="$1"
    shift
    declare -ga as_args
    declare -ga as_infiles
    for a in `seq 1 $#`; do
        as_args[$ctr]="${!a}"
        ctr=$(( $ctr + 1 ))
    done
    declare -ga as_options
    ctr=0
    while expr match "$1" '^-.*' >/dev/null; do
        as_options[$ctr]="$1"
        ctr=$(( $ctr + 1 ))
        case "$1" in
            ('--')  # no more args
                shift; break
            ;;
            # options taking a non-option-looking argument
            ('-o')
                as_outfile="$2"
            ;;&
            (--debug-prefix-map|-I|--MD|-o)
                as_options[$ctr]="$2"
                ctr=$(( $ctr + 1 ))
                shift
            ;;
            (-*)
                # some other option
            ;;
            (*) # error!
                debug_print 1 "Unrecognised 'as' option: $1" 1>&2
                false
            ;;
        esac
        shift || break
    done
    debug_print 1 "as args left over ($#): $@" 1>&2
    ctr=0
    for a in `seq 1 $#`; do
        as_infiles[$ctr]="${!a}"
        ctr=$(( $ctr + 1 ))
    done
}

# old version
#cc1_command_is_pp () {
#    local ctr=0
#    saw_pp=0
#    outpos=0
#    doing_m=0
#    declare -a seen_args
#    while shift; do
#        ctr="$(( $ctr + 1 ))"
#        seen_args[$ctr]="$1"
#        if [[ -z "$1" ]]; then continue; fi
#        case "$1" in
#         (-o) outfile="$2"; outpos="$(( $ctr + 1 ))";;
#         (-M|-MM) doing_m=1 ;;
#         (-E) saw_pp=1 ;;
#        esac
#    done
#    # If we didn't see an output file, it might mean that
#    # - the default output filename is being used (DOES the driver do this?)
#    # - the output is going to stdout, and it's a make rule (-M, -MM)
#    # - the output is actual compilation stuff and -pipe is being used?
#    # FIXME: support this case once we've seen an example.
#    if [ $outpos -eq 0 ] && ! [ $doing_m -eq 1 ]; then
#        echo "FIXME: can't work with cc1/cc1plus commands with no output file" 1>&2
#        exit 1
#    fi
#    # if we're only preprocessing, or if we have no explicit output file, just run cc1
#    if [ "$saw_pp" -eq 0 ]; then
#        debug_print 1 "Wrapping cc1, we don't seem to be doing preprocessing; args ${seen_args[@]}" 1>&2
#        false
#    else
#        debug_print 1 "Wrapping cc1, we seem to be doing a preprocessing step; args ${seen_args[@]}" 1>&2
#        true
#    fi
#}
list_optposns () {
    output=""
    initargs="$@"
    for n in `seq 1 $#`; do
        arg="${!n}"
        # echo "O considering $arg (${!optposns_by_opt[*]})" 1>&2
        if [[ -v optposns_by_opt[$arg] ]]; then
            output="${output:+${output},}$(echo "${optposns_by_opt[$arg]}" | tr -s '[:blank:]' ',' )"
        fi
        #shift || break
    done
    #echo "optposns for ${initargs}: $output" 1>&2
    echo "$output"
}
list_argposns () {
    output=""
    initargs="$@"
    for n in `seq 1 $#`; do
        arg="${!n}"
        # echo "A considering $arg (${!argposns_by_opt[*]})" 1>&2
        if [[ -v argposns_by_opt[$arg] ]]; then
            output="${output:+${output},}$(echo "${argposns_by_opt[$arg]}" | tr -s '[:blank:]' ','  )"
        fi
    done
    #echo "argposns for ${initargs}: $output" 1>&2
    echo "$output"
}
get_optposn_unique () {
    local posnlist="$(list_optposns "$@")"
    case "$posnlist" in
        ('') # OK, we get nothing
        ;;
        (*,*) # not OK
            echo "Error: option {$@} does not appear uniquely" 1>&2
            exit 1
        ;;
        (*) # OK, we get something unique
            echo "${cc1_args[$posnlist]}"
        ;;
    esac
}
get_argposn_unique () {
    local posnlist="$(list_argposns "$@")"
    case "$posnlist" in
        ('') # OK, we get nothing
        ;;
        (*,*) # not OK
            echo "Error: option {$@} does not appear (with an argument) uniquely" 1>&2
            exit 1
        ;;
        (*) # OK, we get something unique
            echo "${cc1_args[$posnlist]}"
        ;;
    esac
}
get_optposn_greatest () {
    list_optposns "$@" | tr ',' '\n' | sort -rn | head -n1
}
get_argposn_greatest () {
    list_argposns "$@" | tr ',' '\n' | sort -rn | head -n1
}
cc1_command_is_pp () {
    # we're pp iff we saw -E  and we are not suppressing pp output via -M or -MM
    case "$(list_optposns "-M" "-MM")" in
        ('') local doing_m=0 ;;
        (*)  local doing_m=1 ;;
    esac
    case "${optposns_by_opt["-E"]}" in
        ('') return 1 # not pp
        ;;
        (*) # looks like it is pp, but are we suppressing preprocessor output?
            if [[ $doing_m -eq 1 ]]; then
                return 1 # not pp, because we do not generate any preprocessor output
            else
                return 0 # is pp
            fi
        ;;
    esac
}

# How do we walk the arguments we scanned and simply repeat them?
noop_cc1 () {
    # The basic idea is to walk over the non-optarg indices.
    # "canonopt" isn't necessarily a form that will work if we use it
    # as an option, so we want to output the args as they really came in.
    argposn=1
    while [[ $argposn -lt $cc1_argcount ]]; do
        echo -n "${argposn}: ${cc1_args[$argposn]}"
        inc=${incs_by_argposn[$argposn]:-1}
        for n in `seq $(( $argposn + 1 )) $(( $argposn + $inc - 1 ))`; do
            echo -n " "
            echo -n "${cc1_args[$n]}"
        done
        echo -n " ("
        echo -n "inc is $inc; "
        if [[ -n "${input_files_by_argposn[$argposn]}" ]]; then
            echo -n "input file"
        else
            echo -n "option, canonically \`${canonopts_by_argposn[$argposn]}'"
            if [[ $inc -eq 1 ]]; then
                # we scraped the optarg, if there was one
                local maybe_optarg="${optargs_by_argposn[$argposn]}"
                if [[ -n "$maybe_optarg" ]]; then
                    echo -n ", joined argument \`$maybe_optarg'"
                fi
            fi
        fi
        echo ")"
        argposn=$(( $argposn + $inc ))
    done
}
lift_cc1_to_cc () {
    # this is hard.
    # but a first cut is almost a no-op
    # - rewrite -MD into -MD -MF
    #     -- can cc1 take -MD _ -MF _? yes, but the later overrides the earlier
    #     -- so we rewrite to -MD -MF <later-given filename>
    # - drop anything not driver-friendly (patterns?)
    # - END first cut!
    # - if we're pp, handle -Wp and -Xpreprocessor
    #     -- this means looking at CC_DRIVER_ARGS:
    #        collect -Wp args, ','-splitting each of them
    #        collect -Xpreprocessor args
    #        If a cc1 arg appears uniquely in one of these contexts in the driver command,
    #        prefix it with -Xpreprocessor.
    #        If it appears both in such a context and not, warn the user and do nothing.
    #        GAH. In the case of -Wp,arg1,arg2, we need to put -Xpreprocessor before
    #        both arg1 and arg2. So let's scan the driver command, not the cc1 command.
    #        Any arg we identify in the driver command that appears uniquely in the cc1 command
    #        should get the prefix.
    outctr=0
    md_argind="$(get_argposn_greatest "-MD" "-MMD")"
    mf_argind="$(get_argposn_greatest "-MF" )"
    # echo "md, mf arginds: $md_argind, $mf_argind" 1>&2
    local inposn=1
    while [[ $inposn -lt ${cc1_argcount} ]]; do
        arg="${cc1_args[$inposn]}"
        # If we have -MD,
        # and if this is -MF, or if it's -MD or -MMD but not the greatest md argind,
        # skip it and its argument
        # Else if it's -MD or -MMD, include it and also a -MF (slurped using the greatest argind
        # of *either* md *or* mf argind)
        if [[ -n "$md_argind" ]]; then
            if [[ "$arg" == "-MF" ]]; then
                # skip it and its argument
                inposn=$(( $inposn + 2 ))
                continue
            fi
            if [[ "$arg" == "-MD" ]] || [[ "$arg" == "-MMD" ]] && [[ $inposn -lt $md_argind ]]; then
                # skip it and its argument
                inposn=$(( $inposn + 2 ))
                continue
            fi
            if [[ "$arg" == "-MD" ]] || [[ "$arg" == "-MMD" ]]; then
                outargs[$outctr]="$arg"; outctr=$(( $outctr + 1 ))
                outargs[$outctr]="-MF"; outctr=$(( $outctr + 1 ))
                outargs[$outctr]="${cc1_args[$(($inposn + 1))]}"; outctr=$(( $outctr + 1 ))
                inposn=$(( $inposn + 2 ))
                continue
            fi
        fi
        # how many will we inc by?
        inc=${incs_by_argposn[$inposn]:-1}

        # do the output, unless we are skipping
        case "$arg" in
            # NASTY. These are options which we don't know how to lift up to driver options,
            # and which the driver rejects. We could just drop them... not good!
            # Maybe we could try to pass them through with -Wp,xxx?
            # That would only affect preprocessing, though.
            # If there was a -Wc,xxx equivalent, we could put them there too.
            # We can't create such an option because the driver would reject it.
            # We could use an environment variable, I guess... what would we do?
            # We would have to add it back in when we create a no-pp cc1 invocation.
            # But we never make such a cc1 invocation! We just do $CC -S and remove
            # ourselves from the loop (i.e. we don't re-pass 'wrapper'). We could
            # in extremis create a trivial wrapper that exists *just* to add these
            # options back in, and use that. So our default CC could be something
            # like "$CC -wrapper /path/to/mini-wrapper -S ${CC1_ADDBACK}".
            # This is ugly; I won't do this until/unless a need is identified.
            # BUT I can put it back for preprocessing with -Wp right here.
            (-imultiarch|-iremap*|-auxbase|-auxbase-strip|-quiet|-fhonour-copts)
                # OK, do the output
                outargs[$outctr]="-Wp,$arg"; outctr=$(( $outctr + 1 ))
                # output any separate arg
                for n in `seq $(( $inposn + 1 )) $(( $inposn + $inc - 1 ))`; do
                    outargs[$outctr]="-Wp,${cc1_args[$n]}"; outctr=$(( $outctr + 1 ))
                done
            ;;
            (*)
                # OK, do the output
                outargs[$outctr]="$arg"; outctr=$(( $outctr + 1 ))
                # output any separate arg
                for n in `seq $(( $inposn + 1 )) $(( $inposn + $inc - 1 ))`; do
                    outargs[$outctr]="${cc1_args[$n]}"; outctr=$(( $outctr + 1 ))
                done
            ;;
        esac

        inposn=$(( $inposn + $inc ))
    done
}

# In general, we want to run the command that the driver is running.
# To hook preprocessing, although we could wrap the GCC-private
# cc1/cc1plus command, we'd rather wrap the well-documented "cpp"
# command or the driver "cc -E". So we transform a preprocessing
# cc1/cc1plus call's args into args that work for a cpp call.
#
# We need to be able to scan a cc1 command correctly. However, it's
# partly up to the user what arguments the preprocessor accepts. For
# example, we have our own 'cilpp' preprocessor that also accepts
# -fplugin=... and -fpass-* options. If we use these with GCC, what
# happens? Do they get passed to the cc1 command? Yes, they do...
# even if it is also doing compilation proper. So with our wrapper,
# in the cilpp use case, we are simultaneously:
# - telling the driver to add some args [that are not known to the command
#     the driver wants to run]
# - wrapping the command run by the driver...
# - ... such that the added args are *not* seen by the underlying
#          preprocessing command that actually runs, but are
#          interpreted by the wrapper or another intermediary.
#
# So this means that we need to examine the driver command line also.
# If we want to do preprocessing by reinvoking the driver, we already
# had this problem: a cc1 arg '-blah' might need to become '-Wp,-blah'
# 
debug_print 1 "\$@ is $@" 1>&2
debug_print 1 "cmd_to_run is $1" 1>&2
debug_print 1 "`basename "$1"`-wrapping ($1): $@" 1>&2
case "$1" in
    (*/cc1|*/cc1plus|*/cc1obj)
        # How do we do this? cc1_command_is_pp is crusty and also scans the cc1 command.
        # Let's (1) scan it once, (2) apply the equivalent "is it pp?" test as currently,
        # (3) re-use our scanned results when we run our CPP or CC.
        declare -a cc1_args
        declare -a input_files_by_argposn
        declare -a canonopts_by_argposn
        declare -a inc_by_argposn
        declare -A optposns_by_opt
        declare -A argposns_by_opt
        declare -a optargs_by_argposn
        declare -a incs_by_argposn
        # FIXME: don't assume gcc; probe it
        # FIXME: make this contract of "will write the above arrays..." explicit somehow
        scan_gcc_cc1 "$@" # this writes vars
        # print out how we scanned the command line
        if [[ ${DEBUG_CC:-0} -gt 0 ]]; then
            noop_cc1 1>&2
        fi
        case "$(list_optposns "-o" "-output")" in
            ('') have_o=0 ;;
            (*)  have_o=1 ;;
        esac
        case "$(list_optposns "-M" "-MM")" in
            ('') doing_m=0 ;;
            (*)  doing_m=1 ;;
        esac
        if [[ "$(list_optposns "-o" "-output")" == "" ]] && \
           [[ "$(list_optposns "-M" "-MM" )"    == "" ]]; then
            # no output file... hmm
            echo "FIXME: can't work with cc1/cc1plus commands with no output file" 1>&2
            # this is totally fixable but requires us to reimplement cc1's rules for
            # generating the .s or .i output filename... 
            exit 1
        fi
        if cc1_command_is_pp "$@"; then
            CPP="${CPP:-${CC_DRIVER} -E}"
            # How do we do this?
            # 1. normalize away cc1 tricky cases  <-- sets norm_cc1_options
            # 2. scan cc1
            # 3. enlighten our CPP about the args it asked about
            # 3. lift to driver as we assume our CPP requires?
            #     or let it also tell us which it is?
            # declare -a cc_options
            #write_cc_options_from_cc1_command "$@"
            declare -a outargs
            lift_cc1_to_cc "$@"
            do_exec ${CPP} "${outargs[@]}"
        else
            CC="${CC:-${CC_DRIVER} -S}"
            #declare -a cc_options
            #write_cc_options_from_cc1_command "$@"
            declare -a outargs
            lift_cc1_to_cc "$@"
            do_exec ${CC} "${outargs[@]}"
        fi
        ;;
    (as|*/as)
        AS="${AS:-$1}" # don't call into driver again; 'as' is a documented tool
        debug_print 1 "command is $@" 1>&2
        orig_as="$1"
        # set some variables that our wrapped AS might use, if a shell function
        parse_assembler_command "$@" 
        shift
        do_exec ${AS} "$@"
        ;;
    (collect2|*/collect2)
        # We want to actually run collect2 but allow wrapping
        # the straight link commands that it would run.
        # https://gcc.gnu.org/onlinedocs/gccint/Collect2.html
        # ... collect2 runs the linker once, then maybe runs it again
        # with an extra (generated) input. (Sounds familiar!)
        # If we just pretend it's like ld, then collect2's
        # initialization stuff won't happen.
        # Perhaps we can do this by always running collect2 here, but
        # exploiting its rules for where it finds its 'ld' command. Those are:
        # "1. a hard coded linker file name, if GCC was configured with the --with-ld option.
        #  2. real-ld in the directories listed in the compiler's search directories.
        #  3. real-ld in the directories listed in the environment variable PATH.
        #  4. The file specified in the REAL_LD_FILE_NAME configuration macro, if specified.
        #  5. ld in the compiler's search directories, except that collect2 will not execute itself recursively.
        #  6. ld in PATH.
        #  ... where "the compiler's search directories" means all the directories where
        #     gcc searches for passes of the compiler. This includes directories that you
        #     specify with -B."
        # So we could prefix our own -B option to do this, and provide a 'real-ld' in it.
        # Obviously the directory would be our own directory and real-ld would be a symlink
        # to us. One problem: how do we tell collect2 to search this directory? It does not
        # support -B itself! Instead we have to put it in COLLECT_GCC_OPTIONS.
        collect2_cmd="$1"
        shift
        export COLLECT_GCC_OPTIONS="'-B' '$(dirname "$(readlink -f "${our_filename}")")' #"
        do_exec "${collect2_cmd}" "$@"
        ;;
    (ld|*/ld)
        # if the driver wants to run 'ld' direcly, that's OK. We can wrap it
        LD="${LD:-$1}"  # don't call into driver again; ld is a documented tool
        shift
        do_exec ${LD} "$@"
        ;;
    (*) debug_print 1 "Actually not wrapping: $@" 1>&2
        do_exec "$@"
        ;;
esac
